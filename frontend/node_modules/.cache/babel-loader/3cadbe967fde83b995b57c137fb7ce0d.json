{"ast":null,"code":"import _slicedToArray from \"/Users/markheij/ipmedth_airsupport/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/markheij/ipmedth_airsupport/frontend/src/dashboard/nodeTable.js\";\nimport React from 'react';\nimport Link from '@material-ui/core/Link';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Title from '../components/Title';\nimport Firebase from \"firebase\"; // Generate Order Data\n\nfunction createData(id, name, group, lastSeen, temp) {\n  return {\n    id,\n    name,\n    group,\n    lastSeen,\n    temp\n  };\n}\n\nfunction getRndInteger(min, max) {\n  return Math.floor(Math.random() * (max - min + 1)) + min;\n}\n\nconst rows = [];\n\nfunction preventDefault(event) {\n  event.preventDefault();\n}\n\nconst useStyles = makeStyles(theme => ({\n  seeMore: {\n    marginTop: theme.spacing(3)\n  }\n}));\nexport default function NodeTable() {\n  const _React$useState = React.useState(false),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        loaded = _React$useState2[0],\n        isItLoaded = _React$useState2[1];\n\n  var user = Firebase.auth().currentUser;\n\n  if (user) {\n    const uid = user.uid;\n    Firebase.firestore().collection(uid).get().then(function (querySnapshot) {\n      querySnapshot.forEach(function (doc) {\n        // doc.data() is never undefined for query doc snapshots\n        //console.log(doc.id, \" => \", doc.data());\n        let nodedata = doc.data();\n        let idn = doc.id;\n        let groupn = nodedata.group;\n        let namen = nodedata.name;\n        let statusn = \"Online\"; //nodedata.status\n\n        let temp = getRndInteger(25, 30);\n        let nodeExists = false;\n        let newnode = createData(idn, namen, groupn, statusn, temp);\n        rows.forEach(function (n) {\n          if (n.id === idn) {\n            nodeExists = true;\n          } else if (idn === \"nodes\") {\n            nodeExists = true;\n          } else {//nothing, node is already in the list\n          }\n        });\n\n        if (!nodeExists) {\n          rows.push(newnode);\n        }\n      });\n      isItLoaded(true);\n    });\n  } else {}\n\n  const classes = useStyles();\n  return React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, React.createElement(Title, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, \"Nodes status\"), React.createElement(Table, {\n    size: \"small\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, React.createElement(TableHead, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, React.createElement(TableRow, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, React.createElement(TableCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, \"Name\"), React.createElement(TableCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, \"Group\"), React.createElement(TableCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, \"Status\"), React.createElement(TableCell, {\n    align: \"right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, \"Temp\"))), React.createElement(TableBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, rows.map(row => React.createElement(TableRow, {\n    key: row.id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, React.createElement(TableCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }, row.name), React.createElement(TableCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, row.group), React.createElement(TableCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, row.lastSeen), React.createElement(TableCell, {\n    align: \"right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, row.temp))))), React.createElement(\"div\", {\n    className: classes.seeMore,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }, React.createElement(Link, {\n    color: \"primary\",\n    href: \"#\",\n    onClick: preventDefault,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }, \"Add nodes\")));\n}","map":{"version":3,"sources":["/Users/markheij/ipmedth_airsupport/frontend/src/dashboard/nodeTable.js"],"names":["React","Link","makeStyles","Table","TableBody","TableCell","TableHead","TableRow","Title","Firebase","createData","id","name","group","lastSeen","temp","getRndInteger","min","max","Math","floor","random","rows","preventDefault","event","useStyles","theme","seeMore","marginTop","spacing","NodeTable","useState","loaded","isItLoaded","user","auth","currentUser","uid","firestore","collection","get","then","querySnapshot","forEach","doc","nodedata","data","idn","groupn","namen","statusn","nodeExists","newnode","n","push","classes","map","row"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Link from '@material-ui/core/Link';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Title from '../components/Title';\nimport Firebase from \"firebase\";\n\n\n\n\n// Generate Order Data\nfunction createData(id, name, group, lastSeen, temp) {\n  return { id, name, group, lastSeen, temp };\n}\n\nfunction getRndInteger(min, max) {\n  return Math.floor(Math.random() * (max - min + 1) ) + min;\n}\n\nconst rows = [\n];\n\n\n\n\n\nfunction preventDefault(event) {\n  event.preventDefault();\n}\n\nconst useStyles = makeStyles(theme => ({\n  seeMore: {\n    marginTop: theme.spacing(3),\n  },\n}));\n\nexport default function NodeTable() {\n  const[loaded, isItLoaded] = React.useState(false);\n  var user = Firebase.auth().currentUser;\n\n  if (user) {\n    const uid = user.uid;\n\n    Firebase.firestore().collection(uid).get().then(function(querySnapshot){\n      querySnapshot.forEach(function(doc) {\n        // doc.data() is never undefined for query doc snapshots\n        //console.log(doc.id, \" => \", doc.data());\n        let nodedata = doc.data();\n        let idn = doc.id;\n        let groupn = nodedata.group;\n        let namen = nodedata.name;\n        let statusn = \"Online\"; //nodedata.status\n        let temp = getRndInteger(25,30)\n        let nodeExists = false;\n\n\n        let newnode = createData(idn, namen, groupn, statusn, temp)\n        rows.forEach(function (n) {\n          if(n.id === idn){\n            nodeExists = true;\n          }else if (idn ===\"nodes\"){\n            nodeExists = true;\n          }else{\n            //nothing, node is already in the list\n          }\n        })\n\n        if (!nodeExists){\n          rows.push(newnode);\n        }\n\n\n      });\n      isItLoaded(true)\n    })\n\n  }else{\n\n  }\n\n\n\n  const classes = useStyles();\n  return (\n    <React.Fragment>\n      <Title>Nodes status</Title>\n      <Table size=\"small\">\n        <TableHead>\n          <TableRow>\n            <TableCell>Name</TableCell>\n            <TableCell>Group</TableCell>\n            <TableCell>Status</TableCell>\n            <TableCell align=\"right\">Temp</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {rows.map(row => (\n            <TableRow key={row.id}>\n              <TableCell>{row.name}</TableCell>\n              <TableCell>{row.group}</TableCell>\n              <TableCell>{row.lastSeen}</TableCell>\n              <TableCell align=\"right\">{row.temp}</TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n      <div className={classes.seeMore}>\n        <Link color=\"primary\" href=\"#\" onClick={preventDefault}>\n          Add nodes\n        </Link>\n      </div>\n    </React.Fragment>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}