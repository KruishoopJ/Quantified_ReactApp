{"ast":null,"code":"import _slicedToArray from \"/Users/markheij/ipmedth_airsupport/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/markheij/ipmedth_airsupport/frontend/src/App.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport { Nav, Navbar, NavItem } from \"react-bootstrap\";\nimport { LinkContainer } from \"react-router-bootstrap\";\nimport { Auth } from \"aws-amplify\";\nimport \"./App.css\";\nimport Routes from \"./Routes\";\n\nfunction App(props) {\n  const _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        isAuthenticated = _useState2[0],\n        userHasAuthenticated = _useState2[1];\n\n  const _useState3 = useState(true),\n        _useState4 = _slicedToArray(_useState3, 2),\n        isAuthenticating = _useState4[0],\n        setIsAuthenticating = _useState4[1];\n\n  useEffect(() => {\n    onLoad();\n  }, []);\n\n  async function onLoad() {\n    try {\n      await Auth.currentSession();\n      userHasAuthenticated(true);\n    } catch (e) {\n      if (e !== 'No current user') {\n        alert(e);\n      }\n    }\n\n    setIsAuthenticating(false);\n  }\n\n  async function handleLogout() {\n    await Auth.signOut();\n    userHasAuthenticated(false);\n    props.history.push(\"/login\");\n  }\n\n  return !isAuthenticating && React.createElement(\"div\", {\n    className: \"App container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, React.createElement(Navbar, {\n    fluid: true,\n    collapseOnSelect: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, React.createElement(Navbar.Header, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, React.createElement(Navbar.Brand, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, React.createElement(Link, {\n    to: \"/\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, \"Scratch\")), React.createElement(Navbar.Toggle, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  })), React.createElement(Navbar.Collapse, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, React.createElement(Nav, {\n    pullRight: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, isAuthenticated ? React.createElement(NavItem, {\n    onClick: handleLogout,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, \"Logout\") : React.createElement(React.Fragment, null, React.createElement(LinkContainer, {\n    to: \"/signup\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, React.createElement(NavItem, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, \"Signup\")), React.createElement(LinkContainer, {\n    to: \"/login\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, React.createElement(NavItem, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, \"Login\")), React.createElement(LinkContainer, {\n    to: \"/step1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, React.createElement(NavItem, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, \"Step1\")))))), React.createElement(Routes, {\n    appProps: {\n      isAuthenticated,\n      userHasAuthenticated\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }));\n}\n\nexport default withRouter(App);","map":{"version":3,"sources":["/Users/markheij/ipmedth_airsupport/frontend/src/App.js"],"names":["React","useState","useEffect","Link","withRouter","Nav","Navbar","NavItem","LinkContainer","Auth","Routes","App","props","isAuthenticated","userHasAuthenticated","isAuthenticating","setIsAuthenticating","onLoad","currentSession","e","alert","handleLogout","signOut","history","push"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport { Nav, Navbar, NavItem } from \"react-bootstrap\";\nimport { LinkContainer } from \"react-router-bootstrap\";\nimport { Auth } from \"aws-amplify\";\nimport \"./App.css\";\nimport Routes from \"./Routes\";\n\n\nfunction App(props) {\n  const [isAuthenticated, userHasAuthenticated] = useState(false);\n  const [isAuthenticating, setIsAuthenticating] = useState(true);\n\n  useEffect(() => {\n    onLoad();\n  }, []);\n\n  async function onLoad() {\n    try {\n      await Auth.currentSession();\n      userHasAuthenticated(true);\n    }\n    catch(e) {\n      if (e !== 'No current user') {\n        alert(e);\n      }\n    }\n\n    setIsAuthenticating(false);\n  }\n\n  async function handleLogout() {\n    await Auth.signOut();\n\n    userHasAuthenticated(false);\n\n    props.history.push(\"/login\");\n  }\n\n  return (\n  !isAuthenticating &&\n  <div className=\"App container\">\n    <Navbar fluid collapseOnSelect>\n      <Navbar.Header>\n        <Navbar.Brand>\n          <Link to=\"/\">Scratch</Link>\n        </Navbar.Brand>\n        <Navbar.Toggle />\n      </Navbar.Header>\n      <Navbar.Collapse>\n        <Nav pullRight>\n        {isAuthenticated\n        ? <NavItem onClick={handleLogout}>Logout</NavItem>\n        : <>\n            <LinkContainer to=\"/signup\">\n              <NavItem>Signup</NavItem>\n            </LinkContainer>\n            <LinkContainer to=\"/login\">\n              <NavItem>Login</NavItem>\n            </LinkContainer>\n            <LinkContainer to=\"/step1\">\n              <NavItem>Step1</NavItem>\n            </LinkContainer>\n          </>\n        }\n        </Nav>\n      </Navbar.Collapse>\n    </Navbar>\n    <Routes appProps={{ isAuthenticated, userHasAuthenticated }} />\n  </div>\n  );\n}\n\nexport default withRouter(App);\n"]},"metadata":{},"sourceType":"module"}