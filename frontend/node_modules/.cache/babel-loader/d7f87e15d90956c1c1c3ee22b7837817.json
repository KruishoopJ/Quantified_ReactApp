{"ast":null,"code":"var _jsxFileName = \"/Users/markheij/ipmedth_airsupport/frontend/src/steps/Step_8_Node_Add.js\";\nimport React, { Component } from 'react';\nimport QrReader from 'react-qr-reader';\nimport \"../containers/Home.css\";\nimport { Container, Typography, Box, Grid, SnackbarContent, Snackbar, TextField, Button, Input, withStyles } from '@material-ui/core';\nimport \"../steps/Step.css\";\nimport firebase from \"firebase\";\nimport Firebase from \"firebase\";\nlet isScanned = false;\nlet nid;\nexport default class step8 extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      result: ''\n    };\n\n    this.handleScan = data => {\n      var user = Firebase.auth().currentUser;\n\n      if (data) {\n        //try to parse JSON (if not JSON then bad QR code)\n        try {\n          var nodedata = JSON.parse(data);\n          console.log(nodedata); //if JSON check for quantified object (if not then bad QR code)\n\n          if (nodedata.hasOwnProperty(\"quantified\") || nodedata.hasOwnProperty(\"Quantified\")) {\n            console.log(\"Quantified\");\n            nid = nodedata.quantified.id;\n\n            if (user) {\n              const uid = user.uid;\n              Firebase.firestore().collection(uid).doc(nid).get().then(docSnapshot => {\n                if (docSnapshot.exists) {\n                  this.setState({\n                    result: \"Node was already added. Try another one!\"\n                  });\n                } else {\n                  Firebase.firestore().collection(uid).doc(nid).set(nodedata).then(function () {\n                    console.log(\"Written to firestore\");\n                  });\n                  this.setState({\n                    result: \"Node Scanned!\"\n                  });\n                  isScanned = true;\n                  console.log(isScanned);\n                }\n              });\n            } else {\n              console.log(\"No user\");\n              this.props.history.push(\"/login\");\n            }\n          } else {\n            this.setState({\n              result: \"Can't find node QR code\"\n            });\n          }\n        } catch (e) {\n          console.error(e);\n          this.setState({\n            result: \"Can't find node QR code\"\n          });\n        }\n      }\n    };\n\n    this.handleSubmit = event => {\n      event.preventDefault();\n      const nodesGroup = this.state.nodesGroup;\n      const nodesName = this.state.nodesName;\n      var user = Firebase.auth().currentUser;\n\n      if (user) {\n        const uid = user.uid;\n        console.log(\"uid: \" + uid);\n        console.log(\"nid: \" + nid);\n        Firebase.firestore().collection(uid).doc(nid).get().then(docSnapshot => {\n          if (docSnapshot.exists) {\n            Firebase.firestore().collection(uid).doc(nid).update({\n              name: nodesName,\n              group: nodesGroup\n            }).then(function () {\n              console.log(\"Written to firestore\");\n            }); //move to next step\n          } else {}\n        });\n      } else {\n        console.log(\"No user\");\n        this.props.history.push(\"/login\");\n      }\n    };\n\n    this.handleError = err => {\n      console.error(err);\n      this.setState({\n        result: \"Something went wrong! Did you use the QR code?\"\n      });\n    };\n\n    this.state = {\n      nodesName: '',\n      nodesGroup: ''\n    };\n    this.handleChangeName = this.handleChangeName.bind(this);\n    this.handleChangeGroup = this.handleChangeGroup.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChangeName(event) {\n    this.setState({\n      nodesName: event.target.value\n    });\n  }\n\n  handleChangeGroup(event) {\n    this.setState({\n      nodesGroup: event.target.value\n    });\n  }\n\n  render() {\n    return React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      container: true,\n      direction: \"column\",\n      alignItems: \"center\",\n      justify: \"center\",\n      spacing: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      variant: \"h3\",\n      align: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }, \"Nodes\"), React.createElement(Typography, {\n      display: \"block\",\n      variant: \"body1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }, !isScanned && \"Scan the QR code to add the node to the system\", isScanned && \"Give the node a name and assign it to a group\")), !isScanned && React.createElement(Grid, {\n      style: {\n        width: \"50%\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }, React.createElement(QrReader, {\n      delay: 300,\n      onError: this.handleError,\n      onScan: this.handleScan,\n      facingMode: \"environment\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }), React.createElement(Snackbar, {\n      open: open,\n      autoHideDuration: 2000,\n      onClose: handleClose,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }, React.createElement(SnackbarContent, {\n      message: this.state.result,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    })))), isScanned && React.createElement(Grid, {\n      item: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184\n      },\n      __self: this\n    }, React.createElement(Box, {\n      m: 1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      component: \"h1\",\n      variant: \"h6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186\n      },\n      __self: this\n    }, \"Node Name\"), React.createElement(Input, {\n      name: \"nodesName\",\n      placeholder: \"Node name\",\n      id: \"nodesName\",\n      fullWidth: true,\n      margin: \"normal\",\n      required: true,\n      type: \"text\",\n      autoFocus: true,\n      onChange: this.handleChangeName,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187\n      },\n      __self: this\n    })), React.createElement(Box, {\n      m: 1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      component: \"h1\",\n      variant: \"h6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200\n      },\n      __self: this\n    }, \"Node Group\"), React.createElement(Input, {\n      name: \"nodesGroup\",\n      placeholder: \"Node group\",\n      id: \"nodesGroup\",\n      fullWidth: true,\n      margin: \"normal\",\n      required: true,\n      type: \"text\",\n      onChange: this.handleChangeGroup,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213\n      },\n      __self: this\n    }, React.createElement(Button, {\n      type: \"submit\",\n      fullWidth: true,\n      variant: \"contained\",\n      color: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214\n      },\n      __self: this\n    }, \"Save\"))))));\n  }\n\n}","map":{"version":3,"sources":["/Users/markheij/ipmedth_airsupport/frontend/src/steps/Step_8_Node_Add.js"],"names":["React","Component","QrReader","Container","Typography","Box","Grid","SnackbarContent","Snackbar","TextField","Button","Input","withStyles","firebase","Firebase","isScanned","nid","step8","constructor","props","state","result","handleScan","data","user","auth","currentUser","nodedata","JSON","parse","console","log","hasOwnProperty","quantified","id","uid","firestore","collection","doc","get","then","docSnapshot","exists","setState","set","history","push","e","error","handleSubmit","event","preventDefault","nodesGroup","nodesName","update","name","group","handleError","err","handleChangeName","bind","handleChangeGroup","target","value","render","width","open","handleClose"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport QrReader from 'react-qr-reader'\nimport \"../containers/Home.css\";\nimport {\n    Container,\n    Typography,\n    Box,\n    Grid,\n    SnackbarContent,\n    Snackbar,\n    TextField,\n    Button,\n    Input,\n    withStyles\n} from '@material-ui/core';\nimport \"../steps/Step.css\"\nimport firebase from \"firebase\";\nimport Firebase from \"firebase\";\n\n\nlet isScanned = false;\nlet nid;\n\nexport default class step8 extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {nodesName: '', nodesGroup: ''}\n\n        this.handleChangeName = this.handleChangeName.bind(this);\n        this.handleChangeGroup = this.handleChangeGroup.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n\n    state = {\n        result: ''\n    };\n\n    handleChangeName(event){\n        this.setState({nodesName: event.target.value});\n    }\n\n    handleChangeGroup(event){\n        this.setState({nodesGroup: event.target.value});\n    }\n\n\n    handleScan = data => {\n        var user = Firebase.auth().currentUser;\n        if (data) {\n            //try to parse JSON (if not JSON then bad QR code)\n            try {\n                var nodedata = JSON.parse(data);\n                console.log(nodedata);\n                //if JSON check for quantified object (if not then bad QR code)\n                if(nodedata.hasOwnProperty(\"quantified\") || nodedata.hasOwnProperty(\"Quantified\")){\n                    console.log(\"Quantified\");\n\n                    nid = nodedata.quantified.id;\n                    if (user) {\n                        const uid = user.uid;\n                        Firebase.firestore().collection(uid).doc(nid).get()\n                            .then((docSnapshot) =>{\n                                if (docSnapshot.exists){\n                                    this.setState({\n                                        result: \"Node was already added. Try another one!\"\n                                    });\n\n                                }else {\n                                    Firebase.firestore().collection(uid).doc(nid).set(nodedata).then(function () {\n                                        console.log(\"Written to firestore\");\n                                    });\n                                    this.setState({\n                                        result: \"Node Scanned!\"\n                                    });\n                                    isScanned = true;\n                                    console.log(isScanned)\n                                }\n                            });\n\n\n                    }else{\n                        console.log(\"No user\");\n                        this.props.history.push(\"/login\")\n                    }\n                }else{\n                    this.setState({\n                        result: \"Can't find node QR code\"\n                    });\n                }\n            }catch (e) {\n                console.error(e);\n                this.setState({\n                    result: \"Can't find node QR code\"\n                });\n            }\n        }\n    };\n\n\n\n\n    handleSubmit = (event) =>{\n        event.preventDefault();\n        const nodesGroup = this.state.nodesGroup;\n        const nodesName = this.state.nodesName;\n\n\n        var user = Firebase.auth().currentUser;\n        if (user) {\n            const uid = user.uid;\n            console.log(\"uid: \"+ uid);\n            console.log(\"nid: \" + nid);\n            Firebase.firestore().collection(uid).doc(nid).get()\n                .then((docSnapshot) =>{\n                    if (docSnapshot.exists){\n                        Firebase.firestore().collection(uid).doc(nid).update({\n                            name: nodesName,\n                            group: nodesGroup\n                        }).then(function () {\n                            console.log(\"Written to firestore\");\n                        });\n\n                        //move to next step\n\n                    }else {\n\n\n                    }\n                });\n\n\n        }else{\n            console.log(\"No user\");\n            this.props.history.push(\"/login\")\n        }\n    }\n\n\n\n\n    handleError = err => {\n        console.error(err);\n        this.setState({\n            result: \"Something went wrong! Did you use the QR code?\"\n        })\n    };\n\n    render() {\n        return (\n            <Container>\n                <Grid container direction=\"column\" alignItems=\"center\" justify= \"center\" spacing={2}>\n                    <Grid item>\n                        <Typography variant=\"h3\" align=\"center\">Nodes</Typography>\n                        <Typography display=\"block\" variant=\"body1\">\n                            {!isScanned && (\"Scan the QR code to add the node to the system\")}\n                            {isScanned && (\"Give the node a name and assign it to a group\")}\n                        </Typography>\n                    </Grid>\n                    {!isScanned && (\n                        <Grid style={{width: \"50%\"}}>\n                            <div>\n                                <QrReader\n                                    delay={300}\n                                    onError={this.handleError}\n                                    onScan={this.handleScan}\n                                    facingMode={\"environment\"}\n                                />\n                                <Snackbar\n                                  open={open}\n                                  autoHideDuration={2000}\n                                  onClose={handleClose}\n                                >\n                                <SnackbarContent\n                                  message={this.state.result}\n                                />\n                                </Snackbar>\n                            </div>\n                        </Grid>)}\n                        {isScanned && (\n                    <Grid item>\n                        <form onSubmit={this.handleSubmit}>\n                        <div>\n                          <Box m={1}>\n                            <Typography component=\"h1\" variant=\"h6\">Node Name</Typography>\n                          <Input\n                                name=\"nodesName\"\n                                placeholder=\"Node name\"\n                                id=\"nodesName\"\n                                fullWidth\n                                margin=\"normal\"\n                                required\n                                type=\"text\"\n                                autoFocus\n                                onChange={this.handleChangeName}\n                            />\n                        </Box>\n                          <Box m={1}>\n                          <Typography component=\"h1\" variant=\"h6\">Node Group</Typography>\n                          <Input\n                                name=\"nodesGroup\"\n                                placeholder=\"Node group\"\n                                id=\"nodesGroup\"\n                                fullWidth\n                                margin=\"normal\"\n                                required\n                                type=\"text\"\n                                onChange={this.handleChangeGroup}\n                            />\n                        </Box>\n                        </div>\n                        <div>\n                            <Button type=\"submit\"\n                                    fullWidth\n                                    variant=\"contained\"\n                                    color=\"primary\">\n                                Save\n                            </Button>\n                        </div>\n                        </form>\n                    </Grid>)}\n                </Grid>\n            </Container>\n\n        )\n    }\n}\n"]},"metadata":{},"sourceType":"module"}