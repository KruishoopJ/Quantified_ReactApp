{"ast":null,"code":"var _jsxFileName = \"/Users/markheij/ipmedth_airsupport/frontend/src/containers/Home.js\";\nimport React from \"react\";\nimport nodeIcon from '../icons/node.png';\nimport { Fab, List, ListItem, ListItemText, ListItemAvatar, ListSubheader, Badge, Box } from '@material-ui/core';\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\nimport \"./Home.css\";\nimport { LinkContainer } from \"react-router-bootstrap\";\nimport ImageIcon from '@material-ui/icons/Image';\nimport WorkIcon from '@material-ui/icons/Work';\nimport BeachAccessIcon from '@material-ui/icons/BeachAccess';\nimport Divider from '@material-ui/core/Divider';\nconst nodes = [{\n  name: 'FakeNode 1',\n  group: 'Tomatoes',\n  status: 'Offline',\n  x: 65,\n  y: 45,\n  z: 10\n}, {\n  name: 'FakeNode 2',\n  group: 'Carrots',\n  status: 'Online',\n  x: 45,\n  y: 45,\n  z: 10\n}, {\n  name: 'FakeNode 3',\n  group: 'Tomatoes',\n  status: 'Online',\n  x: 65,\n  y: 55,\n  z: 10\n}, {\n  name: 'FakeNode 4',\n  group: 'Carrots',\n  status: 'Online',\n  x: 45,\n  y: 55,\n  z: 10\n}, {\n  name: 'FakeNode 5',\n  group: 'Carrots',\n  status: 'Offline',\n  x: 45,\n  y: 65,\n  z: 10\n}, {\n  name: 'FakeNode 6',\n  group: 'Tomatoes',\n  status: 'Online',\n  x: 65,\n  y: 65,\n  z: 10\n}, {\n  name: 'FakeNode 7',\n  group: 'Tomatoes',\n  status: 'Online',\n  x: 65,\n  y: 75,\n  z: 10\n}];\nconst useStyles = makeStyles(theme => ({\n  nodesList: {\n    height: '380px',\n    border: '1px solid',\n    borderRadius: '10px',\n    margin: '24px 14px',\n    overflowY: 'scroll'\n  },\n  nodeOptionsButton: {\n    margin: '24px auto',\n    margin: '14px'\n  },\n  nodeButtonIcon: {\n    width: '9px',\n    marginRight: '8px',\n    filter: 'invert(100%)'\n  },\n  nodeAvatar: {\n    height: '35px',\n    marginLeft: '14px'\n  },\n  online: {\n    backgroundColor: '#00FF00'\n  },\n  offline: {\n    backgroundColor: '#FF0000'\n  },\n  noPadding: {\n    padding: 0\n  },\n  contentCentered: {\n    textAlign: 'center',\n    width: '100%'\n  }\n}));\nconst StyledBadge = withStyles(theme => ({\n  badge: {\n    right: -3,\n    top: 30,\n    border: \"2px solid \".concat(theme.palette.background.paper),\n    padding: '0 2px',\n    height: '15px',\n    minWidth: '15px'\n  }\n}))(Badge);\nexport default function Home() {\n  const classes = useStyles();\n  const offlineNodes = nodes.filter(node => node.status == 'Offline');\n  const onlineNodes = nodes.filter(node => node.status == 'Online');\n  return React.createElement(\"div\", {\n    className: \"homePage\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  }, React.createElement(List, {\n    className: classes.nodesList,\n    color: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  }, React.createElement(ListSubheader, {\n    disableSticky: \"true\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  }, \"Offline nodes\"), offlineNodes.map(node => React.createElement(ListItem, {\n    className: classes.noPadding,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  }, React.createElement(ListItemAvatar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124\n    },\n    __self: this\n  }, React.createElement(StyledBadge, {\n    classes: {\n      badge: classes.offline\n    },\n    badgeContent: \" \",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: nodeIcon,\n    alt: \"nodeIcon\",\n    className: classes.nodeAvatar,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126\n    },\n    __self: this\n  }))), React.createElement(ListItemText, {\n    primary: node.name,\n    secondary: node.group,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129\n    },\n    __self: this\n  }))), React.createElement(ListSubheader, {\n    disableSticky: \"true\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132\n    },\n    __self: this\n  }, \"Online nodes\"), onlineNodes.map(node => React.createElement(ListItem, {\n    className: classes.noPadding,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134\n    },\n    __self: this\n  }, React.createElement(ListItemAvatar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135\n    },\n    __self: this\n  }, React.createElement(StyledBadge, {\n    classes: {\n      badge: classes.online\n    },\n    badgeContent: \" \",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: nodeIcon,\n    alt: \"nodeIcon\",\n    className: classes.nodeAvatar,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137\n    },\n    __self: this\n  }))), React.createElement(ListItemText, {\n    primary: node.name,\n    secondary: node.group,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140\n    },\n    __self: this\n  })))), React.createElement(Box, {\n    className: classes.contentCentered,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144\n    },\n    __self: this\n  }, React.createElement(LinkContainer, {\n    to: \"/step1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145\n    },\n    __self: this\n  }, React.createElement(Fab, {\n    size: \"large\",\n    variant: \"extended\",\n    variant: \"containedSecondary\",\n    color: \"primary\",\n    className: classes.nodeOptionsButton,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: nodeIcon,\n    alt: \"nodeIcon\",\n    className: classes.nodeButtonIcon,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147\n    },\n    __self: this\n  }), \"Node options\"))));\n}","map":{"version":3,"sources":["/Users/markheij/ipmedth_airsupport/frontend/src/containers/Home.js"],"names":["React","nodeIcon","Fab","List","ListItem","ListItemText","ListItemAvatar","ListSubheader","Badge","Box","makeStyles","withStyles","LinkContainer","ImageIcon","WorkIcon","BeachAccessIcon","Divider","nodes","name","group","status","x","y","z","useStyles","theme","nodesList","height","border","borderRadius","margin","overflowY","nodeOptionsButton","nodeButtonIcon","width","marginRight","filter","nodeAvatar","marginLeft","online","backgroundColor","offline","noPadding","padding","contentCentered","textAlign","StyledBadge","badge","right","top","palette","background","paper","minWidth","Home","classes","offlineNodes","node","onlineNodes","map"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport nodeIcon from '../icons/node.png';\nimport { Fab, List, ListItem, ListItemText, ListItemAvatar, ListSubheader, Badge, Box } from '@material-ui/core';\nimport { makeStyles, withStyles  } from '@material-ui/core/styles';\nimport \"./Home.css\";\nimport { LinkContainer } from \"react-router-bootstrap\"\n\nimport ImageIcon from '@material-ui/icons/Image';\nimport WorkIcon from '@material-ui/icons/Work';\nimport BeachAccessIcon from '@material-ui/icons/BeachAccess';\nimport Divider from '@material-ui/core/Divider';\n\nconst nodes = [\n  {\n    name: 'FakeNode 1',\n    group: 'Tomatoes',\n    status: 'Offline',\n    x: 65,\n    y: 45,\n    z: 10\n  },{\n    name: 'FakeNode 2',\n    group: 'Carrots',\n    status: 'Online',\n    x: 45,\n    y: 45,\n    z: 10\n  },{\n    name: 'FakeNode 3',\n    group: 'Tomatoes',\n    status: 'Online',\n    x: 65,\n    y: 55,\n    z: 10\n  },{\n    name: 'FakeNode 4',\n    group: 'Carrots',\n    status: 'Online',\n    x: 45,\n    y: 55,\n    z: 10\n  },{\n    name: 'FakeNode 5',\n    group: 'Carrots',\n    status: 'Offline',\n    x: 45,\n    y: 65,\n    z: 10\n  },{\n    name: 'FakeNode 6',\n    group: 'Tomatoes',\n    status: 'Online',\n    x: 65,\n    y: 65,\n    z: 10\n  },{\n    name: 'FakeNode 7',\n    group: 'Tomatoes',\n    status: 'Online',\n    x: 65,\n    y: 75,\n    z: 10\n  },\n];\n\nconst useStyles = makeStyles(theme => ({\n  nodesList: {\n    height: '380px',\n    border: '1px solid',\n    borderRadius: '10px',\n    margin: '24px 14px',\n    overflowY: 'scroll'\n  },\n  nodeOptionsButton: {\n    margin: '24px auto',\n    margin: '14px'\n  },\n  nodeButtonIcon: {\n    width: '9px',\n    marginRight: '8px',\n    filter: 'invert(100%)'\n  },\n  nodeAvatar: {\n    height: '35px',\n    marginLeft: '14px'\n  },\n  online: {\n    backgroundColor: '#00FF00'\n  },\n  offline: {\n    backgroundColor: '#FF0000'\n  },\n  noPadding: {\n    padding: 0\n  },\n  contentCentered: {\n    textAlign: 'center',\n    width: '100%'\n  }\n}));\n\nconst StyledBadge = withStyles(theme => ({\n  badge: {\n    right: -3,\n    top: 30,\n    border: `2px solid ${theme.palette.background.paper}`,\n    padding: '0 2px',\n    height: '15px',\n    minWidth: '15px',\n  },\n}))(Badge);\n\nexport default function Home() {\n  const classes = useStyles();\n  const offlineNodes = nodes.filter((node) => node.status == 'Offline');\n  const onlineNodes = nodes.filter((node) => node.status == 'Online');\n\n  return (\n    <div className=\"homePage\">\n      <List className={classes.nodesList} color=\"primary\">\n        <ListSubheader disableSticky='true'>Offline nodes</ListSubheader>\n        {offlineNodes.map((node) =>\n          <ListItem className={classes.noPadding}>\n            <ListItemAvatar>\n              <StyledBadge classes={{ badge: classes.offline }} badgeContent=\" \">\n                <img src={ nodeIcon } alt=\"nodeIcon\" className={classes.nodeAvatar} />\n              </StyledBadge>\n            </ListItemAvatar>\n            <ListItemText primary={node.name} secondary={node.group} />\n          </ListItem>\n        )}\n        <ListSubheader disableSticky='true'>Online nodes</ListSubheader>\n        {onlineNodes.map((node) =>\n          <ListItem className={classes.noPadding}>\n            <ListItemAvatar>\n              <StyledBadge classes={{ badge: classes.online }} badgeContent=\" \">\n                <img src={ nodeIcon } alt=\"nodeIcon\" className={classes.nodeAvatar} />\n              </StyledBadge>\n            </ListItemAvatar>\n            <ListItemText primary={node.name} secondary={node.group} />\n          </ListItem>\n        )}\n      </List>\n      <Box className={classes.contentCentered}>\n        <LinkContainer to=\"/step1\">\n          <Fab size=\"large\" variant=\"extended\" variant=\"containedSecondary\" color=\"primary\" className={classes.nodeOptionsButton}>\n            <img src={ nodeIcon } alt=\"nodeIcon\" className={classes.nodeButtonIcon} />\n            Node options\n          </Fab>\n        </LinkContainer>\n      </Box>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}