{"ast":null,"code":"import _slicedToArray from \"/Users/markheij/ipmedth_airsupport/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/markheij/ipmedth_airsupport/frontend/src/containers/Settings.js\";\nimport React, { useState } from \"react\";\nimport { API } from \"aws-amplify\";\nimport { Elements, StripeProvider } from \"react-stripe-elements\";\nimport BillingForm from \"../components/BillingForm\";\nimport config from \"../config\";\nimport \"./Settings.css\";\nexport default function Settings(props) {\n  const _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        isLoading = _useState2[0],\n        setIsLoading = _useState2[1];\n\n  function billUser(details) {\n    return API.post(\"notes\", \"/billing\", {\n      body: details\n    });\n  }\n\n  async function handleFormSubmit(storage, {\n    token,\n    error\n  }) {\n    if (error) {\n      alert(error);\n      return;\n    }\n\n    setIsLoading(true);\n\n    try {\n      await billUser({\n        storage,\n        source: token.id\n      });\n      alert(\"Your card has been charged successfully!\");\n      props.history.push(\"/\");\n    } catch (e) {\n      alert(e);\n      setIsLoading(false);\n    }\n  }\n\n  return React.createElement(\"div\", {\n    className: \"Settings\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, React.createElement(StripeProvider, {\n    apiKey: config.STRIPE_KEY,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, React.createElement(Elements, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, React.createElement(BillingForm, {\n    isLoading: isLoading,\n    onSubmit: handleFormSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }))));\n}","map":{"version":3,"sources":["/Users/markheij/ipmedth_airsupport/frontend/src/containers/Settings.js"],"names":["React","useState","API","Elements","StripeProvider","BillingForm","config","Settings","props","isLoading","setIsLoading","billUser","details","post","body","handleFormSubmit","storage","token","error","alert","source","id","history","push","e","STRIPE_KEY"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,GAAT,QAAoB,aAApB;AACA,SAASC,QAAT,EAAmBC,cAAnB,QAAyC,uBAAzC;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,OAAOC,MAAP,MAAmB,WAAnB;AACA,OAAO,gBAAP;AAEA,eAAe,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AAAA,oBACJP,QAAQ,CAAC,KAAD,CADJ;AAAA;AAAA,QAC/BQ,SAD+B;AAAA,QACpBC,YADoB;;AAGtC,WAASC,QAAT,CAAkBC,OAAlB,EAA2B;AACzB,WAAOV,GAAG,CAACW,IAAJ,CAAS,OAAT,EAAkB,UAAlB,EAA8B;AACnCC,MAAAA,IAAI,EAAEF;AAD6B,KAA9B,CAAP;AAGD;;AAED,iBAAeG,gBAAf,CAAgCC,OAAhC,EAAyC;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT,GAAzC,EAA2D;AACzD,QAAIA,KAAJ,EAAW;AACTC,MAAAA,KAAK,CAACD,KAAD,CAAL;AACA;AACD;;AAEDR,IAAAA,YAAY,CAAC,IAAD,CAAZ;;AAEA,QAAI;AACF,YAAMC,QAAQ,CAAC;AACbK,QAAAA,OADa;AAEbI,QAAAA,MAAM,EAAEH,KAAK,CAACI;AAFD,OAAD,CAAd;AAKAF,MAAAA,KAAK,CAAC,0CAAD,CAAL;AACAX,MAAAA,KAAK,CAACc,OAAN,CAAcC,IAAd,CAAmB,GAAnB;AACD,KARD,CAQE,OAAOC,CAAP,EAAU;AACVL,MAAAA,KAAK,CAACK,CAAD,CAAL;AACAd,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACD;AACF;;AAED,SACE;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,cAAD;AAAgB,IAAA,MAAM,EAAEJ,MAAM,CAACmB,UAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,WAAD;AACE,IAAA,SAAS,EAAEhB,SADb;AAEE,IAAA,QAAQ,EAAEM,gBAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CADF,CADF;AAYD","sourcesContent":["import React, { useState } from \"react\";\nimport { API } from \"aws-amplify\";\nimport { Elements, StripeProvider } from \"react-stripe-elements\";\nimport BillingForm from \"../components/BillingForm\";\nimport config from \"../config\";\nimport \"./Settings.css\";\n\nexport default function Settings(props) {\n  const [isLoading, setIsLoading] = useState(false);\n\n  function billUser(details) {\n    return API.post(\"notes\", \"/billing\", {\n      body: details\n    });\n  }\n\n  async function handleFormSubmit(storage, { token, error }) {\n    if (error) {\n      alert(error);\n      return;\n    }\n\n    setIsLoading(true);\n\n    try {\n      await billUser({\n        storage,\n        source: token.id\n      });\n\n      alert(\"Your card has been charged successfully!\");\n      props.history.push(\"/\");\n    } catch (e) {\n      alert(e);\n      setIsLoading(false);\n    }\n  }\n\n  return (\n    <div className=\"Settings\">\n      <StripeProvider apiKey={config.STRIPE_KEY}>\n        <Elements>\n          <BillingForm\n            isLoading={isLoading}\n            onSubmit={handleFormSubmit}\n          />\n        </Elements>\n      </StripeProvider>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}