{"ast":null,"code":"import _slicedToArray from \"/Users/markheij/ipmedth_airsupport/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/markheij/ipmedth_airsupport/frontend/src/steps/Step_4_Gateway_PowerSupply.js\";\nimport React from \"react\";\nimport clsx from 'clsx';\nimport \"../containers/Home.css\";\nimport { Container, Typography, Grid, Button, makeStyles, List, ListItem, CircularProgress, Fab, ListItemAvatar, Avatar, ListItemText, Zoom, Snackbar, Fade } from '@material-ui/core';\nimport CheckIcon from '@material-ui/icons/Check';\nimport SaveIcon from '@material-ui/icons/Save';\nimport { green } from '@material-ui/core/colors';\nconst useStyles = makeStyles(theme => ({\n  section1: {\n    margin: theme.spacing(3, 2)\n  },\n  avatarColor: {\n    backgroundColor: \"#599AD5\"\n  },\n  buttonSuccess: {\n    backgroundColor: green[500],\n    '&:hover': {\n      backgroundColor: green[700]\n    }\n  },\n  fabProgress: {\n    color: green[500],\n    zIndex: 1,\n    position: 'absolute',\n    top: -6,\n    left: -6\n  },\n  snackbar: {\n    bottom: 48\n  }\n}));\nexport default function Step4() {\n  const classes = useStyles();\n\n  const _React$useState = React.useState(false),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        loading = _React$useState2[0],\n        setLoading = _React$useState2[1];\n\n  const _React$useState3 = React.useState(false),\n        _React$useState4 = _slicedToArray(_React$useState3, 2),\n        succes = _React$useState4[0],\n        setSucces = _React$useState4[1];\n\n  const timer = React.useRef();\n\n  const _React$useState5 = React.useState(false),\n        _React$useState6 = _slicedToArray(_React$useState5, 2),\n        open = _React$useState6[0],\n        setOpen = _React$useState6[1];\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const buttonClassname = clsx({\n    [classes.buttonSuccess]: succes\n  });\n  React.useEffect(() => {\n    return () => {\n      clearTimeout(timer.current);\n    };\n  }, []);\n\n  const handleButtonClick = () => {\n    if (!loading) {\n      setSucces(false);\n      setLoading(true);\n      timer.current = setTimeout(() => {\n        setSucces(true);\n        setLoading(false);\n        setOpen(true);\n      }, 2000);\n    }\n  };\n\n  return React.createElement(Container, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: true,\n    direction: \"column\",\n    alignItems: \"center\",\n    justify: \"center\",\n    spacing: 2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, React.createElement(Fade, {\n    in: \"true\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    className: classes.section1,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    variant: \"h3\",\n    align: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, \"Gateway\"), React.createElement(Typography, {\n    display: \"block\",\n    variant: \"body1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, \"Use the following steps to power on the gateway:\"))), React.createElement(Grid, {\n    item: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, React.createElement(List, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, React.createElement(Zoom, {\n    in: true,\n    style: {\n      transitionDelay: '200ms'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, React.createElement(ListItem, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, React.createElement(ListItemAvatar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, React.createElement(Avatar, {\n    className: classes.avatarColor,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, \"1\")), React.createElement(ListItemText, {\n    primary: \"Pick up the power supply in the provided box\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }))), React.createElement(Zoom, {\n    in: true,\n    style: {\n      transitionDelay: '500ms'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }, React.createElement(ListItem, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }, React.createElement(ListItemAvatar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }, React.createElement(Avatar, {\n    className: classes.avatarColor,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }, \"2\")), React.createElement(ListItemText, {\n    primary: \"Plug the power supply in your local power outlet\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }))), React.createElement(Zoom, {\n    in: true,\n    style: {\n      transitionDelay: '800ms'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }, React.createElement(ListItem, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  }, React.createElement(ListItemAvatar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  }, React.createElement(Avatar, {\n    className: classes.avatarColor,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  }, \"3\")), React.createElement(ListItemText, {\n    primary: \"Plug the other end in the provided gateway\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125\n    },\n    __self: this\n  }))))), React.createElement(Grid, {\n    item: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130\n    },\n    __self: this\n  }, React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    className: buttonClassname,\n    disabled: loading,\n    onClick: handleButtonClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131\n    },\n    __self: this\n  }, \"Check gateway power\"), loading && React.createElement(CircularProgress, {\n    size: 24,\n    className: classes.buttonProgress,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140\n    },\n    __self: this\n  }), React.createElement(Snackbar, {\n    open: open,\n    autoHideDuration: 2000,\n    onClose: handleClose,\n    message: \"Gateway is connected\",\n    className: classes.snackbar,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141\n    },\n    __self: this\n  }))));\n}","map":{"version":3,"sources":["/Users/markheij/ipmedth_airsupport/frontend/src/steps/Step_4_Gateway_PowerSupply.js"],"names":["React","clsx","Container","Typography","Grid","Button","makeStyles","List","ListItem","CircularProgress","Fab","ListItemAvatar","Avatar","ListItemText","Zoom","Snackbar","Fade","CheckIcon","SaveIcon","green","useStyles","theme","section1","margin","spacing","avatarColor","backgroundColor","buttonSuccess","fabProgress","color","zIndex","position","top","left","snackbar","bottom","Step4","classes","useState","loading","setLoading","succes","setSucces","timer","useRef","open","setOpen","handleClose","buttonClassname","useEffect","clearTimeout","current","handleButtonClick","setTimeout","transitionDelay","buttonProgress"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport clsx from 'clsx';\nimport \"../containers/Home.css\";\nimport {\n  Container,\n  Typography,\n  Grid,\n  Button,\n  makeStyles,\n  List,\n  ListItem,\n  CircularProgress,\n  Fab,\n  ListItemAvatar,\n  Avatar,\n  ListItemText,\n  Zoom,\n  Snackbar,\n  Fade\n} from '@material-ui/core';\nimport CheckIcon from '@material-ui/icons/Check';\nimport SaveIcon from '@material-ui/icons/Save';\nimport {green} from '@material-ui/core/colors';\n\nconst useStyles = makeStyles(theme => ({\n  section1: {\n    margin: theme.spacing(3, 2),\n  },\n  avatarColor:{\n    backgroundColor: \"#599AD5\"\n  },\n  buttonSuccess: {\n    backgroundColor: green[500],\n    '&:hover': {\n      backgroundColor: green[700],\n    }\n  },\n  fabProgress: {\n    color: green[500],\n    zIndex: 1,\n    position: 'absolute',\n    top: -6,\n    left: -6,\n  },\n  snackbar: {\n    bottom: 48,\n  }\n}));\n\nexport default function Step4(){\n  const classes = useStyles()\n  const [loading, setLoading] = React.useState(false);\n  const [succes, setSucces] = React.useState(false);\n  const timer = React.useRef();\n  const [open, setOpen] = React.useState(false);\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n\n  const buttonClassname = clsx({\n    [classes.buttonSuccess]: succes,\n  });\n\n  React.useEffect(() => {\n    return () => {\n      clearTimeout(timer.current);\n    }\n  }, []);\n\n  const handleButtonClick = () => {\n    if(!loading){\n      setSucces(false);\n      setLoading(true);\n      timer.current = setTimeout(() =>{\n        setSucces(true);\n        setLoading(false);\n        setOpen(true)\n      }, 2000)\n    }\n  };\n\n\n  return(\n    <Container>\n      <Grid container direction=\"column\" alignItems=\"center\" justify= \"center\" spacing={2}>\n        <Fade in=\"true\">\n          <Grid item className={classes.section1}>\n            <Typography variant=\"h3\" align=\"center\">Gateway</Typography>\n          <Typography display=\"block\" variant=\"body1\">\n              Use the following steps to power on the gateway:\n            </Typography>\n          </Grid>\n        </Fade>\n        <Grid item>\n          <List>\n            <Zoom in={true} style={{ transitionDelay:'200ms' }}>\n              <ListItem>\n                <ListItemAvatar>\n                  <Avatar className={classes.avatarColor}>\n                    1\n                  </Avatar>\n                </ListItemAvatar>\n                <ListItemText primary=\"Pick up the power supply in the provided box\" />\n              </ListItem>\n            </Zoom>\n            <Zoom in={true} style={{ transitionDelay:'500ms' }}>\n              <ListItem>\n                <ListItemAvatar>\n                  <Avatar className={classes.avatarColor}>\n                    2\n                  </Avatar>\n                </ListItemAvatar>\n                <ListItemText primary=\"Plug the power supply in your local power outlet\" />\n              </ListItem>\n            </Zoom>\n            <Zoom in={true} style={{ transitionDelay:'800ms' }}>\n              <ListItem>\n                <ListItemAvatar>\n                  <Avatar className={classes.avatarColor}>\n                    3\n                  </Avatar>\n                </ListItemAvatar>\n                <ListItemText primary=\"Plug the other end in the provided gateway\" />\n              </ListItem>\n            </Zoom>\n          </List>\n        </Grid>\n        <Grid item>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            className={buttonClassname}\n            disabled={loading}\n            onClick={handleButtonClick}\n            >\n            Check gateway power\n          </Button>\n          {loading && <CircularProgress size={24} className={classes.buttonProgress} />}\n          <Snackbar\n            open={open}\n            autoHideDuration={2000}\n            onClose={handleClose}\n            message=\"Gateway is connected\"\n            className={classes.snackbar}\n          />\n        </Grid>\n\n      </Grid>\n    </Container>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}