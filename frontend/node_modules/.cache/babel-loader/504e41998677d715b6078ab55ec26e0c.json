{"ast":null,"code":"import _classCallCheck from\"/Users/markheij/ipmedth_airsupport/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/markheij/ipmedth_airsupport/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/Users/markheij/ipmedth_airsupport/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/Users/markheij/ipmedth_airsupport/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _assertThisInitialized from\"/Users/markheij/ipmedth_airsupport/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";import _inherits from\"/Users/markheij/ipmedth_airsupport/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import React,{Component}from'react';import QrReader from'react-qr-reader';import\"../containers/Home.css\";import{Container,Typography,Box,Grid,SnackbarContent,Snackbar,TextField,Button,Input,withStyles}from'@material-ui/core';import\"../steps/Step.css\";import firebase from\"firebase\";import Firebase from\"firebase\";var isScanned=false;var nodeAmount;var nid;var xn;var yn;var isitdone=false;if(navigator.geolocation){navigator.geolocation.getCurrentPosition(function(position){yn=position.coords.latitude;xn=position.coords.longitude;});}else{}var step8=/*#__PURE__*/function(_Component){_inherits(step8,_Component);function step8(props){var _this;_classCallCheck(this,step8);_this=_possibleConstructorReturn(this,_getPrototypeOf(step8).call(this,props));_this.setAmount=function(){var user=Firebase.auth().currentUser;if(user){var uid=user.uid;Firebase.firestore().collection(uid).doc(\"nodes\").get().then(function(querySnapshot){nodeAmount=parseInt(querySnapshot.data().amount);console.log(nodeAmount);});}};_this.state={result:''};_this.handleClose=function(){_this.setState({isOpen:false});};_this.handleOpen=function(){_this.setState({isOpen:true});};_this.handleScan=function(data){var user=Firebase.auth().currentUser;if(data){//try to parse JSON (if not JSON then bad QR code)\ntry{var nodedata=JSON.parse(data);console.log(nodedata);//if JSON check for quantified object (if not then bad QR code)\nif(nodedata.hasOwnProperty(\"quantified\")||nodedata.hasOwnProperty(\"Quantified\")){console.log(\"Quantified\");_this.setState({isOpen:true,snackbarmessage:\"Node was already added. Try another one!\"});nid=nodedata.quantified.id;if(user){var uid=user.uid;Firebase.firestore().collection(uid).doc(nid).get().then(function(docSnapshot){if(docSnapshot.exists){_this.setState({isOpen:true,snackbarmessage:\"Node was already added. Try another one!\"});}else{Firebase.firestore().collection(uid).doc(nid).set(nodedata).then(function(){console.log(\"Written to firestore\");});_this.setState({isOpen:true,snackbarmessage:\"Node Scanned\"});isScanned=true;console.log(isScanned);}});_this.setState({isOpen:false});}else{console.log(\"No user\");_this.props.history.push(\"/login\");}}else{_this.setState({isOpen:true});}}catch(e){console.error(e);_this.setState({isOpen:true,snackbarmessage:\"Can't find node QR code\"});}}};_this.handleSubmit=function(event){event.preventDefault();var nodesGroup=_this.state.nodesGroup;var nodesName=_this.state.nodesName;var user=Firebase.auth().currentUser;if(user){var uid=user.uid;console.log(\"uid: \"+uid);console.log(\"nid: \"+nid);Firebase.firestore().collection(uid).doc(nid).get().then(function(docSnapshot){if(docSnapshot.exists){Firebase.firestore().collection(uid).doc(nid).update({name:nodesName,group:nodesGroup,x:xn,y:yn,z:1}).then(function(){console.log(\"Written to firestore\");isitdone=true;});if(nodeAmount>1){nodeAmount--;isScanned=false;_this.setState({isOpen:false});}else{_this.setState({isDone:true,isOpen:true,snackbarmessage:\"data saved!\"});}//move to next step\n}else{}});}else{console.log(\"No user\");_this.props.history.push(\"/login\");}};_this.handleError=function(err){console.error(err);_this.setState({isOpen:true});_this.setState({snackbarmessage:\"Something went wrong! Did you use the QR code?\"});};_this.state={nodesName:'',nodesGroup:'',isOpen:false,isDone:false,snackbarmessage:\"closed\"};_this.handleChangeName=_this.handleChangeName.bind(_assertThisInitialized(_this));_this.handleChangeGroup=_this.handleChangeGroup.bind(_assertThisInitialized(_this));_this.handleSubmit=_this.handleSubmit.bind(_assertThisInitialized(_this));_this.setAmount();return _this;}_createClass(step8,[{key:\"handleChangeName\",value:function handleChangeName(event){this.setState({nodesName:event.target.value});}},{key:\"handleChangeGroup\",value:function handleChangeGroup(event){this.setState({nodesGroup:event.target.value});}},{key:\"render\",value:function render(){return React.createElement(Container,null,React.createElement(Box,{m:1},React.createElement(Typography,{variant:\"overline\"},\"Installation \\u279C Nodes\"),React.createElement(Typography,{variant:\"h4\"},\"Nodes\"),React.createElement(Typography,{display:\"block\",variant:\"body1\"},!isScanned&&\"Scan the QR code to add the node to the system\",isScanned&!this.state.isDone&&\"Give the node a name and assign it to a group\",this.state.isDone&&\"Move on to the next step\")),!isScanned&&React.createElement(Box,null,React.createElement(QrReader,{delay:300,onError:this.handleError,onScan:this.handleScan,facingMode:\"environment\"})),React.createElement(Snackbar,{open:this.state.isOpen,autoHideDuration:2000,onClose:this.handleClose,message:this.state.snackbarmessage}),isScanned&&React.createElement(Box,{m:1},!this.state.isDone&&React.createElement(\"form\",{onSubmit:this.handleSubmit},React.createElement(\"div\",null,React.createElement(Box,{m:1},React.createElement(Typography,{component:\"h1\",variant:\"h6\"},\"Node Name\"),React.createElement(Input,{name:\"nodesName\",placeholder:\"Node name\",id:\"nodesName\",fullWidth:true,margin:\"normal\",required:true,type:\"text\",autoFocus:true,onChange:this.handleChangeName})),React.createElement(Box,{m:1},React.createElement(Typography,{component:\"h1\",variant:\"h6\"},\"Node Group\"),React.createElement(Input,{name:\"nodesGroup\",placeholder:\"Node group\",id:\"nodesGroup\",fullWidth:true,margin:\"normal\",required:true,type:\"text\",onChange:this.handleChangeGroup}))),React.createElement(\"div\",null,React.createElement(Button,{type:\"submit\",fullWidth:true,variant:\"contained\",color:\"primary\"},\"Save\"),React.createElement(Snackbar,{open:this.isOpen,autoHideDuration:2000,onClose:this.handleClose},React.createElement(SnackbarContent,{message:\"Node added\"}))))));}}]);return step8;}(Component);export{step8 as default};","map":{"version":3,"sources":["/Users/markheij/ipmedth_airsupport/frontend/src/steps/Step_7_Node_Add.js"],"names":["React","Component","QrReader","Container","Typography","Box","Grid","SnackbarContent","Snackbar","TextField","Button","Input","withStyles","firebase","Firebase","isScanned","nodeAmount","nid","xn","yn","isitdone","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude","step8","props","setAmount","user","auth","currentUser","uid","firestore","collection","doc","get","then","querySnapshot","parseInt","data","amount","console","log","state","result","handleClose","setState","isOpen","handleOpen","handleScan","nodedata","JSON","parse","hasOwnProperty","snackbarmessage","quantified","id","docSnapshot","exists","set","history","push","e","error","handleSubmit","event","preventDefault","nodesGroup","nodesName","update","name","group","x","y","z","isDone","handleError","err","handleChangeName","bind","handleChangeGroup","target","value"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport QrReader from 'react-qr-reader'\nimport \"../containers/Home.css\";\nimport {\n    Container,\n    Typography,\n    Box,\n    Grid,\n    SnackbarContent,\n    Snackbar,\n    TextField,\n    Button,\n    Input,\n    withStyles\n} from '@material-ui/core';\nimport \"../steps/Step.css\"\nimport firebase from \"firebase\";\nimport Firebase from \"firebase\";\n\n\n\nlet isScanned = false;\nlet nodeAmount;\nlet nid;\nlet xn;\nlet yn;\nlet isitdone = false;\n\nif (navigator.geolocation) {\n    navigator.geolocation.getCurrentPosition(function (position) {\n        yn = position.coords.latitude;\n        xn = position.coords.longitude;\n\n    });\n}else {\n\n}\n\nexport default class step8 extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {nodesName: '', nodesGroup: '', isOpen: false, isDone: false, snackbarmessage: \"closed\"};\n        this.handleChangeName = this.handleChangeName.bind(this);\n        this.handleChangeGroup = this.handleChangeGroup.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.setAmount()\n    }\n\n    setAmount =() =>{\n        var user = Firebase.auth().currentUser;\n        if (user) {\n            const uid = user.uid;\n            Firebase.firestore().collection(uid).doc(\"nodes\").get().then(function(querySnapshot){\n                nodeAmount = parseInt(querySnapshot.data().amount)\n                console.log(nodeAmount)\n                });\n\n\n        }\n    };\n\n    state = {\n        result: ''\n    };\n\n    handleChangeName(event){\n      this.setState({nodesName: event.target.value});\n    }\n\n    handleChangeGroup(event){\n      this.setState({nodesGroup: event.target.value});\n    }\n\n    handleClose = () =>{\n      this.setState({isOpen: false});\n    }\n\n    handleOpen = () =>{\n        this.setState({isOpen:true})\n    }\n\n    handleScan = data => {\n        var user = Firebase.auth().currentUser;\n        if (data) {\n            //try to parse JSON (if not JSON then bad QR code)\n            try {\n                var nodedata = JSON.parse(data);\n                console.log(nodedata);\n                //if JSON check for quantified object (if not then bad QR code)\n                if(nodedata.hasOwnProperty(\"quantified\") || nodedata.hasOwnProperty(\"Quantified\")){\n                    console.log(\"Quantified\");\n                    this.setState({\n                        isOpen: true,\n                        snackbarmessage: \"Node was already added. Try another one!\"\n                    });\n                    nid = nodedata.quantified.id;\n\n                    if (user) {\n                        const uid = user.uid;\n                        Firebase.firestore().collection(uid).doc(nid).get()\n                            .then((docSnapshot) =>{\n                                if (docSnapshot.exists){\n                                    this.setState({\n                                        isOpen: true,\n                                        snackbarmessage: \"Node was already added. Try another one!\"\n                                    });\n\n                                }else {\n                                    Firebase.firestore().collection(uid).doc(nid).set(nodedata).then(function () {\n                                        console.log(\"Written to firestore\");\n                                    });\n                                    this.setState({\n                                        isOpen: true,\n                                        snackbarmessage: \"Node Scanned\"\n                                    });\n                                    isScanned = true;\n                                    console.log(isScanned)\n\n                                }\n\n                            });\n                        this.setState({isOpen: false});\n\n\n                    }else{\n                        console.log(\"No user\");\n                        this.props.history.push(\"/login\")\n                    }\n                }else{\n                    this.setState({\n                        isOpen: true\n                    });\n                }\n            }catch (e) {\n                console.error(e);\n                this.setState({\n                    isOpen: true,\n                    snackbarmessage: \"Can't find node QR code\"\n                });\n            }\n        }\n    };\n\n\n\n\n    handleSubmit = (event) =>{\n        event.preventDefault();\n        const nodesGroup = this.state.nodesGroup;\n        const nodesName = this.state.nodesName;\n\n\n        var user = Firebase.auth().currentUser;\n        if (user) {\n            const uid = user.uid;\n            console.log(\"uid: \"+ uid);\n            console.log(\"nid: \" + nid);\n            Firebase.firestore().collection(uid).doc(nid).get()\n                .then((docSnapshot) =>{\n                    if (docSnapshot.exists){\n                        Firebase.firestore().collection(uid).doc(nid).update({\n                            name: nodesName,\n                            group: nodesGroup,\n                            x: xn,\n                            y: yn,\n                            z: 1\n                        }).then(function () {\n                            console.log(\"Written to firestore\");\n                            isitdone = true;\n\n\n                        });\n                        if(nodeAmount > 1){\n                            nodeAmount--;\n                            isScanned = false;\n                            this.setState({isOpen: false})\n                        }else{\n                            this.setState({isDone: true, isOpen: true ,snackbarmessage: \"data saved!\" });\n                        }\n                        //move to next step\n\n                    }else {\n\n\n                    }\n                });\n\n\n        }else{\n            console.log(\"No user\");\n            this.props.history.push(\"/login\")\n        }\n    }\n\n\n\n\n    handleError = err => {\n        console.error(err);\n        this.setState({isOpen:true})\n        this.setState({\n            snackbarmessage: \"Something went wrong! Did you use the QR code?\"\n        })\n    };\n\n    render() {\n\n        return (\n            <Container>\n                <Box m={1}>\n                        <Typography variant=\"overline\">\n                          Installation &#10140; Nodes\n                        </Typography>\n                        <Typography variant=\"h4\">Nodes</Typography>\n                        <Typography display=\"block\" variant=\"body1\">\n                            {!isScanned && (\"Scan the QR code to add the node to the system\")}\n                            {isScanned & !this.state.isDone && (\"Give the node a name and assign it to a group\")}\n                            {this.state.isDone && (\"Move on to the next step\")}\n                        </Typography>\n                    </Box>\n                    {!isScanned && (\n                        <Box>\n                                <QrReader\n                                    delay={300}\n                                    onError={this.handleError}\n                                    onScan={this.handleScan}\n                                    facingMode={\"environment\"}\n                                />\n                        </Box>)}\n                <Snackbar\n                    open={this.state.isOpen}\n                    autoHideDuration={2000}\n                    onClose={this.handleClose}\n                    message={this.state.snackbarmessage}\n               />\n                        {isScanned && (\n                    <Box m={1}>\n                        {!this.state.isDone &&(<form onSubmit={this.handleSubmit}>\n                        <div>\n                          <Box m={1}>\n                            <Typography component=\"h1\" variant=\"h6\">Node Name</Typography>\n                          <Input\n                                name=\"nodesName\"\n                                placeholder=\"Node name\"\n                                id=\"nodesName\"\n                                fullWidth\n                                margin=\"normal\"\n                                required\n                                type=\"text\"\n                                autoFocus\n                                onChange={this.handleChangeName}\n                            />\n                        </Box>\n                          <Box m={1}>\n                          <Typography component=\"h1\" variant=\"h6\">Node Group</Typography>\n                          <Input\n                                name=\"nodesGroup\"\n                                placeholder=\"Node group\"\n                                id=\"nodesGroup\"\n                                fullWidth\n                                margin=\"normal\"\n                                required\n                                type=\"text\"\n                                onChange={this.handleChangeGroup}\n                            />\n                        </Box>\n                        </div>\n                        <div>\n                            <Button type=\"submit\"\n                                    fullWidth\n                                    variant=\"contained\"\n                                    color=\"primary\"\n                                    >\n                                Save\n                            </Button>\n                            <Snackbar\n                              open={this.isOpen}\n                              autoHideDuration={2000}\n                              onClose={this.handleClose}\n                            >\n                            <SnackbarContent\n                              message=\"Node added\"\n                            />\n                            </Snackbar>\n                        </div>\n                        </form>)}\n                    </Box>)}\n\n            </Container>\n\n        )\n    }\n}\n"]},"metadata":{},"sourceType":"module"}