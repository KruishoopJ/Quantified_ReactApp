{"ast":null,"code":"var _jsxFileName = \"/Users/markheij/ipmedth_airsupport/frontend/src/steps/Step_7_Node_Add.js\";\nimport React, { Component } from 'react';\nimport QrReader from 'react-qr-reader';\nimport \"../containers/Home.css\";\nimport { Container, Typography, Box, Grid, SnackbarContent, Snackbar, TextField, Button, Input, withStyles } from '@material-ui/core';\nimport \"../steps/Step.css\";\nimport firebase from \"firebase\";\nimport Firebase from \"firebase\";\nlet isScanned = false;\nlet nodeAmount;\nlet nid;\nlet xn;\nlet yn;\nlet isitdone = false;\n\nif (navigator.geolocation) {\n  navigator.geolocation.getCurrentPosition(function (position) {\n    yn = position.coords.latitude;\n    xn = position.coords.longitude;\n  });\n} else {}\n\nexport default class step8 extends Component {\n  constructor(props) {\n    super(props);\n\n    this.setAmount = () => {\n      var user = Firebase.auth().currentUser;\n\n      if (user) {\n        const uid = user.uid;\n        Firebase.firestore().collection(uid).doc(\"nodes\").get().then(function (querySnapshot) {\n          nodeAmount = parseInt(querySnapshot.data().amount);\n          console.log(nodeAmount);\n        });\n      }\n    };\n\n    this.state = {\n      result: ''\n    };\n\n    this.handleClose = () => {\n      this.setState({\n        isOpen: false\n      });\n    };\n\n    this.handleOpen = () => {\n      this.setState({\n        isOpen: true\n      });\n    };\n\n    this.handleScan = data => {\n      var user = Firebase.auth().currentUser;\n\n      if (data) {\n        //try to parse JSON (if not JSON then bad QR code)\n        try {\n          var nodedata = JSON.parse(data);\n          console.log(nodedata); //if JSON check for quantified object (if not then bad QR code)\n\n          if (nodedata.hasOwnProperty(\"quantified\") || nodedata.hasOwnProperty(\"Quantified\")) {\n            console.log(\"Quantified\");\n            this.setState({\n              isOpen: true,\n              snackbarmessage: \"Node was already added. Try another one!\"\n            });\n            nid = nodedata.quantified.id;\n\n            if (user) {\n              const uid = user.uid;\n              Firebase.firestore().collection(uid).doc(nid).get().then(docSnapshot => {\n                if (docSnapshot.exists) {\n                  this.setState({\n                    isOpen: true,\n                    snackbarmessage: \"Node was already added. Try another one!\"\n                  });\n                } else {\n                  Firebase.firestore().collection(uid).doc(nid).set(nodedata).then(function () {\n                    console.log(\"Written to firestore\");\n                  });\n                  this.setState({\n                    isOpen: true,\n                    snackbarmessage: \"Node Scanned\"\n                  });\n                  isScanned = true;\n                  console.log(isScanned);\n                }\n              });\n              this.setState({\n                isOpen: false\n              });\n            } else {\n              console.log(\"No user\");\n              this.props.history.push(\"/login\");\n            }\n          } else {\n            this.setState({\n              isOpen: true\n            });\n          }\n        } catch (e) {\n          console.error(e);\n          this.setState({\n            isOpen: true,\n            snackbarmessage: \"Can't find node QR code\"\n          });\n        }\n      }\n    };\n\n    this.handleSubmit = event => {\n      event.preventDefault();\n      const nodesGroup = this.state.nodesGroup;\n      const nodesName = this.state.nodesName;\n      var user = Firebase.auth().currentUser;\n\n      if (user) {\n        const uid = user.uid;\n        console.log(\"uid: \" + uid);\n        console.log(\"nid: \" + nid);\n        Firebase.firestore().collection(uid).doc(nid).get().then(docSnapshot => {\n          if (docSnapshot.exists) {\n            Firebase.firestore().collection(uid).doc(nid).update({\n              name: nodesName,\n              group: nodesGroup,\n              x: xn,\n              y: yn,\n              z: 1\n            }).then(function () {\n              console.log(\"Written to firestore\");\n              isitdone = true;\n            });\n\n            if (nodeAmount > 1) {\n              nodeAmount--;\n              isScanned = false;\n              this.setState({\n                isOpen: false\n              });\n            } else {\n              this.setState({\n                isDone: true,\n                isOpen: true,\n                snackbarmessage: \"data saved!\"\n              });\n            } //move to next step\n\n          } else {}\n        });\n      } else {\n        console.log(\"No user\");\n        this.props.history.push(\"/login\");\n      }\n    };\n\n    this.handleError = err => {\n      console.error(err);\n      this.setState({\n        isOpen: true\n      });\n      this.setState({\n        snackbarmessage: \"Something went wrong! Did you use the QR code?\"\n      });\n    };\n\n    this.state = {\n      nodesName: '',\n      nodesGroup: '',\n      isOpen: false,\n      isDone: false,\n      snackbarmessage: \"closed\"\n    };\n    this.handleChangeName = this.handleChangeName.bind(this);\n    this.handleChangeGroup = this.handleChangeGroup.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.setAmount();\n  }\n\n  handleChangeName(event) {\n    this.setState({\n      nodesName: event.target.value\n    });\n  }\n\n  handleChangeGroup(event) {\n    this.setState({\n      nodesGroup: event.target.value\n    });\n  }\n\n  render() {\n    return React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210\n      },\n      __self: this\n    }, React.createElement(Box, {\n      m: 1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      variant: \"overline\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212\n      },\n      __self: this\n    }, \"Installation \\u279C Nodes\"), React.createElement(Typography, {\n      variant: \"h4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215\n      },\n      __self: this\n    }, \"Nodes\"), React.createElement(Typography, {\n      display: \"block\",\n      variant: \"body1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216\n      },\n      __self: this\n    }, !isScanned && \"Scan the QR code to add the node to the system\", isScanned & !this.state.isDone && \"Give the node a name and assign it to a group\", this.state.isDone && \"Move on to the next step\")), !isScanned && React.createElement(Box, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223\n      },\n      __self: this\n    }, React.createElement(QrReader, {\n      delay: 300,\n      onError: this.handleError,\n      onScan: this.handleScan,\n      facingMode: \"environment\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224\n      },\n      __self: this\n    })), React.createElement(Snackbar, {\n      open: this.state.isOpen,\n      autoHideDuration: 2000,\n      onClose: this.handleClose,\n      message: this.state.snackbarmessage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231\n      },\n      __self: this\n    }), isScanned && React.createElement(Box, {\n      m: 1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238\n      },\n      __self: this\n    }, !this.state.isDone && React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240\n      },\n      __self: this\n    }, React.createElement(Box, {\n      m: 1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      component: \"h1\",\n      variant: \"h6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242\n      },\n      __self: this\n    }, \"Node Name\"), React.createElement(Input, {\n      name: \"nodesName\",\n      placeholder: \"Node name\",\n      id: \"nodesName\",\n      fullWidth: true,\n      margin: \"normal\",\n      required: true,\n      type: \"text\",\n      autoFocus: true,\n      onChange: this.handleChangeName,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243\n      },\n      __self: this\n    })), React.createElement(Box, {\n      m: 1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 255\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      component: \"h1\",\n      variant: \"h6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 256\n      },\n      __self: this\n    }, \"Node Group\"), React.createElement(Input, {\n      name: \"nodesGroup\",\n      placeholder: \"Node group\",\n      id: \"nodesGroup\",\n      fullWidth: true,\n      margin: \"normal\",\n      required: true,\n      type: \"text\",\n      onChange: this.handleChangeGroup,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 269\n      },\n      __self: this\n    }, React.createElement(Button, {\n      type: \"submit\",\n      fullWidth: true,\n      variant: \"contained\",\n      color: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 270\n      },\n      __self: this\n    }, \"Save\"), React.createElement(Snackbar, {\n      open: this.isOpen,\n      autoHideDuration: 2000,\n      onClose: this.handleClose,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 277\n      },\n      __self: this\n    }, React.createElement(SnackbarContent, {\n      message: \"Node added\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 282\n      },\n      __self: this\n    }))))));\n  }\n\n}","map":{"version":3,"sources":["/Users/markheij/ipmedth_airsupport/frontend/src/steps/Step_7_Node_Add.js"],"names":["React","Component","QrReader","Container","Typography","Box","Grid","SnackbarContent","Snackbar","TextField","Button","Input","withStyles","firebase","Firebase","isScanned","nodeAmount","nid","xn","yn","isitdone","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude","step8","constructor","props","setAmount","user","auth","currentUser","uid","firestore","collection","doc","get","then","querySnapshot","parseInt","data","amount","console","log","state","result","handleClose","setState","isOpen","handleOpen","handleScan","nodedata","JSON","parse","hasOwnProperty","snackbarmessage","quantified","id","docSnapshot","exists","set","history","push","e","error","handleSubmit","event","preventDefault","nodesGroup","nodesName","update","name","group","x","y","z","isDone","handleError","err","handleChangeName","bind","handleChangeGroup","target","value","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,QAAP,MAAqB,iBAArB;AACA,OAAO,wBAAP;AACA,SACIC,SADJ,EAEIC,UAFJ,EAGIC,GAHJ,EAIIC,IAJJ,EAKIC,eALJ,EAMIC,QANJ,EAOIC,SAPJ,EAQIC,MARJ,EASIC,KATJ,EAUIC,UAVJ,QAWO,mBAXP;AAYA,OAAO,mBAAP;AACA,OAAOC,QAAP,MAAqB,UAArB;AACA,OAAOC,QAAP,MAAqB,UAArB;AAIA,IAAIC,SAAS,GAAG,KAAhB;AACA,IAAIC,UAAJ;AACA,IAAIC,GAAJ;AACA,IAAIC,EAAJ;AACA,IAAIC,EAAJ;AACA,IAAIC,QAAQ,GAAG,KAAf;;AAEA,IAAIC,SAAS,CAACC,WAAd,EAA2B;AACvBD,EAAAA,SAAS,CAACC,WAAV,CAAsBC,kBAAtB,CAAyC,UAAUC,QAAV,EAAoB;AACzDL,IAAAA,EAAE,GAAGK,QAAQ,CAACC,MAAT,CAAgBC,QAArB;AACAR,IAAAA,EAAE,GAAGM,QAAQ,CAACC,MAAT,CAAgBE,SAArB;AAEH,GAJD;AAKH,CAND,MAMM,CAEL;;AAED,eAAe,MAAMC,KAAN,SAAoB3B,SAApB,CAA8B;AAEzC4B,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SASnBC,SATmB,GASR,MAAK;AACZ,UAAIC,IAAI,GAAGlB,QAAQ,CAACmB,IAAT,GAAgBC,WAA3B;;AACA,UAAIF,IAAJ,EAAU;AACN,cAAMG,GAAG,GAAGH,IAAI,CAACG,GAAjB;AACArB,QAAAA,QAAQ,CAACsB,SAAT,GAAqBC,UAArB,CAAgCF,GAAhC,EAAqCG,GAArC,CAAyC,OAAzC,EAAkDC,GAAlD,GAAwDC,IAAxD,CAA6D,UAASC,aAAT,EAAuB;AAChFzB,UAAAA,UAAU,GAAG0B,QAAQ,CAACD,aAAa,CAACE,IAAd,GAAqBC,MAAtB,CAArB;AACAC,UAAAA,OAAO,CAACC,GAAR,CAAY9B,UAAZ;AACC,SAHL;AAMH;AACJ,KApBkB;;AAAA,SAsBnB+B,KAtBmB,GAsBX;AACJC,MAAAA,MAAM,EAAE;AADJ,KAtBW;;AAAA,SAkCnBC,WAlCmB,GAkCL,MAAK;AACjB,WAAKC,QAAL,CAAc;AAACC,QAAAA,MAAM,EAAE;AAAT,OAAd;AACD,KApCkB;;AAAA,SAsCnBC,UAtCmB,GAsCN,MAAK;AACd,WAAKF,QAAL,CAAc;AAACC,QAAAA,MAAM,EAAC;AAAR,OAAd;AACH,KAxCkB;;AAAA,SA0CnBE,UA1CmB,GA0CNV,IAAI,IAAI;AACjB,UAAIX,IAAI,GAAGlB,QAAQ,CAACmB,IAAT,GAAgBC,WAA3B;;AACA,UAAIS,IAAJ,EAAU;AACN;AACA,YAAI;AACA,cAAIW,QAAQ,GAAGC,IAAI,CAACC,KAAL,CAAWb,IAAX,CAAf;AACAE,UAAAA,OAAO,CAACC,GAAR,CAAYQ,QAAZ,EAFA,CAGA;;AACA,cAAGA,QAAQ,CAACG,cAAT,CAAwB,YAAxB,KAAyCH,QAAQ,CAACG,cAAT,CAAwB,YAAxB,CAA5C,EAAkF;AAC9EZ,YAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AACA,iBAAKI,QAAL,CAAc;AACVC,cAAAA,MAAM,EAAE,IADE;AAEVO,cAAAA,eAAe,EAAE;AAFP,aAAd;AAIAzC,YAAAA,GAAG,GAAGqC,QAAQ,CAACK,UAAT,CAAoBC,EAA1B;;AAEA,gBAAI5B,IAAJ,EAAU;AACN,oBAAMG,GAAG,GAAGH,IAAI,CAACG,GAAjB;AACArB,cAAAA,QAAQ,CAACsB,SAAT,GAAqBC,UAArB,CAAgCF,GAAhC,EAAqCG,GAArC,CAAyCrB,GAAzC,EAA8CsB,GAA9C,GACKC,IADL,CACWqB,WAAD,IAAgB;AAClB,oBAAIA,WAAW,CAACC,MAAhB,EAAuB;AACnB,uBAAKZ,QAAL,CAAc;AACVC,oBAAAA,MAAM,EAAE,IADE;AAEVO,oBAAAA,eAAe,EAAE;AAFP,mBAAd;AAKH,iBAND,MAMM;AACF5C,kBAAAA,QAAQ,CAACsB,SAAT,GAAqBC,UAArB,CAAgCF,GAAhC,EAAqCG,GAArC,CAAyCrB,GAAzC,EAA8C8C,GAA9C,CAAkDT,QAAlD,EAA4Dd,IAA5D,CAAiE,YAAY;AACzEK,oBAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ;AACH,mBAFD;AAGA,uBAAKI,QAAL,CAAc;AACVC,oBAAAA,MAAM,EAAE,IADE;AAEVO,oBAAAA,eAAe,EAAE;AAFP,mBAAd;AAIA3C,kBAAAA,SAAS,GAAG,IAAZ;AACA8B,kBAAAA,OAAO,CAACC,GAAR,CAAY/B,SAAZ;AAEH;AAEJ,eArBL;AAsBA,mBAAKmC,QAAL,CAAc;AAACC,gBAAAA,MAAM,EAAE;AAAT,eAAd;AAGH,aA3BD,MA2BK;AACDN,cAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACA,mBAAKhB,KAAL,CAAWkC,OAAX,CAAmBC,IAAnB,CAAwB,QAAxB;AACH;AACJ,WAvCD,MAuCK;AACD,iBAAKf,QAAL,CAAc;AACVC,cAAAA,MAAM,EAAE;AADE,aAAd;AAGH;AACJ,SAhDD,CAgDC,OAAOe,CAAP,EAAU;AACPrB,UAAAA,OAAO,CAACsB,KAAR,CAAcD,CAAd;AACA,eAAKhB,QAAL,CAAc;AACVC,YAAAA,MAAM,EAAE,IADE;AAEVO,YAAAA,eAAe,EAAE;AAFP,WAAd;AAIH;AACJ;AACJ,KAtGkB;;AAAA,SA2GnBU,YA3GmB,GA2GHC,KAAD,IAAU;AACrBA,MAAAA,KAAK,CAACC,cAAN;AACA,YAAMC,UAAU,GAAG,KAAKxB,KAAL,CAAWwB,UAA9B;AACA,YAAMC,SAAS,GAAG,KAAKzB,KAAL,CAAWyB,SAA7B;AAGA,UAAIxC,IAAI,GAAGlB,QAAQ,CAACmB,IAAT,GAAgBC,WAA3B;;AACA,UAAIF,IAAJ,EAAU;AACN,cAAMG,GAAG,GAAGH,IAAI,CAACG,GAAjB;AACAU,QAAAA,OAAO,CAACC,GAAR,CAAY,UAASX,GAArB;AACAU,QAAAA,OAAO,CAACC,GAAR,CAAY,UAAU7B,GAAtB;AACAH,QAAAA,QAAQ,CAACsB,SAAT,GAAqBC,UAArB,CAAgCF,GAAhC,EAAqCG,GAArC,CAAyCrB,GAAzC,EAA8CsB,GAA9C,GACKC,IADL,CACWqB,WAAD,IAAgB;AAClB,cAAIA,WAAW,CAACC,MAAhB,EAAuB;AACnBhD,YAAAA,QAAQ,CAACsB,SAAT,GAAqBC,UAArB,CAAgCF,GAAhC,EAAqCG,GAArC,CAAyCrB,GAAzC,EAA8CwD,MAA9C,CAAqD;AACjDC,cAAAA,IAAI,EAAEF,SAD2C;AAEjDG,cAAAA,KAAK,EAAEJ,UAF0C;AAGjDK,cAAAA,CAAC,EAAE1D,EAH8C;AAIjD2D,cAAAA,CAAC,EAAE1D,EAJ8C;AAKjD2D,cAAAA,CAAC,EAAE;AAL8C,aAArD,EAMGtC,IANH,CAMQ,YAAY;AAChBK,cAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ;AACA1B,cAAAA,QAAQ,GAAG,IAAX;AAGH,aAXD;;AAYA,gBAAGJ,UAAU,GAAG,CAAhB,EAAkB;AACdA,cAAAA,UAAU;AACVD,cAAAA,SAAS,GAAG,KAAZ;AACA,mBAAKmC,QAAL,CAAc;AAACC,gBAAAA,MAAM,EAAE;AAAT,eAAd;AACH,aAJD,MAIK;AACD,mBAAKD,QAAL,CAAc;AAAC6B,gBAAAA,MAAM,EAAE,IAAT;AAAe5B,gBAAAA,MAAM,EAAE,IAAvB;AAA6BO,gBAAAA,eAAe,EAAE;AAA9C,eAAd;AACH,aAnBkB,CAoBnB;;AAEH,WAtBD,MAsBM,CAGL;AACJ,SA5BL;AA+BH,OAnCD,MAmCK;AACDb,QAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACA,aAAKhB,KAAL,CAAWkC,OAAX,CAAmBC,IAAnB,CAAwB,QAAxB;AACH;AACJ,KAzJkB;;AAAA,SA8JnBe,WA9JmB,GA8JLC,GAAG,IAAI;AACjBpC,MAAAA,OAAO,CAACsB,KAAR,CAAcc,GAAd;AACA,WAAK/B,QAAL,CAAc;AAACC,QAAAA,MAAM,EAAC;AAAR,OAAd;AACA,WAAKD,QAAL,CAAc;AACVQ,QAAAA,eAAe,EAAE;AADP,OAAd;AAGH,KApKkB;;AAEf,SAAKX,KAAL,GAAa;AAACyB,MAAAA,SAAS,EAAE,EAAZ;AAAgBD,MAAAA,UAAU,EAAE,EAA5B;AAAgCpB,MAAAA,MAAM,EAAE,KAAxC;AAA+C4B,MAAAA,MAAM,EAAE,KAAvD;AAA8DrB,MAAAA,eAAe,EAAE;AAA/E,KAAb;AACA,SAAKwB,gBAAL,GAAwB,KAAKA,gBAAL,CAAsBC,IAAtB,CAA2B,IAA3B,CAAxB;AACA,SAAKC,iBAAL,GAAyB,KAAKA,iBAAL,CAAuBD,IAAvB,CAA4B,IAA5B,CAAzB;AACA,SAAKf,YAAL,GAAoB,KAAKA,YAAL,CAAkBe,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAKpD,SAAL;AACH;;AAmBDmD,EAAAA,gBAAgB,CAACb,KAAD,EAAO;AACrB,SAAKnB,QAAL,CAAc;AAACsB,MAAAA,SAAS,EAAEH,KAAK,CAACgB,MAAN,CAAaC;AAAzB,KAAd;AACD;;AAEDF,EAAAA,iBAAiB,CAACf,KAAD,EAAO;AACtB,SAAKnB,QAAL,CAAc;AAACqB,MAAAA,UAAU,EAAEF,KAAK,CAACgB,MAAN,CAAaC;AAA1B,KAAd;AACD;;AAsIDC,EAAAA,MAAM,GAAG;AAEL,WACI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,GAAD;AAAK,MAAA,CAAC,EAAE,CAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACQ,oBAAC,UAAD;AAAY,MAAA,OAAO,EAAC,UAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCADR,EAIQ,oBAAC,UAAD;AAAY,MAAA,OAAO,EAAC,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAJR,EAKQ,oBAAC,UAAD;AAAY,MAAA,OAAO,EAAC,OAApB;AAA4B,MAAA,OAAO,EAAC,OAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,CAACxE,SAAD,IAAe,gDADpB,EAEKA,SAAS,GAAG,CAAC,KAAKgC,KAAL,CAAWgC,MAAxB,IAAmC,+CAFxC,EAGK,KAAKhC,KAAL,CAAWgC,MAAX,IAAsB,0BAH3B,CALR,CADJ,EAYS,CAAChE,SAAD,IACG,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACQ,oBAAC,QAAD;AACI,MAAA,KAAK,EAAE,GADX;AAEI,MAAA,OAAO,EAAE,KAAKiE,WAFlB;AAGI,MAAA,MAAM,EAAE,KAAK3B,UAHjB;AAII,MAAA,UAAU,EAAE,aAJhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADR,CAbZ,EAqBI,oBAAC,QAAD;AACI,MAAA,IAAI,EAAE,KAAKN,KAAL,CAAWI,MADrB;AAEI,MAAA,gBAAgB,EAAE,IAFtB;AAGI,MAAA,OAAO,EAAE,KAAKF,WAHlB;AAII,MAAA,OAAO,EAAE,KAAKF,KAAL,CAAWW,eAJxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MArBJ,EA2Ba3C,SAAS,IACd,oBAAC,GAAD;AAAK,MAAA,CAAC,EAAE,CAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,CAAC,KAAKgC,KAAL,CAAWgC,MAAZ,IAAsB;AAAM,MAAA,QAAQ,EAAE,KAAKX,YAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,GAAD;AAAK,MAAA,CAAC,EAAE,CAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,UAAD;AAAY,MAAA,SAAS,EAAC,IAAtB;AAA2B,MAAA,OAAO,EAAC,IAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,EAEA,oBAAC,KAAD;AACM,MAAA,IAAI,EAAC,WADX;AAEM,MAAA,WAAW,EAAC,WAFlB;AAGM,MAAA,EAAE,EAAC,WAHT;AAIM,MAAA,SAAS,MAJf;AAKM,MAAA,MAAM,EAAC,QALb;AAMM,MAAA,QAAQ,MANd;AAOM,MAAA,IAAI,EAAC,MAPX;AAQM,MAAA,SAAS,MARf;AASM,MAAA,QAAQ,EAAE,KAAKc,gBATrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFA,CADF,EAeE,oBAAC,GAAD;AAAK,MAAA,CAAC,EAAE,CAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA,oBAAC,UAAD;AAAY,MAAA,SAAS,EAAC,IAAtB;AAA2B,MAAA,OAAO,EAAC,IAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADA,EAEA,oBAAC,KAAD;AACM,MAAA,IAAI,EAAC,YADX;AAEM,MAAA,WAAW,EAAC,YAFlB;AAGM,MAAA,EAAE,EAAC,YAHT;AAIM,MAAA,SAAS,MAJf;AAKM,MAAA,MAAM,EAAC,QALb;AAMM,MAAA,QAAQ,MANd;AAOM,MAAA,IAAI,EAAC,MAPX;AAQM,MAAA,QAAQ,EAAE,KAAKE,iBARrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFA,CAfF,CADuB,EA8BvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,MAAD;AAAQ,MAAA,IAAI,EAAC,QAAb;AACQ,MAAA,SAAS,MADjB;AAEQ,MAAA,OAAO,EAAC,WAFhB;AAGQ,MAAA,KAAK,EAAC,SAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,EAQI,oBAAC,QAAD;AACE,MAAA,IAAI,EAAE,KAAKjC,MADb;AAEE,MAAA,gBAAgB,EAAE,IAFpB;AAGE,MAAA,OAAO,EAAE,KAAKF,WAHhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAKA,oBAAC,eAAD;AACE,MAAA,OAAO,EAAC,YADV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALA,CARJ,CA9BuB,CAD3B,CA5BR,CADJ;AAoFH;;AA9PwC","sourcesContent":["import React, { Component } from 'react'\nimport QrReader from 'react-qr-reader'\nimport \"../containers/Home.css\";\nimport {\n    Container,\n    Typography,\n    Box,\n    Grid,\n    SnackbarContent,\n    Snackbar,\n    TextField,\n    Button,\n    Input,\n    withStyles\n} from '@material-ui/core';\nimport \"../steps/Step.css\"\nimport firebase from \"firebase\";\nimport Firebase from \"firebase\";\n\n\n\nlet isScanned = false;\nlet nodeAmount;\nlet nid;\nlet xn;\nlet yn;\nlet isitdone = false;\n\nif (navigator.geolocation) {\n    navigator.geolocation.getCurrentPosition(function (position) {\n        yn = position.coords.latitude;\n        xn = position.coords.longitude;\n\n    });\n}else {\n\n}\n\nexport default class step8 extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {nodesName: '', nodesGroup: '', isOpen: false, isDone: false, snackbarmessage: \"closed\"};\n        this.handleChangeName = this.handleChangeName.bind(this);\n        this.handleChangeGroup = this.handleChangeGroup.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.setAmount()\n    }\n\n    setAmount =() =>{\n        var user = Firebase.auth().currentUser;\n        if (user) {\n            const uid = user.uid;\n            Firebase.firestore().collection(uid).doc(\"nodes\").get().then(function(querySnapshot){\n                nodeAmount = parseInt(querySnapshot.data().amount)\n                console.log(nodeAmount)\n                });\n\n\n        }\n    };\n\n    state = {\n        result: ''\n    };\n\n    handleChangeName(event){\n      this.setState({nodesName: event.target.value});\n    }\n\n    handleChangeGroup(event){\n      this.setState({nodesGroup: event.target.value});\n    }\n\n    handleClose = () =>{\n      this.setState({isOpen: false});\n    }\n\n    handleOpen = () =>{\n        this.setState({isOpen:true})\n    }\n\n    handleScan = data => {\n        var user = Firebase.auth().currentUser;\n        if (data) {\n            //try to parse JSON (if not JSON then bad QR code)\n            try {\n                var nodedata = JSON.parse(data);\n                console.log(nodedata);\n                //if JSON check for quantified object (if not then bad QR code)\n                if(nodedata.hasOwnProperty(\"quantified\") || nodedata.hasOwnProperty(\"Quantified\")){\n                    console.log(\"Quantified\");\n                    this.setState({\n                        isOpen: true,\n                        snackbarmessage: \"Node was already added. Try another one!\"\n                    });\n                    nid = nodedata.quantified.id;\n\n                    if (user) {\n                        const uid = user.uid;\n                        Firebase.firestore().collection(uid).doc(nid).get()\n                            .then((docSnapshot) =>{\n                                if (docSnapshot.exists){\n                                    this.setState({\n                                        isOpen: true,\n                                        snackbarmessage: \"Node was already added. Try another one!\"\n                                    });\n\n                                }else {\n                                    Firebase.firestore().collection(uid).doc(nid).set(nodedata).then(function () {\n                                        console.log(\"Written to firestore\");\n                                    });\n                                    this.setState({\n                                        isOpen: true,\n                                        snackbarmessage: \"Node Scanned\"\n                                    });\n                                    isScanned = true;\n                                    console.log(isScanned)\n\n                                }\n\n                            });\n                        this.setState({isOpen: false});\n\n\n                    }else{\n                        console.log(\"No user\");\n                        this.props.history.push(\"/login\")\n                    }\n                }else{\n                    this.setState({\n                        isOpen: true\n                    });\n                }\n            }catch (e) {\n                console.error(e);\n                this.setState({\n                    isOpen: true,\n                    snackbarmessage: \"Can't find node QR code\"\n                });\n            }\n        }\n    };\n\n\n\n\n    handleSubmit = (event) =>{\n        event.preventDefault();\n        const nodesGroup = this.state.nodesGroup;\n        const nodesName = this.state.nodesName;\n\n\n        var user = Firebase.auth().currentUser;\n        if (user) {\n            const uid = user.uid;\n            console.log(\"uid: \"+ uid);\n            console.log(\"nid: \" + nid);\n            Firebase.firestore().collection(uid).doc(nid).get()\n                .then((docSnapshot) =>{\n                    if (docSnapshot.exists){\n                        Firebase.firestore().collection(uid).doc(nid).update({\n                            name: nodesName,\n                            group: nodesGroup,\n                            x: xn,\n                            y: yn,\n                            z: 1\n                        }).then(function () {\n                            console.log(\"Written to firestore\");\n                            isitdone = true;\n\n\n                        });\n                        if(nodeAmount > 1){\n                            nodeAmount--;\n                            isScanned = false;\n                            this.setState({isOpen: false})\n                        }else{\n                            this.setState({isDone: true, isOpen: true ,snackbarmessage: \"data saved!\" });\n                        }\n                        //move to next step\n\n                    }else {\n\n\n                    }\n                });\n\n\n        }else{\n            console.log(\"No user\");\n            this.props.history.push(\"/login\")\n        }\n    }\n\n\n\n\n    handleError = err => {\n        console.error(err);\n        this.setState({isOpen:true})\n        this.setState({\n            snackbarmessage: \"Something went wrong! Did you use the QR code?\"\n        })\n    };\n\n    render() {\n\n        return (\n            <Container>\n                <Box m={1}>\n                        <Typography variant=\"overline\">\n                          Installation &#10140; Nodes\n                        </Typography>\n                        <Typography variant=\"h4\">Nodes</Typography>\n                        <Typography display=\"block\" variant=\"body1\">\n                            {!isScanned && (\"Scan the QR code to add the node to the system\")}\n                            {isScanned & !this.state.isDone && (\"Give the node a name and assign it to a group\")}\n                            {this.state.isDone && (\"Move on to the next step\")}\n                        </Typography>\n                    </Box>\n                    {!isScanned && (\n                        <Box>\n                                <QrReader\n                                    delay={300}\n                                    onError={this.handleError}\n                                    onScan={this.handleScan}\n                                    facingMode={\"environment\"}\n                                />\n                        </Box>)}\n                <Snackbar\n                    open={this.state.isOpen}\n                    autoHideDuration={2000}\n                    onClose={this.handleClose}\n                    message={this.state.snackbarmessage}\n               />\n                        {isScanned && (\n                    <Box m={1}>\n                        {!this.state.isDone &&(<form onSubmit={this.handleSubmit}>\n                        <div>\n                          <Box m={1}>\n                            <Typography component=\"h1\" variant=\"h6\">Node Name</Typography>\n                          <Input\n                                name=\"nodesName\"\n                                placeholder=\"Node name\"\n                                id=\"nodesName\"\n                                fullWidth\n                                margin=\"normal\"\n                                required\n                                type=\"text\"\n                                autoFocus\n                                onChange={this.handleChangeName}\n                            />\n                        </Box>\n                          <Box m={1}>\n                          <Typography component=\"h1\" variant=\"h6\">Node Group</Typography>\n                          <Input\n                                name=\"nodesGroup\"\n                                placeholder=\"Node group\"\n                                id=\"nodesGroup\"\n                                fullWidth\n                                margin=\"normal\"\n                                required\n                                type=\"text\"\n                                onChange={this.handleChangeGroup}\n                            />\n                        </Box>\n                        </div>\n                        <div>\n                            <Button type=\"submit\"\n                                    fullWidth\n                                    variant=\"contained\"\n                                    color=\"primary\"\n                                    >\n                                Save\n                            </Button>\n                            <Snackbar\n                              open={this.isOpen}\n                              autoHideDuration={2000}\n                              onClose={this.handleClose}\n                            >\n                            <SnackbarContent\n                              message=\"Node added\"\n                            />\n                            </Snackbar>\n                        </div>\n                        </form>)}\n                    </Box>)}\n\n            </Container>\n\n        )\n    }\n}\n"]},"metadata":{},"sourceType":"module"}