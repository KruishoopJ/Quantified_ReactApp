{"ast":null,"code":"import _slicedToArray from\"/Users/markheij/ipmedth_airsupport/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React from\"react\";import nodeIcon from'../icons/node.png';import\"./Nodes.css\";import{Button,List,ListItem,ListItemText,ListItemAvatar,ListSubheader,Badge,Box,Paper}from'@material-ui/core';import{withStyles,makeStyles}from'@material-ui/core/styles';import{LinkContainer}from\"react-router-bootstrap\";import TopMenuBar from\"../components/TopMenuBar\";import Firebase from\"firebase\";var offlineNodes;var onlineNodes;var isLoaded=false;var nodes=[];var useStyles=makeStyles(function(theme){return{button:{width:'100%',height:'100%'}};});var StyledBadge=withStyles(function(theme){return{badge:{right:-3,top:30,border:\"2px solid \".concat(theme.palette.background.paper),padding:'0 2px',height:'15px',minWidth:'15px'}};})(Badge);export default function Nodes(props){var _React$useState=React.useState(false),_React$useState2=_slicedToArray(_React$useState,2),loaded=_React$useState2[0],isItLoaded=_React$useState2[1];var user=Firebase.auth().currentUser;if(user){var uid=user.uid;Firebase.firestore().collection(uid).get().then(function(querySnapshot){querySnapshot.forEach(function(doc){// doc.data() is never undefined for query doc snapshots\n//console.log(doc.id, \" => \", doc.data());\nvar nodedata=doc.data();var idn=doc.id;var groupn=nodedata.group;var namen=nodedata.name;var statusn=\"Online\";//nodedata.status\nvar xn=nodedata.x;var yn=nodedata.y;var zn=nodedata.z;var nodeExists=false;var newNode={id:idn,key:idn,name:namen,group:groupn,status:statusn,x:xn,y:yn,z:zn};nodes.forEach(function(n){if(n.key===idn){nodeExists=true;}else if(idn===\"nodes\"){nodeExists=true;}else{//nothing, node is already in the list\n}});if(!nodeExists){nodes.push(newNode);}});offlineNodes=nodes.filter(function(node){return node.status==='Offline';});onlineNodes=nodes.filter(function(node){return node.status==='Online';});isLoaded=true;isItLoaded(true);});}else{}var classes=useStyles();return React.createElement(\"div\",null,React.createElement(TopMenuBar,{block:true,pageName:\"Nodes\",hamburgerMenu:true,closeButtonOnly:false,closeWithPrompt:false,backButton:true,backRoutePage:\"/\"}),React.createElement(Paper,{id:\"nodesList\"},React.createElement(List,{color:\"primary\"},React.createElement(ListSubheader,{disableSticky:\"true\"},\"Offline nodes\"),isLoaded&&offlineNodes.map(function(node){return React.createElement(ListItem,{className:\"noPadding\"},React.createElement(ListItemAvatar,null,React.createElement(StyledBadge,{classes:{badge:\"offline\"},badgeContent:\" \"},React.createElement(\"img\",{src:nodeIcon,alt:\"nodeIcon\",className:\"nodeListNodeIcon\"}))),React.createElement(ListItemText,{primary:node.name,secondary:node.group}));}),React.createElement(ListSubheader,{disableSticky:\"true\"},\"Online nodes\"),isLoaded&&onlineNodes.map(function(node){return React.createElement(ListItem,{className:\"noPadding\"},React.createElement(ListItemAvatar,null,React.createElement(StyledBadge,{classes:{badge:\"online\"},badgeContent:\" \"},React.createElement(\"img\",{src:nodeIcon,alt:\"nodeIcon\",className:\"nodeListNodeIcon\"}))),React.createElement(ListItemText,{primary:node.name,secondary:node.group}));}))),React.createElement(Box,{className:\"buttonContainer\"},React.createElement(LinkContainer,{to:\"/installation\"},React.createElement(Button,{variant:\"contained\",size:\"large\",color:\"primary\",className:classes.button},React.createElement(\"img\",{src:nodeIcon,alt:\"nodeIcon\",className:\"customNodeIcon\"}),\"Add nodes\"))));}","map":{"version":3,"sources":["/Users/markheij/ipmedth_airsupport/frontend/src/containers/Nodes.js"],"names":["React","nodeIcon","Button","List","ListItem","ListItemText","ListItemAvatar","ListSubheader","Badge","Box","Paper","withStyles","makeStyles","LinkContainer","TopMenuBar","Firebase","offlineNodes","onlineNodes","isLoaded","nodes","useStyles","theme","button","width","height","StyledBadge","badge","right","top","border","palette","background","paper","padding","minWidth","Nodes","props","useState","loaded","isItLoaded","user","auth","currentUser","uid","firestore","collection","get","then","querySnapshot","forEach","doc","nodedata","data","idn","id","groupn","group","namen","name","statusn","xn","x","yn","y","zn","z","nodeExists","newNode","key","status","n","push","filter","node","classes","map"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport nodeIcon from '../icons/node.png';\nimport \"./Nodes.css\";\nimport { Button, List, ListItem, ListItemText, ListItemAvatar, ListSubheader, Badge, Box, Paper } from '@material-ui/core';\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\nimport { LinkContainer } from \"react-router-bootstrap\"\nimport TopMenuBar from \"../components/TopMenuBar\";\nimport Firebase from \"firebase\";\n\nlet offlineNodes;\nlet onlineNodes;\nlet isLoaded = false;\n\nconst nodes = [];\n\n\n\nconst useStyles = makeStyles(theme => ({\n  button: {\n    width: '100%',\n    height: '100%',\n  }\n}));\n\nconst StyledBadge = withStyles(theme => ({\n  badge: {\n    right: -3,\n    top: 30,\n    border: `2px solid ${theme.palette.background.paper}`,\n    padding: '0 2px',\n    height: '15px',\n    minWidth: '15px',\n  },\n}))(Badge);\n\nexport default function Nodes(props) {\n\n  const[loaded, isItLoaded] = React.useState(false);\n\n\n\n  var user = Firebase.auth().currentUser;\n\n  if (user) {\n    const uid = user.uid;\n\n    Firebase.firestore().collection(uid).get().then(function(querySnapshot){\n      querySnapshot.forEach(function(doc) {\n        // doc.data() is never undefined for query doc snapshots\n        //console.log(doc.id, \" => \", doc.data());\n        let nodedata = doc.data();\n        let idn = doc.id;\n        let groupn = nodedata.group;\n        let namen = nodedata.name;\n        let statusn = \"Online\"; //nodedata.status\n        let xn = nodedata.x;\n        let yn = nodedata.y;\n        let zn = nodedata.z;\n        let nodeExists = false;\n        let newNode = {\n          id: idn,\n          key: idn,\n          name: namen,\n          group: groupn,\n          status: statusn,\n          x: xn,\n          y: yn,\n          z: zn\n        };\n\n        nodes.forEach(function (n) {\n          if(n.key === idn) {\n            nodeExists = true;\n          }else if (idn ===\"nodes\"){\n            nodeExists = true;\n          }else{\n              //nothing, node is already in the list\n            }\n\n        })\n\n        if (!nodeExists){\n          nodes.push(newNode);\n        }\n\n\n\n\n      });\n      offlineNodes= nodes.filter((node) => node.status === 'Offline');\n      onlineNodes = nodes.filter((node) => node.status === 'Online');\n      isLoaded = true;\n      isItLoaded(true);\n    })\n\n  }else{\n\n  }\n  const classes = useStyles();\n\n\n\n  return (\n      <div>\n        <TopMenuBar block pageName=\"Nodes\" hamburgerMenu={true} closeButtonOnly={false} closeWithPrompt={false}\n                    backButton={true} backRoutePage=\"/\"/>\n        <Paper id=\"nodesList\">\n          <List color=\"primary\">\n            <ListSubheader disableSticky='true'>Offline nodes</ListSubheader>\n            {isLoaded && offlineNodes.map((node) =>\n                  <ListItem className=\"noPadding\">\n                    <ListItemAvatar>\n                      <StyledBadge classes={{badge: \"offline\"}} badgeContent=\" \">\n                        <img src={nodeIcon} alt=\"nodeIcon\" className=\"nodeListNodeIcon\"/>\n                      </StyledBadge>\n                    </ListItemAvatar>\n                    <ListItemText primary={node.name} secondary={node.group}/>\n                  </ListItem>\n            )}\n            <ListSubheader disableSticky='true'>Online nodes</ListSubheader>\n            {isLoaded && onlineNodes.map((node) =>\n                  <ListItem className=\"noPadding\">\n                    <ListItemAvatar>\n                      <StyledBadge classes={{badge: \"online\"}} badgeContent=\" \">\n                        <img src={nodeIcon} alt=\"nodeIcon\" className=\"nodeListNodeIcon\"/>\n                      </StyledBadge>\n                    </ListItemAvatar>\n                    <ListItemText primary={node.name} secondary={node.group}/>\n                  </ListItem>\n            )}\n          </List>\n        </Paper>\n        <Box className=\"buttonContainer\">\n          <LinkContainer to=\"/installation\">\n            <Button variant=\"contained\" size=\"large\" color=\"primary\" className={classes.button}>\n              <img src={nodeIcon} alt=\"nodeIcon\" className=\"customNodeIcon\"/>\n              Add nodes\n            </Button>\n          </LinkContainer>\n        </Box>\n      </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}