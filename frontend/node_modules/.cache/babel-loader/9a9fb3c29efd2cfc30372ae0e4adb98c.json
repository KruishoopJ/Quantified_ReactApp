{"ast":null,"code":"import _slicedToArray from \"/Users/markheij/ipmedth_airsupport/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/markheij/ipmedth_airsupport/frontend/src/containers/NodeInfo.js\";\nimport React from \"react\";\nimport \"./NodeInfo.css\";\nimport TopMenuBar from \"../components/TopMenuBar\";\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\nimport { List, ListItem, ListItemAvatar, Badge, FormControl, InputLabel, Input, Button, Typography } from '@material-ui/core';\nimport { withScriptjs, withGoogleMap, GoogleMap, Marker } from \"react-google-maps\";\nimport Firebase from \"firebase\";\nconst useStyles = makeStyles(theme => ({\n  inputFieldText: {\n    fontSize: \"1em\"\n  },\n  saveButton: {\n    marginRight: '16px',\n    marginTop: '10px'\n  },\n  deleteButton: {\n    color: '#FF0000',\n    borderColor: '#FF0000',\n    marginTop: '10px'\n  }\n}));\nconst StyledBadge = withStyles(theme => ({\n  badge: {\n    right: -5,\n    top: 16,\n    border: `2px solid ${theme.palette.background.paper}`,\n    padding: '0 2px',\n    height: '11px',\n    minWidth: '11px'\n  }\n}))(Badge);\nexport default function NodeInfo(props) {\n  const _React$useState = React.useState(false),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        itLoaded = _React$useState2[0],\n        isItLoaded = _React$useState2[1];\n\n  Firebase.auth().onAuthStateChanged(function (user) {\n    if (user) {\n      console.log(\"User is signed in\");\n    } else {\n      console.log(\"User is not signed in\");\n      props.history.push(\"/login\");\n    }\n  });\n  let nodeId = props.match.params.nodeId;\n  const nodes = [];\n  let selectedNode;\n  let loaded = false;\n  var user = Firebase.auth().currentUser;\n\n  if (user) {\n    const uid = user.uid;\n    Firebase.firestore().collection(uid).get().then(function (querySnapshot) {\n      querySnapshot.forEach(function (doc) {\n        // doc.data() is never undefined for query doc snapshots\n        //console.log(doc.id, \" => \", doc.data());\n        let nodedata = doc.data();\n        let idn = nodedata.quantified.id;\n        let groupn = nodedata.group;\n        let namen = nodedata.name;\n        let statusn = \"Online\"; //nodedata.status\n\n        let xn = nodedata.x;\n        let yn = nodedata.y;\n        let zn = nodedata.z;\n        let nodeExists = false;\n        let newNode = {\n          id: idn,\n          key: idn,\n          name: namen,\n          group: groupn,\n          status: statusn,\n          x: xn,\n          y: yn,\n          z: zn\n        };\n        nodes.forEach(function (n) {\n          if (n.key === idn) {\n            nodeExists = true;\n          } else {//nothing, node is already in the list\n          }\n        });\n\n        if (!nodeExists) {\n          nodes.push(newNode);\n        }\n\n        console.log(loaded);\n        selectedNode = nodes.filter(node => node.id === nodeId)[0];\n        console.log(selectedNode);\n\n        if (selectedNode) {\n          console.log(selectedNode);\n        }\n\n        console.log(nodeId);\n      });\n      isItLoaded(true);\n\n      if (isItLoaded) {\n        loaded = true;\n      }\n\n      console.log(loaded);\n      console.log(itLoaded);\n    });\n  } else {}\n\n  const classes = useStyles(); //const MyMapComponent = withScriptjs(withGoogleMap((props) =>\n  //    <GoogleMap\n  //       defaultZoom={8}\n  //       defaultCenter={{ }}\n  //  >\n  //        {props.isMarkerShown && <Marker position={{ lat: -34.397, lng: 150.644 }} />}\n  //    </GoogleMap>\n  //))\n\n  async function handleChange() {//update the database by sending the new value to the API\n  }\n\n  async function deleteNode() {//Delete the node in the database\n  }\n\n  ;\n\n  async function saveNode() {//Delete the node in the database\n  }\n\n  ;\n  return React.createElement(\"div\", {\n    className: \"nodInfoPage\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141\n    },\n    __self: this\n  }, React.createElement(TopMenuBar, {\n    block: true,\n    pageName: \"Node info\",\n    hamburgerMenu: true,\n    closeButtonOnly: false,\n    closeWithPrompt: false,\n    backButton: true,\n    backRoutePage: \"/nodes\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142\n    },\n    __self: this\n  }), loaded && React.createElement(List, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143\n    },\n    __self: this\n  }, console.log(\"rendering\"), React.createElement(ListItem, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    variant: \"body1\",\n    className: \"boldText bigText\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145\n    },\n    __self: this\n  }, \"Node ID \", loaded && selectedNode.id)), React.createElement(ListItem, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147\n    },\n    __self: this\n  }, React.createElement(FormControl, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148\n    },\n    __self: this\n  }, React.createElement(InputLabel, {\n    htmlFor: \"component-simple\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149\n    },\n    __self: this\n  }, \"Name\"), React.createElement(Input, {\n    id: \"component-simple\",\n    defaultValue: loaded && selectedNode.name,\n    className: classes.inputFieldText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150\n    },\n    __self: this\n  })), console.log(\"rendering again\"), console.log(selectedNode.id)), React.createElement(ListItem, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155\n    },\n    __self: this\n  }, React.createElement(FormControl, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156\n    },\n    __self: this\n  }, React.createElement(InputLabel, {\n    htmlFor: \"component-simple\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157\n    },\n    __self: this\n  }, \"Group\"), React.createElement(Input, {\n    id: \"component-simple\",\n    defaultValue: loaded && selectedNode.group,\n    className: classes.inputFieldText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158\n    },\n    __self: this\n  }))), React.createElement(ListItem, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161\n    },\n    __self: this\n  }, React.createElement(ListItemAvatar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162\n    },\n    __self: this\n  }, React.createElement(StyledBadge, {\n    classes: loaded && {\n      badge: selectedNode.status\n    },\n    badgeContent: \" \",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164\n    },\n    __self: this\n  }, loaded && (selectedNode.status === \"Online\" ? \"Online\" : \"Offline\"))))), React.createElement(ListItem, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    variant: \"body1\",\n    className: \"coordinates\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169\n    },\n    __self: this\n  }, \"X:\", loaded && selectedNode.x, \" Y:\", loaded && selectedNode.y, \" Z:\", loaded && selectedNode.z)), React.createElement(ListItem, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171\n    },\n    __self: this\n  }, React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    className: classes.saveButton,\n    onClick: saveNode(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172\n    },\n    __self: this\n  }, \"Save\"), React.createElement(Button, {\n    variant: \"outlined\",\n    className: classes.deleteButton,\n    onClick: deleteNode(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175\n    },\n    __self: this\n  }, \"Delete\"))));\n}","map":{"version":3,"sources":["/Users/markheij/ipmedth_airsupport/frontend/src/containers/NodeInfo.js"],"names":["React","TopMenuBar","withStyles","makeStyles","List","ListItem","ListItemAvatar","Badge","FormControl","InputLabel","Input","Button","Typography","withScriptjs","withGoogleMap","GoogleMap","Marker","Firebase","useStyles","theme","inputFieldText","fontSize","saveButton","marginRight","marginTop","deleteButton","color","borderColor","StyledBadge","badge","right","top","border","palette","background","paper","padding","height","minWidth","NodeInfo","props","useState","itLoaded","isItLoaded","auth","onAuthStateChanged","user","console","log","history","push","nodeId","match","params","nodes","selectedNode","loaded","currentUser","uid","firestore","collection","get","then","querySnapshot","forEach","doc","nodedata","data","idn","quantified","id","groupn","group","namen","name","statusn","xn","x","yn","y","zn","z","nodeExists","newNode","key","status","n","filter","node","classes","handleChange","deleteNode","saveNode"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport \"./NodeInfo.css\";\nimport TopMenuBar from \"../components/TopMenuBar\";\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\nimport { List, ListItem, ListItemAvatar, Badge, FormControl, InputLabel, Input, Button, Typography } from '@material-ui/core';\nimport { withScriptjs, withGoogleMap, GoogleMap, Marker } from \"react-google-maps\";\nimport Firebase from \"firebase\";\n\nconst useStyles = makeStyles(theme => ({\n\n  inputFieldText: {\n    fontSize: \"1em\"\n  },\n  saveButton: {\n    marginRight: '16px',\n    marginTop: '10px'\n  },\n  deleteButton: {\n    color: '#FF0000',\n    borderColor: '#FF0000',\n    marginTop: '10px'\n  }\n}));\n\nconst StyledBadge = withStyles(theme => ({\n  badge: {\n    right: -5,\n    top: 16,\n    border: `2px solid ${theme.palette.background.paper}`,\n    padding: '0 2px',\n    height: '11px',\n    minWidth: '11px',\n  },\n}))(Badge);\n\nexport default function NodeInfo(props) {\n  const[itLoaded, isItLoaded] = React.useState(false);\n\n  Firebase.auth().onAuthStateChanged(function(user) {\n    if (user) {\n      console.log(\"User is signed in\");\n\n    } else {\n      console.log(\"User is not signed in\");\n      props.history.push(\"/login\")\n    }\n  });\n  let nodeId = props.match.params.nodeId;\n  const nodes = [];\n  let selectedNode;\n  let loaded = false;\n\n  var user = Firebase.auth().currentUser;\n\n  if (user) {\n    const uid = user.uid;\n\n    Firebase.firestore().collection(uid).get().then(function(querySnapshot){\n      querySnapshot.forEach(function(doc) {\n        // doc.data() is never undefined for query doc snapshots\n        //console.log(doc.id, \" => \", doc.data());\n        let nodedata = doc.data();\n        let idn = nodedata.quantified.id;\n        let groupn = nodedata.group;\n        let namen = nodedata.name;\n        let statusn = \"Online\"; //nodedata.status\n        let xn = nodedata.x;\n        let yn = nodedata.y;\n        let zn = nodedata.z;\n        let nodeExists = false;\n        let newNode = {\n          id: idn,\n          key: idn,\n          name: namen,\n          group: groupn,\n          status: statusn,\n          x: xn,\n          y: yn,\n          z: zn\n        };\n\n        nodes.forEach(function (n) {\n          if(n.key === idn){\n            nodeExists = true;\n          }else{\n            //nothing, node is already in the list\n          }\n        });\n\n        if (!nodeExists){\n          nodes.push(newNode);\n        }\n        console.log(loaded);\n        selectedNode = nodes.filter((node) => node.id === nodeId)[0];\n        console.log(selectedNode);\n        if (selectedNode){\n          console.log(selectedNode)\n\n\n        }\n        console.log(nodeId)\n\n      });\n\n      isItLoaded(true);\n      if(isItLoaded){\n        loaded = true;\n      }\n      console.log(loaded)\n      console.log(itLoaded)\n    })\n\n  }else{\n\n  }\n\n  const classes = useStyles();\n\n  //const MyMapComponent = withScriptjs(withGoogleMap((props) =>\n  //    <GoogleMap\n  //       defaultZoom={8}\n  //       defaultCenter={{ }}\n  //  >\n  //        {props.isMarkerShown && <Marker position={{ lat: -34.397, lng: 150.644 }} />}\n  //    </GoogleMap>\n  //))\n\n  async function handleChange() {\n    //update the database by sending the new value to the API\n  }\n\n  async function deleteNode() {\n    //Delete the node in the database\n  };\n\n  async function saveNode() {\n    //Delete the node in the database\n  };\n\n  return (\n    <div className=\"nodInfoPage\">\n      <TopMenuBar block pageName={\"Node info\"} hamburgerMenu={true} closeButtonOnly={false} closeWithPrompt={false} backButton={true} backRoutePage=\"/nodes\"/>\n      {loaded && (<List>{console.log(\"rendering\")}\n        <ListItem>\n          <Typography variant=\"body1\" className=\"boldText bigText\">Node ID {loaded && (selectedNode.id)}</Typography>\n        </ListItem>\n        <ListItem>\n          <FormControl>\n            <InputLabel htmlFor=\"component-simple\">Name</InputLabel>\n            <Input id=\"component-simple\" defaultValue={loaded && (selectedNode.name)} className={classes.inputFieldText}/>\n          </FormControl>\n          {console.log(\"rendering again\")}\n          {console.log(selectedNode.id)}\n        </ListItem>\n        <ListItem>\n          <FormControl>\n            <InputLabel htmlFor=\"component-simple\">Group</InputLabel>\n            <Input id=\"component-simple\" defaultValue={loaded && (selectedNode.group)} className={classes.inputFieldText} />\n          </FormControl>\n        </ListItem>\n        <ListItem>\n          <ListItemAvatar>\n            <StyledBadge classes={loaded && ({ badge: selectedNode.status })} badgeContent=\" \">\n              <p>{loaded && (selectedNode.status === \"Online\"?\"Online\":\"Offline\")}</p>\n            </StyledBadge>\n          </ListItemAvatar>\n        </ListItem>\n        <ListItem>\n           <Typography variant=\"body1\" className=\"coordinates\">X:{loaded && (selectedNode.x)} Y:{loaded && (selectedNode.y)} Z:{loaded && (selectedNode.z)}</Typography>\n        </ListItem>\n        <ListItem>\n          <Button variant=\"contained\" color=\"primary\" className={classes.saveButton} onClick={saveNode()}>\n            Save\n          </Button>\n          <Button variant=\"outlined\" className={classes.deleteButton} onClick={deleteNode()}>\n            Delete\n          </Button>\n        </ListItem>\n      </List>)}\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}