{"ast":null,"code":"import _slicedToArray from \"/Users/markheij/ipmedth_airsupport/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/markheij/ipmedth_airsupport/frontend/src/containers/Nodes.js\";\nimport React from \"react\";\nimport nodeIcon from '../icons/node.png';\nimport \"./Nodes.css\";\nimport { Button, List, ListItem, ListItemText, ListItemAvatar, ListSubheader, Badge, Box, Paper } from '@material-ui/core';\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\nimport { LinkContainer } from \"react-router-bootstrap\";\nimport TopMenuBar from \"../components/TopMenuBar\";\nimport Firebase from \"firebase\";\nlet offlineNodes;\nlet onlineNodes;\nlet isLoaded = false;\nconst nodes = [];\nconst useStyles = makeStyles(theme => ({\n  button: {\n    width: '100%',\n    height: '100%'\n  }\n}));\nconst StyledBadge = withStyles(theme => ({\n  badge: {\n    right: -3,\n    top: 30,\n    border: `2px solid ${theme.palette.background.paper}`,\n    padding: '0 2px',\n    height: '15px',\n    minWidth: '15px'\n  }\n}))(Badge);\nexport default function Nodes(props) {\n  const _React$useState = React.useState(false),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        loaded = _React$useState2[0],\n        isItLoaded = _React$useState2[1];\n\n  var user = Firebase.auth().currentUser;\n\n  if (user) {\n    const uid = user.uid;\n    Firebase.firestore().collection(uid).get().then(function (querySnapshot) {\n      querySnapshot.forEach(function (doc) {\n        // doc.data() is never undefined for query doc snapshots\n        //console.log(doc.id, \" => \", doc.data());\n        let nodedata = doc.data();\n        let idn = doc.id;\n        let groupn = nodedata.group;\n        let namen = nodedata.name;\n        let statusn = \"Online\"; //nodedata.status\n\n        let xn = nodedata.x;\n        let yn = nodedata.y;\n        let zn = nodedata.z;\n        let nodeExists = false;\n        let newNode = {\n          id: idn,\n          key: idn,\n          name: namen,\n          group: groupn,\n          status: statusn,\n          x: xn,\n          y: yn,\n          z: zn\n        };\n        nodes.forEach(function (n) {\n          if (n.key === idn) {\n            nodeExists = true;\n          } else if (idn === \"nodes\") {\n            nodeExists = true;\n          } else {//nothing, node is already in the list\n          }\n        });\n\n        if (!nodeExists) {\n          nodes.push(newNode);\n        }\n      });\n      offlineNodes = nodes.filter(node => node.status === 'Offline');\n      onlineNodes = nodes.filter(node => node.status === 'Online');\n      isLoaded = true;\n      isItLoaded(true);\n    });\n  } else {}\n\n  const classes = useStyles();\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, React.createElement(TopMenuBar, {\n    block: true,\n    pageName: \"Nodes\",\n    hamburgerMenu: true,\n    closeButtonOnly: false,\n    closeWithPrompt: false,\n    backButton: true,\n    backRoutePage: \"/\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }), React.createElement(Paper, {\n    id: \"nodesList\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }, React.createElement(List, {\n    color: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }, React.createElement(ListSubheader, {\n    disableSticky: \"true\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }, \"Offline nodes\"), isLoaded && offlineNodes.map(node => React.createElement(ListItem, {\n    className: \"noPadding\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }, React.createElement(ListItemAvatar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }, React.createElement(StyledBadge, {\n    classes: {\n      badge: \"offline\"\n    },\n    badgeContent: \" \",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: nodeIcon,\n    alt: \"nodeIcon\",\n    className: \"nodeListNodeIcon\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }))), React.createElement(ListItemText, {\n    primary: node.name,\n    secondary: node.group,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }))), React.createElement(ListSubheader, {\n    disableSticky: \"true\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  }, \"Online nodes\"), isLoaded && onlineNodes.map(node => React.createElement(ListItem, {\n    className: \"noPadding\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  }, React.createElement(ListItemAvatar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  }, React.createElement(StyledBadge, {\n    classes: {\n      badge: \"online\"\n    },\n    badgeContent: \" \",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: nodeIcon,\n    alt: \"nodeIcon\",\n    className: \"nodeListNodeIcon\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125\n    },\n    __self: this\n  }))), React.createElement(ListItemText, {\n    primary: node.name,\n    secondary: node.group,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128\n    },\n    __self: this\n  }))))), React.createElement(Box, {\n    className: \"buttonContainer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133\n    },\n    __self: this\n  }, React.createElement(LinkContainer, {\n    to: \"/installnode\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134\n    },\n    __self: this\n  }, React.createElement(Button, {\n    variant: \"contained\",\n    size: \"large\",\n    color: \"primary\",\n    className: classes.button,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: nodeIcon,\n    alt: \"nodeIcon\",\n    className: \"customNodeIcon\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136\n    },\n    __self: this\n  }), \"Add nodes\"))));\n}","map":{"version":3,"sources":["/Users/markheij/ipmedth_airsupport/frontend/src/containers/Nodes.js"],"names":["React","nodeIcon","Button","List","ListItem","ListItemText","ListItemAvatar","ListSubheader","Badge","Box","Paper","withStyles","makeStyles","LinkContainer","TopMenuBar","Firebase","offlineNodes","onlineNodes","isLoaded","nodes","useStyles","theme","button","width","height","StyledBadge","badge","right","top","border","palette","background","paper","padding","minWidth","Nodes","props","useState","loaded","isItLoaded","user","auth","currentUser","uid","firestore","collection","get","then","querySnapshot","forEach","doc","nodedata","data","idn","id","groupn","group","namen","name","statusn","xn","x","yn","y","zn","z","nodeExists","newNode","key","status","n","push","filter","node","classes","map"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport nodeIcon from '../icons/node.png';\nimport \"./Nodes.css\";\nimport { Button, List, ListItem, ListItemText, ListItemAvatar, ListSubheader, Badge, Box, Paper } from '@material-ui/core';\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\nimport { LinkContainer } from \"react-router-bootstrap\"\nimport TopMenuBar from \"../components/TopMenuBar\";\nimport Firebase from \"firebase\";\n\nlet offlineNodes;\nlet onlineNodes;\nlet isLoaded = false;\n\nconst nodes = [];\n\n\n\nconst useStyles = makeStyles(theme => ({\n  button: {\n    width: '100%',\n    height: '100%',\n  }\n}));\n\nconst StyledBadge = withStyles(theme => ({\n  badge: {\n    right: -3,\n    top: 30,\n    border: `2px solid ${theme.palette.background.paper}`,\n    padding: '0 2px',\n    height: '15px',\n    minWidth: '15px',\n  },\n}))(Badge);\n\nexport default function Nodes(props) {\n\n  const[loaded, isItLoaded] = React.useState(false);\n\n\n\n  var user = Firebase.auth().currentUser;\n\n  if (user) {\n    const uid = user.uid;\n\n    Firebase.firestore().collection(uid).get().then(function(querySnapshot){\n      querySnapshot.forEach(function(doc) {\n        // doc.data() is never undefined for query doc snapshots\n        //console.log(doc.id, \" => \", doc.data());\n        let nodedata = doc.data();\n        let idn = doc.id;\n        let groupn = nodedata.group;\n        let namen = nodedata.name;\n        let statusn = \"Online\"; //nodedata.status\n        let xn = nodedata.x;\n        let yn = nodedata.y;\n        let zn = nodedata.z;\n        let nodeExists = false;\n        let newNode = {\n          id: idn,\n          key: idn,\n          name: namen,\n          group: groupn,\n          status: statusn,\n          x: xn,\n          y: yn,\n          z: zn\n        };\n\n        nodes.forEach(function (n) {\n          if(n.key === idn) {\n            nodeExists = true;\n          }else if (idn ===\"nodes\"){\n            nodeExists = true;\n          }else{\n              //nothing, node is already in the list\n            }\n\n        })\n\n        if (!nodeExists){\n          nodes.push(newNode);\n        }\n\n\n\n\n      });\n      offlineNodes= nodes.filter((node) => node.status === 'Offline');\n      onlineNodes = nodes.filter((node) => node.status === 'Online');\n      isLoaded = true;\n      isItLoaded(true);\n    })\n\n  }else{\n\n  }\n  const classes = useStyles();\n\n\n\n  return (\n      <div>\n        <TopMenuBar block pageName=\"Nodes\" hamburgerMenu={true} closeButtonOnly={false} closeWithPrompt={false}\n                    backButton={true} backRoutePage=\"/\"/>\n        <Paper id=\"nodesList\">\n          <List color=\"primary\">\n            <ListSubheader disableSticky='true'>Offline nodes</ListSubheader>\n            {isLoaded && offlineNodes.map((node) =>\n                  <ListItem className=\"noPadding\">\n                    <ListItemAvatar>\n                      <StyledBadge classes={{badge: \"offline\"}} badgeContent=\" \">\n                        <img src={nodeIcon} alt=\"nodeIcon\" className=\"nodeListNodeIcon\"/>\n                      </StyledBadge>\n                    </ListItemAvatar>\n                    <ListItemText primary={node.name} secondary={node.group}/>\n                  </ListItem>\n            )}\n            <ListSubheader disableSticky='true'>Online nodes</ListSubheader>\n            {isLoaded && onlineNodes.map((node) =>\n                  <ListItem className=\"noPadding\">\n                    <ListItemAvatar>\n                      <StyledBadge classes={{badge: \"online\"}} badgeContent=\" \">\n                        <img src={nodeIcon} alt=\"nodeIcon\" className=\"nodeListNodeIcon\"/>\n                      </StyledBadge>\n                    </ListItemAvatar>\n                    <ListItemText primary={node.name} secondary={node.group}/>\n                  </ListItem>\n            )}\n          </List>\n        </Paper>\n        <Box className=\"buttonContainer\">\n          <LinkContainer to=\"/installnode\">\n            <Button variant=\"contained\" size=\"large\" color=\"primary\" className={classes.button}>\n              <img src={nodeIcon} alt=\"nodeIcon\" className=\"customNodeIcon\"/>\n              Add nodes\n            </Button>\n          </LinkContainer>\n        </Box>\n      </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}