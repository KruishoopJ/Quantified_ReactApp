{"ast":null,"code":"import _slicedToArray from \"/Users/markheij/ipmedth_airsupport/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/markheij/ipmedth_airsupport/frontend/src/auth/login.js\";\nimport React from \"react\";\nimport validateLogin from \"./validateLogin\";\nimport useFormValidation from \"./useFormValidation\";\nimport TopMenuBar from \"../components/TopMenuBar\";\nimport firebase from \"../firebase\";\nimport Firebase from 'firebase';\nimport { Avatar, Button, TextField, FormControlLabel, Checkbox, Typography, Container, makeStyles, Box, Grid, Link, CssBaseline } from '@material-ui/core';\nconst INITIAL_STATE = {\n  name: \"\",\n  email: \"\",\n  password: \"\"\n};\n\nfunction Login(props) {\n  const _useFormValidation = useFormValidation(INITIAL_STATE, validateLogin, authenticateUser),\n        handleSubmit = _useFormValidation.handleSubmit,\n        handleBlur = _useFormValidation.handleBlur,\n        handleChange = _useFormValidation.handleChange,\n        values = _useFormValidation.values,\n        errors = _useFormValidation.errors,\n        isSubmitting = _useFormValidation.isSubmitting;\n\n  Firebase.auth().onAuthStateChanged(function (user) {\n    if (user) {\n      console.log(\"User is signed in\");\n      props.history.push(\"/\");\n    } else {\n      console.log(\"User is not signed in\");\n    }\n  });\n\n  const _React$useState = React.useState(true),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        login = _React$useState2[0],\n        setLogin = _React$useState2[1];\n\n  const _React$useState3 = React.useState(null),\n        _React$useState4 = _slicedToArray(_React$useState3, 2),\n        firebaseError = _React$useState4[0],\n        setFirebaseError = _React$useState4[1];\n\n  async function authenticateUser() {\n    const name = values.name,\n          email = values.email,\n          password = values.password;\n\n    try {\n      login ? await firebase.login(email, password) : await firebase.register(name, email, password);\n      props.history.push(\"/\");\n    } catch (err) {\n      console.error(\"Authentication error\", err);\n      setFirebaseError(err.message);\n    }\n  }\n\n  return React.createElement(Container, {\n    component: \"main\",\n    maxWidth: \"xs\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, React.createElement(CssBaseline, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }), React.createElement(TopMenuBar, {\n    block: true,\n    pageName: \"Quantified Dashboard\",\n    hamburgerMenu: false,\n    closeButtonOnly: false,\n    closeWithPrompt: false,\n    backButton: false,\n    backRoutePage: \"/\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }), React.createElement(Typography, {\n    component: \"h1\",\n    variant: \"h5\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, login ? \"Sign in\" : \"Create Account\"), React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    className: \"flex flex-column\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, !login && React.createElement(\"input\", {\n    onChange: handleChange,\n    value: values.name,\n    name: \"name\",\n    type: \"text\",\n    placeholder: \"Your name\",\n    autoComplete: \"on\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }), React.createElement(TextField, {\n    onChange: handleChange,\n    onBlur: handleBlur,\n    name: \"email\",\n    variant: \"outlined\",\n    label: \"Email Address\",\n    id: \"email\",\n    fullWidth: true,\n    margin: \"normal\",\n    required: true,\n    value: values.email,\n    type: \"email\",\n    className: errors.email && 'error-input',\n    autoComplete: \"email\",\n    autoFocus: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }), errors.email && React.createElement(\"p\", {\n    className: \"error-text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, errors.email), React.createElement(TextField, {\n    onChange: handleChange,\n    name: \"password\",\n    variant: \"outlined\",\n    id: \"password\",\n    margin: \"normal\",\n    label: \"Password\",\n    fullWidth: true,\n    required: true,\n    type: \"password\",\n    onBlur: handleBlur,\n    value: values.password,\n    className: errors.password && 'error-input',\n    autoComplete: \"current-password\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }), errors.password && React.createElement(\"p\", {\n    className: \"error-text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }, errors.password), firebaseError && React.createElement(\"p\", {\n    className: \"error-text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }, firebaseError), React.createElement(\"div\", {\n    className: \"flex mt3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }, React.createElement(Button, {\n    type: \"submit\",\n    fullwidth: true,\n    variant: \"contained\",\n    color: \"primary\",\n    className: \"button pointer mr2\",\n    disabled: isSubmitting,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }, \"Submit\"), React.createElement(Button, {\n    type: \"button\",\n    className: \"pointer button\",\n    onClick: () => setLogin(prevLogin => !prevLogin),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128\n    },\n    __self: this\n  }, login ? \"Register\" : \"Already have an account?\"))));\n}\n\nexport default Login;","map":{"version":3,"sources":["/Users/markheij/ipmedth_airsupport/frontend/src/auth/login.js"],"names":["React","validateLogin","useFormValidation","TopMenuBar","firebase","Firebase","Avatar","Button","TextField","FormControlLabel","Checkbox","Typography","Container","makeStyles","Box","Grid","Link","CssBaseline","INITIAL_STATE","name","email","password","Login","props","authenticateUser","handleSubmit","handleBlur","handleChange","values","errors","isSubmitting","auth","onAuthStateChanged","user","console","log","history","push","useState","login","setLogin","firebaseError","setFirebaseError","register","err","error","message","prevLogin"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport validateLogin from \"./validateLogin\";\nimport useFormValidation from \"./useFormValidation\";\nimport TopMenuBar from \"../components/TopMenuBar\";\nimport firebase from \"../firebase\";\nimport Firebase from 'firebase'\nimport {\n  Avatar,\n  Button,\n  TextField,\n  FormControlLabel,\n  Checkbox,\n  Typography,\n  Container,\n  makeStyles,\n  Box,\n  Grid,\n  Link,\n  CssBaseline\n} from '@material-ui/core';\n\n\n\nconst INITIAL_STATE ={\n    name: \"\",\n    email: \"\",\n    password: \"\"\n}\n\nfunction Login(props) {\n    const {handleSubmit, handleBlur, handleChange, values, errors, isSubmitting} = useFormValidation(\n        INITIAL_STATE,\n        validateLogin,\n        authenticateUser\n    );\n\n\n    Firebase.auth().onAuthStateChanged(function(user) {\n        if (user) {\n            console.log(\"User is signed in\");\n            props.history.push(\"/\")\n        } else {\n            console.log(\"User is not signed in\");\n\n        }\n    });\n\n\n    const[login, setLogin] = React.useState(true);\n    const [firebaseError, setFirebaseError] = React.useState(null)\n\n    async function authenticateUser() {\n        const {name, email, password} = values\n\n        try{\n            login\n                ? await firebase.login(email, password)\n                : await firebase.register(name, email, password)\n            props.history.push(\"/\")\n        } catch (err) {\n           console.error(\"Authentication error\", err)\n            setFirebaseError(err.message)\n        }\n\n\n    }\n    return (\n\n        <Container component=\"main\" maxWidth=\"xs\">\n          <CssBaseline />\n            <TopMenuBar block pageName=\"Quantified Dashboard\" hamburgerMenu={false} closeButtonOnly={false} closeWithPrompt={false} backButton={false} backRoutePage=\"/\"/>\n            <Typography component=\"h1\" variant=\"h5\">{login ? \"Sign in\" : \"Create Account\"}</Typography>\n            <form  onSubmit={handleSubmit} className=\"flex flex-column\">\n                {!login && (<input\n                    onChange={handleChange}\n                    value={values.name}\n                    name=\"name\"\n                    type=\"text\"\n                    placeholder=\"Your name\"\n                    autoComplete=\"on\"\n                />)}\n                <TextField\n                    onChange={handleChange}\n                    onBlur={handleBlur}\n                    name=\"email\"\n                    variant=\"outlined\"\n                    label=\"Email Address\"\n                    id=\"email\"\n                    fullWidth\n                    margin=\"normal\"\n                    required\n                    value={values.email}\n                    type=\"email\"\n                    className={errors.email && 'error-input'}\n                    autoComplete=\"email\"\n                    autoFocus\n                />\n                {errors.email && <p className=\"error-text\">{errors.email}</p>}\n                <TextField\n                    onChange={handleChange}\n                    name=\"password\"\n                    variant=\"outlined\"\n                    id=\"password\"\n                    margin=\"normal\"\n                    label=\"Password\"\n                    fullWidth\n                    required\n                    type=\"password\"\n                    onBlur={handleBlur}\n                    value={values.password}\n                    className={errors.password && 'error-input'}\n                    autoComplete=\"current-password\"\n\n                />\n                {errors.password && <p className=\"error-text\">{errors.password}</p>}\n                {firebaseError && <p className=\"error-text\">{firebaseError}</p> }\n                <div className=\"flex mt3\">\n                    <Button\n                      type=\"submit\"\n                      fullwidth\n                      variant=\"contained\"\n                      color=\"primary\"\n                      className=\"button pointer mr2\"\n                      disabled={isSubmitting}\n                      >\n                        Submit\n                    </Button>\n                    <Button type=\"button\" className=\"pointer button\"\n                            onClick={() => setLogin(prevLogin => !prevLogin)}>\n                        {login ? \"Register\" : \"Already have an account?\"}\n                    </Button>\n                </div>\n            </form>\n        </Container>\n    );\n}\n\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}