{"ast":null,"code":"var _jsxFileName = \"/Users/markheij/ipmedth_airsupport/frontend/src/containers/NodeInfo.js\";\nimport React from \"react\";\nimport \"./NodeInfo.css\";\nimport TopMenuBar from \"../components/TopMenuBar\";\nimport BottomMenuBar from \"../components/BottomMenuBar\";\nimport { LinkContainer } from \"react-router-bootstrap\";\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\nimport { List, ListItem, ListItemAvatar, Badge, FormControl, InputLabel, Input, Button } from '@material-ui/core';\nimport { withScriptjs, withGoogleMap, GoogleMap, Marker } from \"react-google-maps\";\nconst useStyles = makeStyles(theme => ({\n  inputFieldText: {\n    fontSize: \"1em\"\n  },\n  saveButton: {\n    marginRight: '16px',\n    marginTop: '10px'\n  },\n  deleteButton: {\n    color: '#FF0000',\n    borderColor: '#FF0000',\n    marginTop: '10px'\n  }\n}));\nconst StyledBadge = withStyles(theme => ({\n  badge: {\n    right: -5,\n    top: 16,\n    border: `2px solid ${theme.palette.background.paper}`,\n    padding: '0 2px',\n    height: '11px',\n    minWidth: '11px'\n  }\n}))(Badge);\nexport default function NodeInfo(props) {\n  let nodeId = props.match.params.nodeId;\n  const nodes = [{\n    id: '1FG5dh7h1',\n    name: 'FakeNode 1',\n    group: 'Tomatoes',\n    status: 'Offline',\n    x: 65,\n    y: 45,\n    z: 10\n  }, {\n    id: '1FG5dh7h2',\n    name: 'FakeNode 2',\n    group: 'Carrots',\n    status: 'Online',\n    x: 45,\n    y: 45,\n    z: 10\n  }, {\n    id: '1FG5dh7h3',\n    name: 'FakeNode 3',\n    group: 'Tomatoes',\n    status: 'Online',\n    x: 65,\n    y: 55,\n    z: 10\n  }, {\n    id: '1FG5dh7h4',\n    name: 'FakeNode 4',\n    group: 'Carrots',\n    status: 'Online',\n    x: 45,\n    y: 55,\n    z: 10\n  }, {\n    id: '1FG5dh7h5',\n    name: 'FakeNode 5',\n    group: 'Carrots',\n    status: 'Offline',\n    x: 45,\n    y: 65,\n    z: 10\n  }, {\n    id: '1FG5dh7h6',\n    name: 'FakeNode 6',\n    group: 'Tomatoes',\n    status: 'Online',\n    x: 65,\n    y: 65,\n    z: 10\n  }, {\n    id: '1FG5dh7h7',\n    name: 'FakeNode 7',\n    group: 'Tomatoes',\n    status: 'Online',\n    x: 65,\n    y: 75,\n    z: 10\n  }];\n  const selectedNode = nodes.filter(node => node.id === nodeId)[0];\n  const classes = useStyles();\n  const MyMapComponent = withScriptjs(withGoogleMap(props => React.createElement(GoogleMap, {\n    defaultZoom: 8,\n    defaultCenter: {},\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, props.isMarkerShown && React.createElement(Marker, {\n    position: {\n      lat: -34.397,\n      lng: 150.644\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }))));\n\n  async function handleChange() {//update the database by sending the new value to the API\n  }\n\n  async function deleteNode() {//Delete the node in the database\n  }\n\n  ;\n\n  async function saveNode() {//Delete the node in the database\n  }\n\n  ;\n  return React.createElement(\"div\", {\n    className: \"nodInfoPage\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  }, React.createElement(TopMenuBar, {\n    block: true,\n    pageName: \"Node info\",\n    hamburgerMenu: true,\n    closeButtonOnly: false,\n    closeWithPrompt: false,\n    backButton: true,\n    backRoutePage: \"/nodes\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  }), React.createElement(BottomMenuBar, {\n    slectedIcon: 0,\n    block: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124\n    },\n    __self: this\n  }), React.createElement(List, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125\n    },\n    __self: this\n  }, React.createElement(ListItem, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    className: \"boldText bigText\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127\n    },\n    __self: this\n  }, \"Node ID \", selectedNode.id)), React.createElement(ListItem, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129\n    },\n    __self: this\n  }, React.createElement(FormControl, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130\n    },\n    __self: this\n  }, React.createElement(InputLabel, {\n    htmlFor: \"component-simple\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131\n    },\n    __self: this\n  }, \"Name\"), React.createElement(Input, {\n    id: \"component-simple\",\n    defaultValue: selectedNode.name,\n    className: classes.inputFieldText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132\n    },\n    __self: this\n  }))), React.createElement(ListItem, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135\n    },\n    __self: this\n  }, React.createElement(FormControl, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136\n    },\n    __self: this\n  }, React.createElement(InputLabel, {\n    htmlFor: \"component-simple\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137\n    },\n    __self: this\n  }, \"Group\"), React.createElement(Input, {\n    id: \"component-simple\",\n    defaultValue: selectedNode.group,\n    className: classes.inputFieldText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138\n    },\n    __self: this\n  }))), React.createElement(ListItem, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141\n    },\n    __self: this\n  }, React.createElement(ListItemAvatar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142\n    },\n    __self: this\n  }, React.createElement(StyledBadge, {\n    classes: {\n      badge: selectedNode.status\n    },\n    badgeContent: \" \",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144\n    },\n    __self: this\n  }, selectedNode.status === \"Online\" ? \"Online\" : \"Offline\")))), React.createElement(ListItem, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148\n    },\n    __self: this\n  }, React.createElement(MyMapComponent, {\n    isMarkerShown: true,\n    googleMapURL: \"https://maps.googleapis.com/maps/api/js?v=3.exp&libraries=geometry,drawing,places\",\n    loadingElement: React.createElement(\"div\", {\n      style: {\n        height: '100%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }),\n    containerElement: React.createElement(\"div\", {\n      style: {\n        height: '70px',\n        width: '70px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }),\n    mapElement: React.createElement(\"div\", {\n      style: {\n        height: '100%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149\n    },\n    __self: this\n  }), React.createElement(\"p\", {\n    className: \"coordinates\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156\n    },\n    __self: this\n  }, \"X:\", selectedNode.x, \" Y:\", selectedNode.y, \" Z:\", selectedNode.z)), React.createElement(ListItem, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158\n    },\n    __self: this\n  }, React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    className: classes.saveButton,\n    onClick: saveNode(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159\n    },\n    __self: this\n  }, \"Save\"), React.createElement(Button, {\n    variant: \"outlined\",\n    className: classes.deleteButton,\n    onClick: deleteNode(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162\n    },\n    __self: this\n  }, \"Delete\"))));\n}","map":{"version":3,"sources":["/Users/markheij/ipmedth_airsupport/frontend/src/containers/NodeInfo.js"],"names":["React","TopMenuBar","BottomMenuBar","LinkContainer","withStyles","makeStyles","List","ListItem","ListItemAvatar","Badge","FormControl","InputLabel","Input","Button","withScriptjs","withGoogleMap","GoogleMap","Marker","useStyles","theme","inputFieldText","fontSize","saveButton","marginRight","marginTop","deleteButton","color","borderColor","StyledBadge","badge","right","top","border","palette","background","paper","padding","height","minWidth","NodeInfo","props","nodeId","match","params","nodes","id","name","group","status","x","y","z","selectedNode","filter","node","classes","MyMapComponent","isMarkerShown","lat","lng","handleChange","deleteNode","saveNode","width"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport \"./NodeInfo.css\";\nimport TopMenuBar from \"../components/TopMenuBar\";\nimport BottomMenuBar from \"../components/BottomMenuBar\";\nimport { LinkContainer } from \"react-router-bootstrap\";\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\nimport { List, ListItem, ListItemAvatar, Badge, FormControl, InputLabel, Input, Button } from '@material-ui/core';\nimport { withScriptjs, withGoogleMap, GoogleMap, Marker } from \"react-google-maps\";\n\nconst useStyles = makeStyles(theme => ({\n  inputFieldText: {\n    fontSize: \"1em\"\n  },\n  saveButton: {\n    marginRight: '16px',\n    marginTop: '10px'\n  },\n  deleteButton: {\n    color: '#FF0000',\n    borderColor: '#FF0000',\n    marginTop: '10px'\n  }\n}));\n\nconst StyledBadge = withStyles(theme => ({\n  badge: {\n    right: -5,\n    top: 16,\n    border: `2px solid ${theme.palette.background.paper}`,\n    padding: '0 2px',\n    height: '11px',\n    minWidth: '11px',\n  },\n}))(Badge);\n\nexport default function NodeInfo(props) {\n  let nodeId = props.match.params.nodeId;\n  const nodes = [\n    {\n      id: '1FG5dh7h1',\n      name: 'FakeNode 1',\n      group: 'Tomatoes',\n      status: 'Offline',\n      x: 65,\n      y: 45,\n      z: 10\n    },{\n      id: '1FG5dh7h2',\n      name: 'FakeNode 2',\n      group: 'Carrots',\n      status: 'Online',\n      x: 45,\n      y: 45,\n      z: 10\n    },{\n      id: '1FG5dh7h3',\n      name: 'FakeNode 3',\n      group: 'Tomatoes',\n      status: 'Online',\n      x: 65,\n      y: 55,\n      z: 10\n    },{\n      id: '1FG5dh7h4',\n      name: 'FakeNode 4',\n      group: 'Carrots',\n      status: 'Online',\n      x: 45,\n      y: 55,\n      z: 10\n    },{\n      id: '1FG5dh7h5',\n      name: 'FakeNode 5',\n      group: 'Carrots',\n      status: 'Offline',\n      x: 45,\n      y: 65,\n      z: 10\n    },{\n      id: '1FG5dh7h6',\n      name: 'FakeNode 6',\n      group: 'Tomatoes',\n      status: 'Online',\n      x: 65,\n      y: 65,\n      z: 10\n    },{\n      id: '1FG5dh7h7',\n      name: 'FakeNode 7',\n      group: 'Tomatoes',\n      status: 'Online',\n      x: 65,\n      y: 75,\n      z: 10\n    },\n  ];\n  const selectedNode = nodes.filter((node) => node.id === nodeId)[0];\n  const classes = useStyles();\n\n  const MyMapComponent = withScriptjs(withGoogleMap((props) =>\n      <GoogleMap\n          defaultZoom={8}\n          defaultCenter={{ }}\n      >\n          {props.isMarkerShown && <Marker position={{ lat: -34.397, lng: 150.644 }} />}\n      </GoogleMap>\n  ))\n\n  async function handleChange() {\n    //update the database by sending the new value to the API\n  }\n\n  async function deleteNode() {\n    //Delete the node in the database\n  };\n\n  async function saveNode() {\n    //Delete the node in the database\n  };\n\n  return (\n    <div className=\"nodInfoPage\">\n      <TopMenuBar block pageName={\"Node info\"} hamburgerMenu={true} closeButtonOnly={false} closeWithPrompt={false} backButton={true} backRoutePage=\"/nodes\"/>\n      <BottomMenuBar slectedIcon={0} block/>\n      <List>\n        <ListItem>\n          <p className=\"boldText bigText\">Node ID {selectedNode.id}</p>\n        </ListItem>\n        <ListItem>\n          <FormControl>\n            <InputLabel htmlFor=\"component-simple\">Name</InputLabel>\n            <Input id=\"component-simple\" defaultValue={selectedNode.name} className={classes.inputFieldText} />\n          </FormControl>\n        </ListItem>\n        <ListItem>\n          <FormControl>\n            <InputLabel htmlFor=\"component-simple\">Group</InputLabel>\n            <Input id=\"component-simple\" defaultValue={selectedNode.group} className={classes.inputFieldText} />\n          </FormControl>\n        </ListItem>\n        <ListItem>\n          <ListItemAvatar>\n            <StyledBadge classes={{ badge: selectedNode.status }} badgeContent=\" \">\n              <p>{selectedNode.status === \"Online\"?\"Online\":\"Offline\"}</p>\n            </StyledBadge>\n          </ListItemAvatar>\n        </ListItem>\n        <ListItem>\n          <MyMapComponent\n              isMarkerShown\n              googleMapURL=\"https://maps.googleapis.com/maps/api/js?v=3.exp&libraries=geometry,drawing,places\"\n              loadingElement={<div style={{ height: '100%' }} />}\n              containerElement={<div style={{ height: '70px', width: '70px' }} />}\n              mapElement={<div style={{ height: '100%' }} />}\n          />\n          <p className=\"coordinates\">X:{selectedNode.x} Y:{selectedNode.y} Z:{selectedNode.z}</p>\n        </ListItem>\n        <ListItem>\n          <Button variant=\"contained\" color=\"primary\" className={classes.saveButton} onClick={saveNode()}>\n            Save\n          </Button>\n          <Button variant=\"outlined\" className={classes.deleteButton} onClick={deleteNode()}>\n            Delete\n          </Button>\n        </ListItem>\n      </List>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}