{"ast":null,"code":"import _classCallCheck from\"/Users/markheij/ipmedth_airsupport/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/markheij/ipmedth_airsupport/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/Users/markheij/ipmedth_airsupport/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/Users/markheij/ipmedth_airsupport/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _assertThisInitialized from\"/Users/markheij/ipmedth_airsupport/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";import _inherits from\"/Users/markheij/ipmedth_airsupport/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import React,{Component}from'react';import QrReader from'react-qr-reader';import\"../containers/Home.css\";import{Container,Typography,Box,Grid,SnackbarContent,Snackbar,TextField,Button,Input,withStyles}from'@material-ui/core';import\"../steps/Step.css\";import firebase from\"firebase\";import Firebase from\"firebase\";var isScanned=false;var nid;var xn;var yn;if(navigator.geolocation){navigator.geolocation.getCurrentPosition(function(position){yn=position.coords.latitude;xn=position.coords.longitude;});}else{}var step8=/*#__PURE__*/function(_Component){_inherits(step8,_Component);function step8(props){var _this;_classCallCheck(this,step8);_this=_possibleConstructorReturn(this,_getPrototypeOf(step8).call(this,props));_this.state={result:''};_this.handleClose=function(){_this.setState({isOpen:false});};_this.handleScan=function(data){var user=Firebase.auth().currentUser;if(data){//try to parse JSON (if not JSON then bad QR code)\ntry{var nodedata=JSON.parse(data);console.log(nodedata);//if JSON check for quantified object (if not then bad QR code)\nif(nodedata.hasOwnProperty(\"quantified\")||nodedata.hasOwnProperty(\"Quantified\")){console.log(\"Quantified\");nid=nodedata.quantified.id;if(user){var uid=user.uid;Firebase.firestore().collection(uid).doc(nid).get().then(function(docSnapshot){if(docSnapshot.exists){_this.setState({result:\"Node was already added. Try another one!\"});}else{Firebase.firestore().collection(uid).doc(nid).set(nodedata).then(function(){console.log(\"Written to firestore\");});_this.setState({result:\"Node Scanned!\"});isScanned=true;console.log(isScanned);}});}else{console.log(\"No user\");_this.props.history.push(\"/login\");}}else{_this.setState({isOpen:true});}}catch(e){console.error(e);_this.setState({result:\"Can't find node QR code\"});}}};_this.handleSubmit=function(event){event.preventDefault();var nodesGroup=_this.state.nodesGroup;var nodesName=_this.state.nodesName;var user=Firebase.auth().currentUser;if(user){var uid=user.uid;console.log(\"uid: \"+uid);console.log(\"nid: \"+nid);Firebase.firestore().collection(uid).doc(nid).get().then(function(docSnapshot){if(docSnapshot.exists){Firebase.firestore().collection(uid).doc(nid).update({name:nodesName,group:nodesGroup,x:xn,y:yn,z:1}).then(function(){console.log(\"Written to firestore\");});//move to next step\n}else{}});}else{console.log(\"No user\");_this.props.history.push(\"/login\");}};_this.handleError=function(err){console.error(err);_this.setState({isOpen:true});_this.setState({result:\"Something went wrong! Did you use the QR code?\"});};_this.state={nodesName:'',nodesGroup:'',isOpen:false};_this.handleChangeName=_this.handleChangeName.bind(_assertThisInitialized(_this));_this.handleChangeGroup=_this.handleChangeGroup.bind(_assertThisInitialized(_this));_this.handleSubmit=_this.handleSubmit.bind(_assertThisInitialized(_this));return _this;}_createClass(step8,[{key:\"handleChangeName\",value:function handleChangeName(event){this.setState({nodesName:event.target.value});}},{key:\"handleChangeGroup\",value:function handleChangeGroup(event){this.setState({nodesGroup:event.target.value});}},{key:\"render\",value:function render(){return React.createElement(Container,null,React.createElement(Box,{m:1},React.createElement(Typography,{variant:\"overline\"},\"Installation \\u279C Nodes\"),React.createElement(Typography,{variant:\"h4\"},\"Nodes\"),React.createElement(Typography,{display:\"block\",variant:\"body1\"},!isScanned&&\"Scan the QR code to add the node to the system\",isScanned&&\"Give the node a name and assign it to a group\")),!isScanned&&React.createElement(Box,null,React.createElement(QrReader,{delay:300,onError:this.handleError,onScan:this.handleScan,facingMode:\"environment\"}),React.createElement(Snackbar,{open:this.isOpen,autoHideDuration:2000,onClose:this.handleClose},React.createElement(SnackbarContent,{message:this.state.result}))),isScanned&&React.createElement(Box,{m:1},React.createElement(\"form\",{onSubmit:this.handleSubmit},React.createElement(\"div\",null,React.createElement(Box,{m:1},React.createElement(Typography,{component:\"h1\",variant:\"h6\"},\"Node Name\"),React.createElement(Input,{name:\"nodesName\",placeholder:\"Node name\",id:\"nodesName\",fullWidth:true,margin:\"normal\",required:true,type:\"text\",autoFocus:true,onChange:this.handleChangeName})),React.createElement(Box,{m:1},React.createElement(Typography,{component:\"h1\",variant:\"h6\"},\"Node Group\"),React.createElement(Input,{name:\"nodesGroup\",placeholder:\"Node group\",id:\"nodesGroup\",fullWidth:true,margin:\"normal\",required:true,type:\"text\",onChange:this.handleChangeGroup}))),React.createElement(\"div\",null,React.createElement(Button,{type:\"submit\",fullWidth:true,variant:\"contained\",color:\"primary\"},\"Save\"),React.createElement(Snackbar,{open:this.isOpen,autoHideDuration:2000,onClose:this.handleClose},React.createElement(SnackbarContent,{message:\"Node added\"}))))));}}]);return step8;}(Component);export{step8 as default};","map":{"version":3,"sources":["/Users/markheij/ipmedth_airsupport/frontend/src/steps/Step_7_Node_Add.js"],"names":["React","Component","QrReader","Container","Typography","Box","Grid","SnackbarContent","Snackbar","TextField","Button","Input","withStyles","firebase","Firebase","isScanned","nid","xn","yn","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude","step8","props","state","result","handleClose","setState","isOpen","handleScan","data","user","auth","currentUser","nodedata","JSON","parse","console","log","hasOwnProperty","quantified","id","uid","firestore","collection","doc","get","then","docSnapshot","exists","set","history","push","e","error","handleSubmit","event","preventDefault","nodesGroup","nodesName","update","name","group","x","y","z","handleError","err","handleChangeName","bind","handleChangeGroup","target","value"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport QrReader from 'react-qr-reader'\nimport \"../containers/Home.css\";\nimport {\n    Container,\n    Typography,\n    Box,\n    Grid,\n    SnackbarContent,\n    Snackbar,\n    TextField,\n    Button,\n    Input,\n    withStyles\n} from '@material-ui/core';\nimport \"../steps/Step.css\"\nimport firebase from \"firebase\";\nimport Firebase from \"firebase\";\n\n\nlet isScanned = false;\nlet nid;\nlet xn;\nlet yn;\n\nif (navigator.geolocation) {\n    navigator.geolocation.getCurrentPosition(function (position) {\n        yn = position.coords.latitude;\n        xn = position.coords.longitude;\n\n    });\n}else {\n\n}\n\nexport default class step8 extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {nodesName: '', nodesGroup: '', isOpen: false}\n        this.handleChangeName = this.handleChangeName.bind(this);\n        this.handleChangeGroup = this.handleChangeGroup.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n\n    state = {\n        result: ''\n    };\n\n    handleChangeName(event){\n      this.setState({nodesName: event.target.value});\n    }\n\n    handleChangeGroup(event){\n      this.setState({nodesGroup: event.target.value});\n    }\n\n    handleClose = () =>{\n      this.setState({isOpen:false})\n    }\n\n    handleScan = data => {\n        var user = Firebase.auth().currentUser;\n        if (data) {\n            //try to parse JSON (if not JSON then bad QR code)\n            try {\n                var nodedata = JSON.parse(data);\n                console.log(nodedata);\n                //if JSON check for quantified object (if not then bad QR code)\n                if(nodedata.hasOwnProperty(\"quantified\") || nodedata.hasOwnProperty(\"Quantified\")){\n                    console.log(\"Quantified\");\n\n                    nid = nodedata.quantified.id;\n\n                    if (user) {\n                        const uid = user.uid;\n                        Firebase.firestore().collection(uid).doc(nid).get()\n                            .then((docSnapshot) =>{\n                                if (docSnapshot.exists){\n                                    this.setState({\n                                        result: \"Node was already added. Try another one!\"\n                                    });\n\n                                }else {\n                                    Firebase.firestore().collection(uid).doc(nid).set(nodedata).then(function () {\n                                        console.log(\"Written to firestore\");\n                                    });\n                                    this.setState({\n                                        result: \"Node Scanned!\"\n                                    });\n                                    isScanned = true;\n                                    console.log(isScanned)\n                                }\n                            });\n\n\n                    }else{\n                        console.log(\"No user\");\n                        this.props.history.push(\"/login\")\n                    }\n                }else{\n                    this.setState({\n                        isOpen: true\n                    });\n                }\n            }catch (e) {\n                console.error(e);\n                this.setState({\n                    result: \"Can't find node QR code\"\n                });\n            }\n        }\n    };\n\n\n\n\n    handleSubmit = (event) =>{\n        event.preventDefault();\n        const nodesGroup = this.state.nodesGroup;\n        const nodesName = this.state.nodesName;\n\n\n        var user = Firebase.auth().currentUser;\n        if (user) {\n            const uid = user.uid;\n            console.log(\"uid: \"+ uid);\n            console.log(\"nid: \" + nid);\n            Firebase.firestore().collection(uid).doc(nid).get()\n                .then((docSnapshot) =>{\n                    if (docSnapshot.exists){\n                        Firebase.firestore().collection(uid).doc(nid).update({\n                            name: nodesName,\n                            group: nodesGroup,\n                            x: xn,\n                            y: yn,\n                            z: 1\n                        }).then(function () {\n                            console.log(\"Written to firestore\");\n                        });\n\n                        //move to next step\n\n                    }else {\n\n\n                    }\n                });\n\n\n        }else{\n            console.log(\"No user\");\n            this.props.history.push(\"/login\")\n        }\n    }\n\n\n\n\n    handleError = err => {\n        console.error(err);\n        this.setState({isOpen:true})\n        this.setState({\n            result: \"Something went wrong! Did you use the QR code?\"\n        })\n    };\n\n    render() {\n        return (\n            <Container>\n                <Box m={1}>\n                        <Typography variant=\"overline\">\n                          Installation &#10140; Nodes\n                        </Typography>\n                        <Typography variant=\"h4\">Nodes</Typography>\n                        <Typography display=\"block\" variant=\"body1\">\n                            {!isScanned && (\"Scan the QR code to add the node to the system\")}\n                            {isScanned && (\"Give the node a name and assign it to a group\")}\n                        </Typography>\n                    </Box>\n                    {!isScanned && (\n                        <Box>\n                                <QrReader\n                                    delay={300}\n                                    onError={this.handleError}\n                                    onScan={this.handleScan}\n                                    facingMode={\"environment\"}\n                                />\n                                <Snackbar\n                                  open={this.isOpen}\n                                  autoHideDuration={2000}\n                                  onClose={this.handleClose}\n                                >\n                                <SnackbarContent\n                                  message={this.state.result}\n                                />\n                                </Snackbar>\n                        </Box>)}\n                        {isScanned && (\n                    <Box m={1}>\n                        <form onSubmit={this.handleSubmit}>\n                        <div>\n                          <Box m={1}>\n                            <Typography component=\"h1\" variant=\"h6\">Node Name</Typography>\n                          <Input\n                                name=\"nodesName\"\n                                placeholder=\"Node name\"\n                                id=\"nodesName\"\n                                fullWidth\n                                margin=\"normal\"\n                                required\n                                type=\"text\"\n                                autoFocus\n                                onChange={this.handleChangeName}\n                            />\n                        </Box>\n                          <Box m={1}>\n                          <Typography component=\"h1\" variant=\"h6\">Node Group</Typography>\n                          <Input\n                                name=\"nodesGroup\"\n                                placeholder=\"Node group\"\n                                id=\"nodesGroup\"\n                                fullWidth\n                                margin=\"normal\"\n                                required\n                                type=\"text\"\n                                onChange={this.handleChangeGroup}\n                            />\n                        </Box>\n                        </div>\n                        <div>\n                            <Button type=\"submit\"\n                                    fullWidth\n                                    variant=\"contained\"\n                                    color=\"primary\"\n                                    >\n                                Save\n                            </Button>\n                            <Snackbar\n                              open={this.isOpen}\n                              autoHideDuration={2000}\n                              onClose={this.handleClose}\n                            >\n                            <SnackbarContent\n                              message=\"Node added\"\n                            />\n                            </Snackbar>\n                        </div>\n                        </form>\n                    </Box>)}\n\n            </Container>\n\n        )\n    }\n}\n"]},"metadata":{},"sourceType":"module"}