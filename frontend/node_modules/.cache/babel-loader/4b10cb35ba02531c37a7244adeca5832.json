{"ast":null,"code":"var _jsxFileName = \"/Users/markheij/ipmedth_airsupport/frontend/src/steps/Step_8_Node_Add.js\";\nimport React, { Component } from 'react';\nimport QrReader from 'react-qr-reader';\nimport \"../containers/Home.css\";\nimport { Button, Container, Typography, Grid, Box, LinearProgress, makeStyles } from '@material-ui/core';\nimport \"../steps/Step.css\";\nlet qrwidth = \"100%\";\nexport default class step8 extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      result: ''\n    };\n\n    this.handleScan = data => {\n      if (data) {\n        this.setState({\n          result: data\n        });\n        setTimeout(() => {\n          qrwidth = \"0%\";\n        }, 2000);\n      }\n    };\n\n    this.handleError = err => {\n      console.error(err);\n      this.setState({\n        result: \"Something went wrong! Did you use the QR code?\"\n      });\n    };\n  }\n\n  render() {\n    return React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      container: true,\n      direction: \"column\",\n      alignItems: \"center\",\n      justify: \"center\",\n      spacing: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      variant: \"h4\",\n      align: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, \"Nodes\"), React.createElement(Typography, {\n      display: \"block\",\n      variant: \"body1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, \"Scan the QR code to add the node to the system\")), React.createElement(Grid, {\n      style: {\n        width: \"55%\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(QrReader, {\n      delay: 300,\n      onError: this.handleError,\n      onScan: this.handleScan,\n      style: {\n        width: {\n          qrwidth\n        }\n      },\n      facingMode: \"environment\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, this.state.result)))));\n  }\n\n}","map":{"version":3,"sources":["/Users/markheij/ipmedth_airsupport/frontend/src/steps/Step_8_Node_Add.js"],"names":["React","Component","QrReader","Button","Container","Typography","Grid","Box","LinearProgress","makeStyles","qrwidth","step8","state","result","handleScan","data","setState","setTimeout","handleError","err","console","error","render","width"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,QAAP,MAAqB,iBAArB;AACA,OAAO,wBAAP;AACA,SACIC,MADJ,EAEIC,SAFJ,EAGIC,UAHJ,EAIIC,IAJJ,EAKIC,GALJ,EAMIC,cANJ,EAOIC,UAPJ,QAQO,mBARP;AASA,OAAO,mBAAP;AAGA,IAAIC,OAAO,GAAG,MAAd;AAEA,eAAe,MAAMC,KAAN,SAAoBV,SAApB,CAA8B;AAAA;AAAA;AAAA,SACzCW,KADyC,GACjC;AACJC,MAAAA,MAAM,EAAE;AADJ,KADiC;;AAAA,SAOzCC,UAPyC,GAO5BC,IAAI,IAAI;AACjB,UAAIA,IAAJ,EAAU;AACN,aAAKC,QAAL,CAAc;AACVH,UAAAA,MAAM,EAAEE;AADE,SAAd;AAGAE,QAAAA,UAAU,CAAC,MAAM;AAACP,UAAAA,OAAO,GAAG,IAAV;AAAe,SAAvB,EAAyB,IAAzB,CAAV;AACH;AACJ,KAdwC;;AAAA,SAezCQ,WAfyC,GAe3BC,GAAG,IAAI;AACjBC,MAAAA,OAAO,CAACC,KAAR,CAAcF,GAAd;AACA,WAAKH,QAAL,CAAc;AACVH,QAAAA,MAAM,EAAE;AADE,OAAd;AAGH,KApBwC;AAAA;;AAsBzCS,EAAAA,MAAM,GAAG;AACL,WAEI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEI,oBAAC,IAAD;AAAM,MAAA,SAAS,MAAf;AAAgB,MAAA,SAAS,EAAC,QAA1B;AAAmC,MAAA,UAAU,EAAC,QAA9C;AAAuD,MAAA,OAAO,EAAE,QAAhE;AAAyE,MAAA,OAAO,EAAE,CAAlF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,UAAD;AAAY,MAAA,OAAO,EAAC,IAApB;AAAyB,MAAA,KAAK,EAAC,QAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADJ,EAEI,oBAAC,UAAD;AAAY,MAAA,OAAO,EAAC,OAApB;AAA4B,MAAA,OAAO,EAAC,OAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wDAFJ,CADJ,EAOI,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAE;AAACC,QAAAA,KAAK,EAAE;AAAR,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,QAAD;AACI,MAAA,KAAK,EAAE,GADX;AAEI,MAAA,OAAO,EAAE,KAAKL,WAFlB;AAGI,MAAA,MAAM,EAAE,KAAKJ,UAHjB;AAII,MAAA,KAAK,EAAE;AAAES,QAAAA,KAAK,EAAE;AAACb,UAAAA;AAAD;AAAT,OAJX;AAKI,MAAA,UAAU,EAAE,aALhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAQI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAI,KAAKE,KAAL,CAAWC,MAAf,CARJ,CADJ,CAPJ,CAFJ,CAFJ;AA2BH;;AAlDwC","sourcesContent":["import React, { Component } from 'react'\nimport QrReader from 'react-qr-reader'\nimport \"../containers/Home.css\";\nimport {\n    Button,\n    Container,\n    Typography,\n    Grid,\n    Box,\n    LinearProgress,\n    makeStyles,\n} from '@material-ui/core';\nimport \"../steps/Step.css\"\n\n\nlet qrwidth = \"100%\";\n\nexport default class step8 extends Component {\n    state = {\n        result: ''\n    };\n\n\n\n    handleScan = data => {\n        if (data) {\n            this.setState({\n                result: data\n            })\n            setTimeout(() => {qrwidth = \"0%\"}, 2000);\n        }\n    }\n    handleError = err => {\n        console.error(err)\n        this.setState({\n            result: \"Something went wrong! Did you use the QR code?\"\n        })\n    }\n\n    render() {\n        return (\n\n            <Container>\n\n                <Grid container direction=\"column\" alignItems=\"center\" justify= \"center\" spacing={2}>\n                    <Grid item>\n                        <Typography variant=\"h4\" align=\"center\">Nodes</Typography>\n                        <Typography display=\"block\" variant=\"body1\">\n                            Scan the QR code to add the node to the system\n                        </Typography>\n                    </Grid>\n                    <Grid style={{width: \"55%\"}}>\n                        <div>\n                            <QrReader\n                                delay={300}\n                                onError={this.handleError}\n                                onScan={this.handleScan}\n                                style={{ width: {qrwidth} }}\n                                facingMode={\"environment\"}\n                            />\n                            <p>{this.state.result}</p>\n                        </div>\n                    </Grid>\n                </Grid>\n            </Container>\n\n        )\n    }\n}\n"]},"metadata":{},"sourceType":"module"}