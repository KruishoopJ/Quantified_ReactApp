{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\quenten\\\\Documents\\\\GitHub\\\\ipmedth_airsupport\\\\frontend\\\\src\\\\containers\\\\Home.js\";\nimport React from \"react\";\nimport nodeIcon from '../icons/node.png';\nimport { Fab, List, ListItem, ListItemText, ListItemAvatar, ListSubheader, Badge, Box } from '@material-ui/core';\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\nimport \"./Home.css\";\nimport { LinkContainer } from \"react-router-bootstrap\";\nimport ImageIcon from '@material-ui/icons/Image';\nimport WorkIcon from '@material-ui/icons/Work';\nimport BeachAccessIcon from '@material-ui/icons/BeachAccess';\nimport Divider from '@material-ui/core/Divider';\nconst nodes = [{\n  name: 'FakeNode 1',\n  group: 'Tomatoes',\n  status: 'Offline',\n  x: 65,\n  y: 45,\n  z: 10\n}, {\n  name: 'FakeNode 2',\n  group: 'Carrots',\n  status: 'Online',\n  x: 45,\n  y: 45,\n  z: 10\n}, {\n  name: 'FakeNode 3',\n  group: 'Tomatoes',\n  status: 'Online',\n  x: 65,\n  y: 55,\n  z: 10\n}, {\n  name: 'FakeNode 4',\n  group: 'Carrots',\n  status: 'Online',\n  x: 45,\n  y: 55,\n  z: 10\n}, {\n  name: 'FakeNode 5',\n  group: 'Carrots',\n  status: 'Offline',\n  x: 45,\n  y: 65,\n  z: 10\n}, {\n  name: 'FakeNode 6',\n  group: 'Tomatoes',\n  status: 'Online',\n  x: 65,\n  y: 65,\n  z: 10\n}, {\n  name: 'FakeNode 7',\n  group: 'Tomatoes',\n  status: 'Online',\n  x: 65,\n  y: 75,\n  z: 10\n}];\nconst useStyles = makeStyles(theme => ({\n  nodesList: {\n    height: '380px',\n    border: '1px solid',\n    borderRadius: '10px',\n    margin: '24px 14px',\n    overflowY: 'scroll'\n  },\n  nodeOptionsButton: {\n    margin: '24px auto',\n    margin: '14px'\n  },\n  nodeButtonIcon: {\n    width: '9px',\n    marginRight: '8px',\n    filter: 'invert(100%)'\n  },\n  nodeAvatar: {\n    height: '35px',\n    marginLeft: '14px'\n  },\n  online: {\n    backgroundColor: '#00FF00'\n  },\n  offline: {\n    backgroundColor: '#FF0000'\n  },\n  noPadding: {\n    padding: 0\n  }\n}));\nconst StyledBadge = withStyles(theme => ({\n  badge: {\n    right: -3,\n    top: 30,\n    border: `2px solid ${theme.palette.background.paper}`,\n    padding: '0 2px',\n    height: '15px',\n    minWidth: '15px'\n  }\n}))(Badge);\nexport default function Home() {\n  const classes = useStyles();\n  const offlineNodes = nodes.filter(node => node.status == 'Offline');\n  const onlineNodes = nodes.filter(node => node.status == 'Online');\n  return React.createElement(\"div\", {\n    className: \"homePage\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }, React.createElement(List, {\n    className: classes.nodesList,\n    color: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }, React.createElement(ListSubheader, {\n    disableSticky: \"true\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }, \"Offline nodes\"), offlineNodes.map(node => React.createElement(ListItem, {\n    className: classes.noPadding,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  }, React.createElement(ListItemAvatar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  }, React.createElement(StyledBadge, {\n    classes: {\n      badge: classes.offline\n    },\n    badgeContent: \" \",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: nodeIcon,\n    alt: \"nodeIcon\",\n    className: classes.nodeAvatar,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  }))), React.createElement(ListItemText, {\n    primary: node.name,\n    secondary: node.group,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125\n    },\n    __self: this\n  }))), React.createElement(ListSubheader, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128\n    },\n    __self: this\n  }, \"Online nodes\"), onlineNodes.map(node => React.createElement(ListItem, {\n    className: classes.noPadding,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130\n    },\n    __self: this\n  }, React.createElement(ListItemAvatar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131\n    },\n    __self: this\n  }, React.createElement(StyledBadge, {\n    classes: {\n      badge: classes.online\n    },\n    badgeContent: \" \",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: nodeIcon,\n    alt: \"nodeIcon\",\n    className: classes.nodeAvatar,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133\n    },\n    __self: this\n  }))), React.createElement(ListItemText, {\n    primary: node.name,\n    secondary: node.group,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136\n    },\n    __self: this\n  })))), React.createElement(Box, {\n    className: classes.contentCentered,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140\n    },\n    __self: this\n  }, React.createElement(LinkContainer, {\n    to: \"/step1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141\n    },\n    __self: this\n  }, React.createElement(Fab, {\n    size: \"large\",\n    variant: \"extended\",\n    variant: \"containedSecondary\",\n    color: \"primary\",\n    className: classes.nodeOptionsButton,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: nodeIcon,\n    alt: \"nodeIcon\",\n    className: classes.nodeButtonIcon,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143\n    },\n    __self: this\n  }), \"Node options\"))));\n}","map":{"version":3,"sources":["C:/Users/quenten/Documents/GitHub/ipmedth_airsupport/frontend/src/containers/Home.js"],"names":["React","nodeIcon","Fab","List","ListItem","ListItemText","ListItemAvatar","ListSubheader","Badge","Box","makeStyles","withStyles","LinkContainer","ImageIcon","WorkIcon","BeachAccessIcon","Divider","nodes","name","group","status","x","y","z","useStyles","theme","nodesList","height","border","borderRadius","margin","overflowY","nodeOptionsButton","nodeButtonIcon","width","marginRight","filter","nodeAvatar","marginLeft","online","backgroundColor","offline","noPadding","padding","StyledBadge","badge","right","top","palette","background","paper","minWidth","Home","classes","offlineNodes","node","onlineNodes","map","contentCentered"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport nodeIcon from '../icons/node.png';\r\nimport { Fab, List, ListItem, ListItemText, ListItemAvatar, ListSubheader, Badge, Box } from '@material-ui/core';\r\nimport { makeStyles, withStyles  } from '@material-ui/core/styles';\r\nimport \"./Home.css\";\r\nimport { LinkContainer } from \"react-router-bootstrap\"\r\n\r\nimport ImageIcon from '@material-ui/icons/Image';\r\nimport WorkIcon from '@material-ui/icons/Work';\r\nimport BeachAccessIcon from '@material-ui/icons/BeachAccess';\r\nimport Divider from '@material-ui/core/Divider';\r\n\r\nconst nodes = [\r\n  {\r\n    name: 'FakeNode 1',\r\n    group: 'Tomatoes',\r\n    status: 'Offline',\r\n    x: 65,\r\n    y: 45,\r\n    z: 10\r\n  },{\r\n    name: 'FakeNode 2',\r\n    group: 'Carrots',\r\n    status: 'Online',\r\n    x: 45,\r\n    y: 45,\r\n    z: 10\r\n  },{\r\n    name: 'FakeNode 3',\r\n    group: 'Tomatoes',\r\n    status: 'Online',\r\n    x: 65,\r\n    y: 55,\r\n    z: 10\r\n  },{\r\n    name: 'FakeNode 4',\r\n    group: 'Carrots',\r\n    status: 'Online',\r\n    x: 45,\r\n    y: 55,\r\n    z: 10\r\n  },{\r\n    name: 'FakeNode 5',\r\n    group: 'Carrots',\r\n    status: 'Offline',\r\n    x: 45,\r\n    y: 65,\r\n    z: 10\r\n  },{\r\n    name: 'FakeNode 6',\r\n    group: 'Tomatoes',\r\n    status: 'Online',\r\n    x: 65,\r\n    y: 65,\r\n    z: 10\r\n  },{\r\n    name: 'FakeNode 7',\r\n    group: 'Tomatoes',\r\n    status: 'Online',\r\n    x: 65,\r\n    y: 75,\r\n    z: 10\r\n  },\r\n];\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  nodesList: {\r\n    height: '380px',\r\n    border: '1px solid',\r\n    borderRadius: '10px',\r\n    margin: '24px 14px',\r\n    overflowY: 'scroll'\r\n  },\r\n  nodeOptionsButton: {\r\n    margin: '24px auto',\r\n    margin: '14px'\r\n  },\r\n  nodeButtonIcon: {\r\n    width: '9px',\r\n    marginRight: '8px',\r\n    filter: 'invert(100%)'\r\n  },\r\n  nodeAvatar: {\r\n    height: '35px',\r\n    marginLeft: '14px'\r\n  },\r\n  online: {\r\n    backgroundColor: '#00FF00'\r\n  },\r\n  offline: {\r\n    backgroundColor: '#FF0000'\r\n  },\r\n  noPadding: {\r\n    padding: 0\r\n  }\r\n}));\r\n\r\nconst StyledBadge = withStyles(theme => ({\r\n  badge: {\r\n    right: -3,\r\n    top: 30,\r\n    border: `2px solid ${theme.palette.background.paper}`,\r\n    padding: '0 2px',\r\n    height: '15px',\r\n    minWidth: '15px',\r\n  },\r\n}))(Badge);\r\n\r\nexport default function Home() {\r\n  const classes = useStyles();\r\n  const offlineNodes = nodes.filter((node) => node.status == 'Offline');\r\n  const onlineNodes = nodes.filter((node) => node.status == 'Online');\r\n\r\n  return (\r\n    <div className=\"homePage\">\r\n      <List className={classes.nodesList} color=\"primary\">\r\n        <ListSubheader disableSticky='true'>Offline nodes</ListSubheader>\r\n        {offlineNodes.map((node) =>\r\n          <ListItem className={classes.noPadding}>\r\n            <ListItemAvatar>\r\n              <StyledBadge classes={{ badge: classes.offline }} badgeContent=\" \">\r\n                <img src={ nodeIcon } alt=\"nodeIcon\" className={classes.nodeAvatar} />\r\n              </StyledBadge>\r\n            </ListItemAvatar>\r\n            <ListItemText primary={node.name} secondary={node.group} />\r\n          </ListItem>\r\n        )}\r\n        <ListSubheader>Online nodes</ListSubheader>\r\n        {onlineNodes.map((node) =>\r\n          <ListItem className={classes.noPadding}>\r\n            <ListItemAvatar>\r\n              <StyledBadge classes={{ badge: classes.online }} badgeContent=\" \">\r\n                <img src={ nodeIcon } alt=\"nodeIcon\" className={classes.nodeAvatar} />\r\n              </StyledBadge>\r\n            </ListItemAvatar>\r\n            <ListItemText primary={node.name} secondary={node.group} />\r\n          </ListItem>\r\n        )}\r\n      </List>\r\n      <Box className={classes.contentCentered}>\r\n        <LinkContainer to=\"/step1\">\r\n          <Fab size=\"large\" variant=\"extended\" variant=\"containedSecondary\" color=\"primary\" className={classes.nodeOptionsButton}>\r\n            <img src={ nodeIcon } alt=\"nodeIcon\" className={classes.nodeButtonIcon} />\r\n            Node options\r\n          </Fab>\r\n        </LinkContainer>\r\n      </Box>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}