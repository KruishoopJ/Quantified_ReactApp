{"ast":null,"code":"import _regeneratorRuntime from\"/Users/markheij/ipmedth_airsupport/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _slicedToArray from\"/Users/markheij/ipmedth_airsupport/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React from\"react\";import\"./NodeInfo.css\";import TopMenuBar from\"../components/TopMenuBar\";import{withStyles,makeStyles}from'@material-ui/core/styles';import{List,ListItem,ListItemAvatar,Badge,FormControl,InputLabel,Input,Button,Typography}from'@material-ui/core';import{withScriptjs,withGoogleMap,GoogleMap,Marker}from\"react-google-maps\";import Firebase from\"firebase\";var useStyles=makeStyles(function(theme){return{inputFieldText:{fontSize:\"1em\"},saveButton:{marginRight:'16px',marginTop:'10px'},deleteButton:{color:'#FF0000',borderColor:'#FF0000',marginTop:'10px'}};});var StyledBadge=withStyles(function(theme){return{badge:{right:-5,top:16,border:\"2px solid \".concat(theme.palette.background.paper),padding:'0 2px',height:'11px',minWidth:'11px'}};})(Badge);export default function NodeInfo(props){var _React$useState=React.useState(false),_React$useState2=_slicedToArray(_React$useState,2),itLoaded=_React$useState2[0],isItLoaded=_React$useState2[1];Firebase.auth().onAuthStateChanged(function(user){if(user){console.log(\"User is signed in\");}else{console.log(\"User is not signed in\");props.history.push(\"/login\");}});var nodeId=props.match.params.nodeId;var nodes=[];var selectedNode;var loaded=false;var user=Firebase.auth().currentUser;if(user){var uid=user.uid;Firebase.firestore().collection(uid).get().then(function(querySnapshot){querySnapshot.forEach(function(doc){// doc.data() is never undefined for query doc snapshots\n//console.log(doc.id, \" => \", doc.data());\nvar nodedata=doc.data();var idn=nodedata.quantified.id;var groupn=nodedata.group;var namen=nodedata.name;var statusn=\"Online\";//nodedata.status\nvar xn=nodedata.x;var yn=nodedata.y;var zn=nodedata.z;var nodeExists=false;var newNode={id:idn,key:idn,name:namen,group:groupn,status:statusn,x:xn,y:yn,z:zn};nodes.forEach(function(n){if(n.key===idn){nodeExists=true;}else{//nothing, node is already in the list\n}});if(!nodeExists){nodes.push(newNode);}console.log(loaded);selectedNode=nodes.filter(function(node){return node.id===nodeId;})[0];console.log(selectedNode);if(selectedNode){console.log(selectedNode);}console.log(nodeId);});isItLoaded(true);if(isItLoaded){loaded=true;}console.log(loaded);console.log(itLoaded);});}else{}var classes=useStyles();//const MyMapComponent = withScriptjs(withGoogleMap((props) =>\n//    <GoogleMap\n//       defaultZoom={8}\n//       defaultCenter={{ }}\n//  >\n//        {props.isMarkerShown && <Marker position={{ lat: -34.397, lng: 150.644 }} />}\n//    </GoogleMap>\n//))\nfunction handleChange(){return _regeneratorRuntime.async(function handleChange$(_context){while(1){switch(_context.prev=_context.next){case 0:case\"end\":return _context.stop();}}});}function deleteNode(){return _regeneratorRuntime.async(function deleteNode$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:case\"end\":return _context2.stop();}}});};function saveNode(){return _regeneratorRuntime.async(function saveNode$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:case\"end\":return _context3.stop();}}});};return React.createElement(\"div\",{className:\"nodInfoPage\"},React.createElement(TopMenuBar,{block:true,pageName:\"Node info\",hamburgerMenu:true,closeButtonOnly:false,closeWithPrompt:false,backButton:true,backRoutePage:\"/nodes\"}),loaded&&React.createElement(List,null,console.log(\"rendering\"),React.createElement(ListItem,null,React.createElement(Typography,{variant:\"body1\",className:\"boldText bigText\"},\"Node ID \",loaded&&selectedNode.id)),React.createElement(ListItem,null,React.createElement(FormControl,null,React.createElement(InputLabel,{htmlFor:\"component-simple\"},\"Name\"),React.createElement(Input,{id:\"component-simple\",defaultValue:loaded&&selectedNode.name,className:classes.inputFieldText})),console.log(\"rendering again\"),console.log(selectedNode.id)),React.createElement(ListItem,null,React.createElement(FormControl,null,React.createElement(InputLabel,{htmlFor:\"component-simple\"},\"Group\"),React.createElement(Input,{id:\"component-simple\",defaultValue:loaded&&selectedNode.group,className:classes.inputFieldText}))),React.createElement(ListItem,null,React.createElement(ListItemAvatar,null,React.createElement(StyledBadge,{classes:loaded&&{badge:selectedNode.status},badgeContent:\" \"},React.createElement(\"p\",null,loaded&&(selectedNode.status===\"Online\"?\"Online\":\"Offline\"))))),React.createElement(ListItem,null,React.createElement(Typography,{variant:\"body1\",className:\"coordinates\"},\"X:\",loaded&&selectedNode.x,\" Y:\",loaded&&selectedNode.y,\" Z:\",loaded&&selectedNode.z)),React.createElement(ListItem,null,React.createElement(Button,{variant:\"contained\",color:\"primary\",className:classes.saveButton,onClick:saveNode()},\"Save\"),React.createElement(Button,{variant:\"outlined\",className:classes.deleteButton,onClick:deleteNode()},\"Delete\"))));}","map":{"version":3,"sources":["/Users/markheij/ipmedth_airsupport/frontend/src/containers/NodeInfo.js"],"names":["React","TopMenuBar","withStyles","makeStyles","List","ListItem","ListItemAvatar","Badge","FormControl","InputLabel","Input","Button","Typography","withScriptjs","withGoogleMap","GoogleMap","Marker","Firebase","useStyles","theme","inputFieldText","fontSize","saveButton","marginRight","marginTop","deleteButton","color","borderColor","StyledBadge","badge","right","top","border","palette","background","paper","padding","height","minWidth","NodeInfo","props","useState","itLoaded","isItLoaded","auth","onAuthStateChanged","user","console","log","history","push","nodeId","match","params","nodes","selectedNode","loaded","currentUser","uid","firestore","collection","get","then","querySnapshot","forEach","doc","nodedata","data","idn","quantified","id","groupn","group","namen","name","statusn","xn","x","yn","y","zn","z","nodeExists","newNode","key","status","n","filter","node","classes","handleChange","deleteNode","saveNode"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport \"./NodeInfo.css\";\nimport TopMenuBar from \"../components/TopMenuBar\";\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\nimport { List, ListItem, ListItemAvatar, Badge, FormControl, InputLabel, Input, Button, Typography } from '@material-ui/core';\nimport { withScriptjs, withGoogleMap, GoogleMap, Marker } from \"react-google-maps\";\nimport Firebase from \"firebase\";\n\nconst useStyles = makeStyles(theme => ({\n\n  inputFieldText: {\n    fontSize: \"1em\"\n  },\n  saveButton: {\n    marginRight: '16px',\n    marginTop: '10px'\n  },\n  deleteButton: {\n    color: '#FF0000',\n    borderColor: '#FF0000',\n    marginTop: '10px'\n  }\n}));\n\nconst StyledBadge = withStyles(theme => ({\n  badge: {\n    right: -5,\n    top: 16,\n    border: `2px solid ${theme.palette.background.paper}`,\n    padding: '0 2px',\n    height: '11px',\n    minWidth: '11px',\n  },\n}))(Badge);\n\nexport default function NodeInfo(props) {\n  const[itLoaded, isItLoaded] = React.useState(false);\n\n  Firebase.auth().onAuthStateChanged(function(user) {\n    if (user) {\n      console.log(\"User is signed in\");\n\n    } else {\n      console.log(\"User is not signed in\");\n      props.history.push(\"/login\")\n    }\n  });\n  let nodeId = props.match.params.nodeId;\n  const nodes = [];\n  let selectedNode;\n  let loaded = false;\n\n  var user = Firebase.auth().currentUser;\n\n  if (user) {\n    const uid = user.uid;\n\n    Firebase.firestore().collection(uid).get().then(function(querySnapshot){\n      querySnapshot.forEach(function(doc) {\n        // doc.data() is never undefined for query doc snapshots\n        //console.log(doc.id, \" => \", doc.data());\n        let nodedata = doc.data();\n        let idn = nodedata.quantified.id;\n        let groupn = nodedata.group;\n        let namen = nodedata.name;\n        let statusn = \"Online\"; //nodedata.status\n        let xn = nodedata.x;\n        let yn = nodedata.y;\n        let zn = nodedata.z;\n        let nodeExists = false;\n        let newNode = {\n          id: idn,\n          key: idn,\n          name: namen,\n          group: groupn,\n          status: statusn,\n          x: xn,\n          y: yn,\n          z: zn\n        };\n\n        nodes.forEach(function (n) {\n          if(n.key === idn){\n            nodeExists = true;\n          }else{\n            //nothing, node is already in the list\n          }\n        });\n\n        if (!nodeExists){\n          nodes.push(newNode);\n        }\n        console.log(loaded);\n        selectedNode = nodes.filter((node) => node.id === nodeId)[0];\n        console.log(selectedNode);\n        if (selectedNode){\n          console.log(selectedNode)\n\n\n        }\n        console.log(nodeId)\n\n      });\n\n      isItLoaded(true);\n      if(isItLoaded){\n        loaded = true;\n      }\n      console.log(loaded)\n      console.log(itLoaded)\n    })\n\n  }else{\n\n  }\n\n  const classes = useStyles();\n\n  //const MyMapComponent = withScriptjs(withGoogleMap((props) =>\n  //    <GoogleMap\n  //       defaultZoom={8}\n  //       defaultCenter={{ }}\n  //  >\n  //        {props.isMarkerShown && <Marker position={{ lat: -34.397, lng: 150.644 }} />}\n  //    </GoogleMap>\n  //))\n\n  async function handleChange() {\n    //update the database by sending the new value to the API\n  }\n\n  async function deleteNode() {\n    //Delete the node in the database\n  };\n\n  async function saveNode() {\n    //Delete the node in the database\n  };\n\n  return (\n    <div className=\"nodInfoPage\">\n      <TopMenuBar block pageName={\"Node info\"} hamburgerMenu={true} closeButtonOnly={false} closeWithPrompt={false} backButton={true} backRoutePage=\"/nodes\"/>\n      {loaded && (<List>{console.log(\"rendering\")}\n        <ListItem>\n          <Typography variant=\"body1\" className=\"boldText bigText\">Node ID {loaded && (selectedNode.id)}</Typography>\n        </ListItem>\n        <ListItem>\n          <FormControl>\n            <InputLabel htmlFor=\"component-simple\">Name</InputLabel>\n            <Input id=\"component-simple\" defaultValue={loaded && (selectedNode.name)} className={classes.inputFieldText}/>\n          </FormControl>\n          {console.log(\"rendering again\")}\n          {console.log(selectedNode.id)}\n        </ListItem>\n        <ListItem>\n          <FormControl>\n            <InputLabel htmlFor=\"component-simple\">Group</InputLabel>\n            <Input id=\"component-simple\" defaultValue={loaded && (selectedNode.group)} className={classes.inputFieldText} />\n          </FormControl>\n        </ListItem>\n        <ListItem>\n          <ListItemAvatar>\n            <StyledBadge classes={loaded && ({ badge: selectedNode.status })} badgeContent=\" \">\n              <p>{loaded && (selectedNode.status === \"Online\"?\"Online\":\"Offline\")}</p>\n            </StyledBadge>\n          </ListItemAvatar>\n        </ListItem>\n        <ListItem>\n           <Typography variant=\"body1\" className=\"coordinates\">X:{loaded && (selectedNode.x)} Y:{loaded && (selectedNode.y)} Z:{loaded && (selectedNode.z)}</Typography>\n        </ListItem>\n        <ListItem>\n          <Button variant=\"contained\" color=\"primary\" className={classes.saveButton} onClick={saveNode()}>\n            Save\n          </Button>\n          <Button variant=\"outlined\" className={classes.deleteButton} onClick={deleteNode()}>\n            Delete\n          </Button>\n        </ListItem>\n      </List>)}\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}