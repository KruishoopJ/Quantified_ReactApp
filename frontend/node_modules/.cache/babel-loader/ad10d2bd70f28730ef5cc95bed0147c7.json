{"ast":null,"code":"var _jsxFileName = \"/Users/markheij/ipmedth_airsupport/frontend/src/steps/Step_6_Node_Amount.js\";\nimport React from \"react\";\nimport \"../containers/Home.css\";\nimport { Button, Container, Typography, Grid, Box, LinearProgress, makeStyles, Avatar } from '@material-ui/core';\nimport { LinkContainer } from \"react-router-bootstrap\";\nimport TopMenuBar from \"../components/TopMenuBar\";\nimport AddIcon from '@material-ui/icons/Add';\nimport RemoveIcon from '@material-ui/icons/Remove';\nimport NodeIcon from \"../icons/icon_node\";\nconst useStyles = makeStyles(theme => ({\n  avatarColor: {\n    backgroundColor: '#fff'\n  },\n  section1: {\n    margin: theme.spacing(3, 2)\n  }\n}));\nlet nodequant = 1;\n\nconst quanthandler = direction => {\n  if (direction === \"up\") {\n    nodequant += 1;\n  } else {\n    nodequant -= 1;\n  }\n};\n\nexport default function Step6() {\n  const classes = useStyles();\n  return React.createElement(Container, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, React.createElement(TopMenuBar, {\n    block: true,\n    pageName: \"Installation\",\n    hamburgerMenu: false,\n    closeButtonOnly: false,\n    closeWithPrompt: true,\n    backButton: false,\n    backRoutePage: \"/\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }), React.createElement(Grid, {\n    container: true,\n    direction: \"column\",\n    alignItems: \"center\",\n    justify: \"center\",\n    spacing: 2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    className: classes.section1,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    variant: \"h4\",\n    align: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, \"Nodes\"), React.createElement(Typography, {\n    display: \"block\",\n    variant: \"body1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, \"Choose the amount of nodes you have\")), React.createElement(Grid, {\n    item: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"number\",\n    value: nodequant,\n    name: \"quantity\",\n    min: \"1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }))));\n}","map":{"version":3,"sources":["/Users/markheij/ipmedth_airsupport/frontend/src/steps/Step_6_Node_Amount.js"],"names":["React","Button","Container","Typography","Grid","Box","LinearProgress","makeStyles","Avatar","LinkContainer","TopMenuBar","AddIcon","RemoveIcon","NodeIcon","useStyles","theme","avatarColor","backgroundColor","section1","margin","spacing","nodequant","quanthandler","direction","Step6","classes"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,wBAAP;AACA,SACIC,MADJ,EAEIC,SAFJ,EAGIC,UAHJ,EAIIC,IAJJ,EAKIC,GALJ,EAMIC,cANJ,EAOIC,UAPJ,EAOgBC,MAPhB,QAQO,mBARP;AASA,SAASC,aAAT,QAA8B,wBAA9B;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAOC,OAAP,MAAoB,wBAApB;AACA,OAAOC,UAAP,MAAuB,2BAAvB;AACA,OAAOC,QAAP,MAAqB,oBAArB;AAEA,MAAMC,SAAS,GAAGP,UAAU,CAACQ,KAAK,KAAK;AACnCC,EAAAA,WAAW,EAAC;AACRC,IAAAA,eAAe,EAAC;AADR,GADuB;AAInCC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,MAAM,EAAEJ,KAAK,CAACK,OAAN,CAAc,CAAd,EAAgB,CAAhB;AADA;AAJyB,CAAL,CAAN,CAA5B;AASA,IAAIC,SAAS,GAAG,CAAhB;;AAEA,MAAMC,YAAY,GAAIC,SAAD,IAAe;AAChC,MAAGA,SAAS,KAAK,IAAjB,EAAsB;AAClBF,IAAAA,SAAS,IAAI,CAAb;AACH,GAFD,MAEK;AACDA,IAAAA,SAAS,IAAI,CAAb;AACH;AACJ,CAND;;AAQA,eAAe,SAASG,KAAT,GAAgB;AAC3B,QAAMC,OAAO,GAAGX,SAAS,EAAzB;AAEA,SACI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,UAAD;AAAY,IAAA,KAAK,MAAjB;AAAkB,IAAA,QAAQ,EAAC,cAA3B;AAA0C,IAAA,aAAa,EAAE,KAAzD;AAAgE,IAAA,eAAe,EAAE,KAAjF;AAAwF,IAAA,eAAe,EAAE,IAAzG;AAA+G,IAAA,UAAU,EAAE,KAA3H;AAAkI,IAAA,aAAa,EAAC,GAAhJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI,oBAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AAAgB,IAAA,SAAS,EAAC,QAA1B;AAAmC,IAAA,UAAU,EAAC,QAA9C;AAAuD,IAAA,OAAO,EAAE,QAAhE;AAAyE,IAAA,OAAO,EAAE,CAAlF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,SAAS,EAAEW,OAAO,CAACP,QAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAC,IAApB;AAAyB,IAAA,KAAK,EAAC,QAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADJ,EAEI,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAC,OAApB;AAA4B,IAAA,OAAO,EAAC,OAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CAFJ,CADJ,EAOI,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEI;AAAO,IAAA,IAAI,EAAC,QAAZ;AAAqB,IAAA,KAAK,EAAEG,SAA5B;AAAuC,IAAA,IAAI,EAAC,UAA5C;AAAuD,IAAA,GAAG,EAAC,GAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CAPJ,CAFJ,CADJ;AAkBH","sourcesContent":["import React from \"react\";\nimport \"../containers/Home.css\";\nimport {\n    Button,\n    Container,\n    Typography,\n    Grid,\n    Box,\n    LinearProgress,\n    makeStyles, Avatar,\n} from '@material-ui/core';\nimport { LinkContainer } from \"react-router-bootstrap\"\nimport TopMenuBar from \"../components/TopMenuBar\";\nimport AddIcon from '@material-ui/icons/Add';\nimport RemoveIcon from '@material-ui/icons/Remove';\nimport NodeIcon from \"../icons/icon_node\";\n\nconst useStyles = makeStyles(theme => ({\n    avatarColor:{\n        backgroundColor:'#fff',\n    },\n    section1: {\n      margin: theme.spacing(3,2)\n    }\n}))\n\nlet nodequant = 1;\n\nconst quanthandler = (direction) => {\n    if(direction === \"up\"){\n        nodequant += 1;\n    }else{\n        nodequant -= 1;\n    }\n}\n\nexport default function Step6(){\n    const classes = useStyles()\n\n    return(\n        <Container>\n            <TopMenuBar block pageName=\"Installation\" hamburgerMenu={false} closeButtonOnly={false} closeWithPrompt={true} backButton={false} backRoutePage=\"/\"/>\n            <Grid container direction=\"column\" alignItems=\"center\" justify= \"center\" spacing={2}>\n                <Grid item className={classes.section1}>\n                    <Typography variant=\"h4\" align=\"center\">Nodes</Typography>\n                    <Typography display=\"block\" variant=\"body1\">\n                        Choose the amount of nodes you have\n                    </Typography>\n                </Grid>\n                <Grid item>\n\n                    <input type=\"number\" value={nodequant} name=\"quantity\" min=\"1\"  />\n\n                </Grid>\n            </Grid>\n        </Container>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}