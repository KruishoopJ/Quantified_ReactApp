{"ast":null,"code":"import _regeneratorRuntime from\"/Users/markheij/ipmedth_airsupport/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _slicedToArray from\"/Users/markheij/ipmedth_airsupport/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React from\"react\";import TopMenuBar from\"../components/TopMenuBar\";import firebase from\"../firebase/\";import Firebase from\"firebase\";function ForgotPassword(props){var _React$useState=React.useState(''),_React$useState2=_slicedToArray(_React$useState,2),resetPasswordEmail=_React$useState2[0],setResetPasswordEmail=_React$useState2[1];var _React$useState3=React.useState(false),_React$useState4=_slicedToArray(_React$useState3,2),isPasswordReset=_React$useState4[0],setIsPasswordReset=_React$useState4[1];var _React$useState5=React.useState(null),_React$useState6=_slicedToArray(_React$useState5,2),passwordResetError=_React$useState6[0],setPasswordResetError=_React$useState6[1];function handleResetPassword(){return _regeneratorRuntime.async(function handleResetPassword$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;_context.next=3;return _regeneratorRuntime.awrap(firebase.resetPassword(resetPasswordEmail));case 3:setIsPasswordReset(true);_context.next=11;break;case 6:_context.prev=6;_context.t0=_context[\"catch\"](0);console.log(\"Error sending email\",_context.t0);setPasswordResetError(_context.t0.message);setIsPasswordReset(false);case 11:case\"end\":return _context.stop();}}},null,null,[[0,6]]);}Firebase.auth().onAuthStateChanged(function(user){if(user){console.log(\"User is signed in\");props.history.push(\"/\");}else{console.log(\"User is not signed in\");}});return React.createElement(\"div\",null,React.createElement(TopMenuBar,{block:true,pageName:\"Forgot password\",hamburgerMenu:false,closeButtonOnly:false,closeWithPrompt:false,backButton:true,backRoutePage:\"/login\"}),React.createElement(\"h2\",null,\"Forgot your password?\"),React.createElement(\"p\",null,\" We got you! Fill in your e-mail address and we send you an email to reset it.\"),React.createElement(\"input\",{type:\"email\",className:\"input\",placeholder:\"Your email\",onChange:function onChange(event){return setResetPasswordEmail(event.target.value);}}),React.createElement(\"div\",null,React.createElement(\"button\",{className:\"button\",onClick:handleResetPassword},\"Reset Password\")),isPasswordReset&&React.createElement(\"p\",null,\"Check your email to reset your password\"),passwordResetError&&React.createElement(\"p\",{className:\"error-text\"},passwordResetError));}export default ForgotPassword;","map":{"version":3,"sources":["/Users/markheij/ipmedth_airsupport/frontend/src/auth/forgotpass.js"],"names":["React","TopMenuBar","firebase","Firebase","ForgotPassword","props","useState","resetPasswordEmail","setResetPasswordEmail","isPasswordReset","setIsPasswordReset","passwordResetError","setPasswordResetError","handleResetPassword","resetPassword","console","log","message","auth","onAuthStateChanged","user","history","push","event","target","value"],"mappings":"2TAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,UAAP,KAAuB,0BAAvB,CACA,MAAOC,CAAAA,QAAP,KAAqB,cAArB,CACA,MAAOC,CAAAA,QAAP,KAAqB,UAArB,CAEA,QAASC,CAAAA,cAAT,CAAwBC,KAAxB,CAA8B,qBAC0BL,KAAK,CAACM,QAAN,CAAe,EAAf,CAD1B,oDACnBC,kBADmB,qBACCC,qBADD,0CAEoBR,KAAK,CAACM,QAAN,CAAe,KAAf,CAFpB,qDAEnBG,eAFmB,qBAEFC,kBAFE,0CAG0BV,KAAK,CAACM,QAAN,CAAe,IAAf,CAH1B,qDAGnBK,kBAHmB,qBAGCC,qBAHD,qBAK1B,QAAeC,CAAAA,mBAAf,iMAEUX,QAAQ,CAACY,aAAT,CAAuBP,kBAAvB,CAFV,SAGIG,kBAAkB,CAAC,IAAD,CAAlB,CAHJ,+EAKIK,OAAO,CAACC,GAAR,CAAY,qBAAZ,cACAJ,qBAAqB,CAAC,YAAIK,OAAL,CAArB,CACAP,kBAAkB,CAAC,KAAD,CAAlB,CAPJ,iEAWAP,QAAQ,CAACe,IAAT,GAAgBC,kBAAhB,CAAmC,SAASC,IAAT,CAAe,CAC9C,GAAIA,IAAJ,CAAU,CACNL,OAAO,CAACC,GAAR,CAAY,mBAAZ,EACAX,KAAK,CAACgB,OAAN,CAAcC,IAAd,CAAmB,GAAnB,EACH,CAHD,IAGO,CACHP,OAAO,CAACC,GAAR,CAAY,uBAAZ,EAEH,CACJ,CARD,EAUA,MACI,gCACI,oBAAC,UAAD,EAAY,KAAK,KAAjB,CAAkB,QAAQ,CAAC,iBAA3B,CAA6C,aAAa,CAAE,KAA5D,CAAmE,eAAe,CAAE,KAApF,CAA2F,eAAe,CAAE,KAA5G,CAAmH,UAAU,CAAE,IAA/H,CAAqI,aAAa,CAAC,QAAnJ,EADJ,CAGI,sDAHJ,CAII,8GAJJ,CAKI,6BACA,IAAI,CAAC,OADL,CAEA,SAAS,CAAC,OAFV,CAGA,WAAW,CAAC,YAHZ,CAIA,QAAQ,CAAE,kBAAAO,KAAK,QAAIf,CAAAA,qBAAqB,CAACe,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAzB,EAJf,EALJ,CAWI,+BACI,8BAAQ,SAAS,CAAC,QAAlB,CAA2B,OAAO,CAAEZ,mBAApC,mBADJ,CAXJ,CAgBKJ,eAAe,EAAI,uEAhBxB,CAiBKE,kBAAkB,EAAI,yBAAG,SAAS,CAAC,YAAb,EAA2BA,kBAA3B,CAjB3B,CADJ,CAsBH,CAED,cAAeP,CAAAA,cAAf","sourcesContent":["import React from \"react\";\nimport TopMenuBar from \"../components/TopMenuBar\";\nimport firebase from \"../firebase/\";\nimport Firebase from \"firebase\";\n\nfunction ForgotPassword(props){\n    const [resetPasswordEmail, setResetPasswordEmail] = React.useState('')\n    const [isPasswordReset, setIsPasswordReset] = React.useState(false)\n    const [passwordResetError, setPasswordResetError] = React.useState(null)\n\n    async function handleResetPassword(){\n    try{\n        await firebase.resetPassword(resetPasswordEmail)\n        setIsPasswordReset(true)\n    } catch (err) {\n        console.log(\"Error sending email\", err)\n        setPasswordResetError(err.message)\n        setIsPasswordReset(false)\n    }\n    }\n\n    Firebase.auth().onAuthStateChanged(function(user) {\n        if (user) {\n            console.log(\"User is signed in\");\n            props.history.push(\"/\")\n        } else {\n            console.log(\"User is not signed in\");\n\n        }\n    });\n\n    return(\n        <div>\n            <TopMenuBar block pageName=\"Forgot password\" hamburgerMenu={false} closeButtonOnly={false} closeWithPrompt={false} backButton={true} backRoutePage=\"/login\"/>\n\n            <h2>Forgot your password?</h2>\n            <p> We got you! Fill in your e-mail address and we send you an email to reset it.</p>\n            <input\n            type=\"email\"\n            className='input'\n            placeholder=\"Your email\"\n            onChange={event => setResetPasswordEmail(event.target.value)}\n            />\n            <div>\n                <button className=\"button\" onClick={handleResetPassword}>\n                    Reset Password\n                </button>\n            </div>\n            {isPasswordReset && <p>Check your email to reset your password</p>}\n            {passwordResetError && <p className=\"error-text\">{passwordResetError}</p>}\n        </div>\n    )\n\n}\n\nexport default(ForgotPassword)"]},"metadata":{},"sourceType":"module"}