{"ast":null,"code":"import _slicedToArray from \"/Users/markheij/ipmedth_airsupport/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/markheij/ipmedth_airsupport/frontend/src/containers/NewNote.js\";\nimport React, { useRef, useState } from \"react\";\nimport { API } from \"aws-amplify\";\nimport { FormGroup, FormControl, ControlLabel } from \"react-bootstrap\";\nimport LoaderButton from \"../components/LoaderButton\";\nimport { s3Upload } from \"../libs/awsLib\";\nimport config from \"../config\";\nimport \"./NewNote.css\";\nexport default function NewNote(props) {\n  const file = useRef(null);\n\n  const _useState = useState(\"\"),\n        _useState2 = _slicedToArray(_useState, 2),\n        content = _useState2[0],\n        setContent = _useState2[1];\n\n  const _useState3 = useState(false),\n        _useState4 = _slicedToArray(_useState3, 2),\n        isLoading = _useState4[0],\n        setIsLoading = _useState4[1];\n\n  function validateForm() {\n    return content.length > 0;\n  }\n\n  function handleFileChange(event) {\n    file.current = event.target.files[0];\n  }\n\n  async function handleSubmit(event) {\n    event.preventDefault();\n\n    if (file.current && file.current.size > config.MAX_ATTACHMENT_SIZE) {\n      alert(\"Please pick a file smaller than \".concat(config.MAX_ATTACHMENT_SIZE / 1000000, \" MB.\"));\n      return;\n    }\n\n    setIsLoading(true);\n\n    try {\n      const attachment = file.current ? await s3Upload(file.current) : null;\n      await createNote({\n        content,\n        attachment\n      });\n      props.history.push(\"/\");\n    } catch (e) {\n      alert(e);\n      setIsLoading(false);\n    }\n  }\n\n  function createNote(note) {\n    return API.post(\"notes\", \"/notes\", {\n      body: note\n    });\n  }\n\n  return React.createElement(\"div\", {\n    className: \"NewNote\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, React.createElement(FormGroup, {\n    controlId: \"content\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, React.createElement(FormControl, {\n    value: content,\n    componentClass: \"textarea\",\n    onChange: e => setContent(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  })), React.createElement(FormGroup, {\n    controlId: \"file\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, React.createElement(ControlLabel, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, \"Attachment\"), React.createElement(FormControl, {\n    onChange: handleFileChange,\n    type: \"file\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  })), React.createElement(LoaderButton, {\n    block: true,\n    type: \"submit\",\n    bsSize: \"large\",\n    bsStyle: \"primary\",\n    isLoading: isLoading,\n    disabled: !validateForm(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, \"Create\")));\n}","map":{"version":3,"sources":["/Users/markheij/ipmedth_airsupport/frontend/src/containers/NewNote.js"],"names":["React","useRef","useState","API","FormGroup","FormControl","ControlLabel","LoaderButton","s3Upload","config","NewNote","props","file","content","setContent","isLoading","setIsLoading","validateForm","length","handleFileChange","event","current","target","files","handleSubmit","preventDefault","size","MAX_ATTACHMENT_SIZE","alert","attachment","createNote","history","push","e","note","post","body","value"],"mappings":"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","sourcesContent":["import React, { useRef, useState } from \"react\";\nimport { API } from \"aws-amplify\";\nimport { FormGroup, FormControl, ControlLabel } from \"react-bootstrap\";\nimport LoaderButton from \"../components/LoaderButton\";\nimport { s3Upload } from \"../libs/awsLib\";\nimport config from \"../config\";\nimport \"./NewNote.css\";\n\nexport default function NewNote(props) {\n  const file = useRef(null);\n  const [content, setContent] = useState(\"\");\n  const [isLoading, setIsLoading] = useState(false);\n\n  function validateForm() {\n    return content.length > 0;\n  }\n\n  function handleFileChange(event) {\n    file.current = event.target.files[0];\n  }\n\n  async function handleSubmit(event) {\n    event.preventDefault();\n\n    if (file.current && file.current.size > config.MAX_ATTACHMENT_SIZE) {\n      alert(\n        `Please pick a file smaller than ${config.MAX_ATTACHMENT_SIZE /\n          1000000} MB.`\n      );\n      return;\n    }\n\n    setIsLoading(true);\n\n    try {\n      const attachment = file.current\n        ? await s3Upload(file.current)\n        : null;\n\n      await createNote({ content, attachment });\n      props.history.push(\"/\");\n    } catch (e) {\n      alert(e);\n      setIsLoading(false);\n    }\n  }\n\n  function createNote(note) {\n    return API.post(\"notes\", \"/notes\", {\n      body: note\n    });\n  }\n\n  return (\n    <div className=\"NewNote\">\n      <form onSubmit={handleSubmit}>\n        <FormGroup controlId=\"content\">\n          <FormControl\n            value={content}\n            componentClass=\"textarea\"\n            onChange={e => setContent(e.target.value)}\n          />\n        </FormGroup>\n        <FormGroup controlId=\"file\">\n          <ControlLabel>Attachment</ControlLabel>\n          <FormControl onChange={handleFileChange} type=\"file\" />\n        </FormGroup>\n        <LoaderButton\n          block\n          type=\"submit\"\n          bsSize=\"large\"\n          bsStyle=\"primary\"\n          isLoading={isLoading}\n          disabled={!validateForm()}\n        >\n          Create\n        </LoaderButton>\n      </form>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}