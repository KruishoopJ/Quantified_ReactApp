{"ast":null,"code":"import _objectSpread from \"/Users/markheij/ipmedth_airsupport/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"/Users/markheij/ipmedth_airsupport/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport React from \"react\";\n\nfunction useFormValidation(initialState, validate, authenticate) {\n  const _React$useState = React.useState(initialState),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        values = _React$useState2[0],\n        setValues = _React$useState2[1];\n\n  const _React$useState3 = React.useState({}),\n        _React$useState4 = _slicedToArray(_React$useState3, 2),\n        errors = _React$useState4[0],\n        setErrors = _React$useState4[1];\n\n  const _React$useState5 = React.useState(false),\n        _React$useState6 = _slicedToArray(_React$useState5, 2),\n        isSubmitting = _React$useState6[0],\n        setSubmitting = _React$useState6[1];\n\n  React.useEffect(() => {\n    if (isSubmitting) {\n      const noErrors = Object.keys(errors).length === 0;\n\n      if (noErrors) {\n        authenticate();\n        setSubmitting(false);\n      } else {\n        setSubmitting(false);\n      }\n    }\n  }, [errors]);\n\n  function handleChange(event) {\n    event.persist();\n    setValues(previousValues => _objectSpread({}, previousValues, {\n      [event.target.name]: event.target.value\n    }));\n  }\n\n  function handleBlur() {\n    const validationErrors = validate(values);\n    setErrors(validationErrors);\n  }\n\n  function handleSubmit(event) {\n    event.preventDefault();\n    const validationErrors = validate(values);\n    setErrors(validationErrors);\n    setSubmitting(true);\n  }\n\n  return {\n    handleSubmit,\n    handleBlur,\n    handleChange,\n    values,\n    errors,\n    isSubmitting\n  };\n}\n\nexport default useFormValidation;","map":{"version":3,"sources":["/Users/markheij/ipmedth_airsupport/frontend/src/auth/useFormValidation.js"],"names":["React","useFormValidation","initialState","validate","authenticate","useState","values","setValues","errors","setErrors","isSubmitting","setSubmitting","useEffect","noErrors","Object","keys","length","handleChange","event","persist","previousValues","target","name","value","handleBlur","validationErrors","handleSubmit","preventDefault"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,SAASC,iBAAT,CAA2BC,YAA3B,EAAyCC,QAAzC,EAAmDC,YAAnD,EAAiE;AAAA,0BACjCJ,KAAK,CAACK,QAAN,CAAeH,YAAf,CADiC;AAAA;AAAA,QACtDI,MADsD;AAAA,QAC9CC,SAD8C;;AAAA,2BAEjCP,KAAK,CAACK,QAAN,CAAe,EAAf,CAFiC;AAAA;AAAA,QAEtDG,MAFsD;AAAA,QAE9CC,SAF8C;;AAAA,2BAGvBT,KAAK,CAACK,QAAN,CAAe,KAAf,CAHuB;AAAA;AAAA,QAGtDK,YAHsD;AAAA,QAGxCC,aAHwC;;AAK7DX,EAAAA,KAAK,CAACY,SAAN,CAAgB,MAAM;AAClB,QAAIF,YAAJ,EAAkB;AACd,YAAMG,QAAQ,GAAGC,MAAM,CAACC,IAAP,CAAYP,MAAZ,EAAoBQ,MAApB,KAA+B,CAAhD;;AACA,UAAIH,QAAJ,EAAc;AACVT,QAAAA,YAAY;AACZO,QAAAA,aAAa,CAAC,KAAD,CAAb;AACH,OAHD,MAGO;AACHA,QAAAA,aAAa,CAAC,KAAD,CAAb;AACH;AACJ;AACJ,GAVD,EAUG,CAACH,MAAD,CAVH;;AAYA,WAASS,YAAT,CAAsBC,KAAtB,EAA6B;AACzBA,IAAAA,KAAK,CAACC,OAAN;AACAZ,IAAAA,SAAS,CAACa,cAAc,sBACjBA,cADiB;AAEpB,OAACF,KAAK,CAACG,MAAN,CAAaC,IAAd,GAAqBJ,KAAK,CAACG,MAAN,CAAaE;AAFd,MAAf,CAAT;AAIH;;AAED,WAASC,UAAT,GAAsB;AAClB,UAAMC,gBAAgB,GAAGtB,QAAQ,CAACG,MAAD,CAAjC;AACAG,IAAAA,SAAS,CAACgB,gBAAD,CAAT;AACH;;AAED,WAASC,YAAT,CAAsBR,KAAtB,EAA6B;AACzBA,IAAAA,KAAK,CAACS,cAAN;AACA,UAAMF,gBAAgB,GAAGtB,QAAQ,CAACG,MAAD,CAAjC;AACAG,IAAAA,SAAS,CAACgB,gBAAD,CAAT;AACAd,IAAAA,aAAa,CAAC,IAAD,CAAb;AACH;;AAED,SAAO;AACHe,IAAAA,YADG;AAEHF,IAAAA,UAFG;AAGHP,IAAAA,YAHG;AAIHX,IAAAA,MAJG;AAKHE,IAAAA,MALG;AAMHE,IAAAA;AANG,GAAP;AAQH;;AAED,eAAeT,iBAAf","sourcesContent":["import React from \"react\";\n\nfunction useFormValidation(initialState, validate, authenticate) {\n    const [values, setValues] = React.useState(initialState);\n    const [errors, setErrors] = React.useState({});\n    const [isSubmitting, setSubmitting] = React.useState(false);\n\n    React.useEffect(() => {\n        if (isSubmitting) {\n            const noErrors = Object.keys(errors).length === 0;\n            if (noErrors) {\n                authenticate()\n                setSubmitting(false);\n            } else {\n                setSubmitting(false);\n            }\n        }\n    }, [errors]);\n\n    function handleChange(event) {\n        event.persist();\n        setValues(previousValues => ({\n            ...previousValues,\n            [event.target.name]: event.target.value\n        }));\n    }\n\n    function handleBlur() {\n        const validationErrors = validate(values);\n        setErrors(validationErrors);\n    }\n\n    function handleSubmit(event) {\n        event.preventDefault();\n        const validationErrors = validate(values);\n        setErrors(validationErrors);\n        setSubmitting(true);\n    }\n\n    return {\n        handleSubmit,\n        handleBlur,\n        handleChange,\n        values,\n        errors,\n        isSubmitting\n    };\n}\n\nexport default useFormValidation;\n"]},"metadata":{},"sourceType":"module"}