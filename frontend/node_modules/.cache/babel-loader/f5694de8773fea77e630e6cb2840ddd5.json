{"ast":null,"code":"import _slicedToArray from \"/Users/markheij/ipmedth_airsupport/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/markheij/ipmedth_airsupport/frontend/src/steps/Step_5_Gateway_LAN.js\";\nimport React from \"react\";\nimport clsx from 'clsx';\nimport \"../containers/Home.css\";\nimport { Container, Typography, Box, Button, makeStyles, List, ListItem, CircularProgress, ListItemAvatar, Avatar, ListItemText, Zoom, Snackbar, SnackbarContent, Fade } from '@material-ui/core';\nimport { green } from '@material-ui/core/colors';\nconst useStyles = makeStyles(theme => ({\n  section1: {\n    margin: theme.spacing(3, 2)\n  },\n  avatarColor: {\n    backgroundColor: \"#599AD5\"\n  },\n  buttonSuccess: {\n    backgroundColor: '#00A49B',\n    '&:hover': {\n      backgroundColor: '#00A49B'\n    } //disabled: 'true'\n\n  },\n  buttonProgress: {\n    color: green[500],\n    zIndex: 1,\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    align: 'left',\n    marginTop: -12,\n    marginLeft: -12\n  },\n  snackbar: {\n    bottom: 56\n  },\n  snackColor: {\n    backgroundColor: \"#00A49B\"\n  }\n}));\nexport default function Step5() {\n  const classes = useStyles();\n\n  const _React$useState = React.useState(false),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        loading = _React$useState2[0],\n        setLoading = _React$useState2[1];\n\n  const _React$useState3 = React.useState(false),\n        _React$useState4 = _slicedToArray(_React$useState3, 2),\n        success = _React$useState4[0],\n        setSuccess = _React$useState4[1];\n\n  const timer = React.useRef();\n\n  const _React$useState5 = React.useState(false),\n        _React$useState6 = _slicedToArray(_React$useState5, 2),\n        open = _React$useState6[0],\n        setOpen = _React$useState6[1];\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const buttonClassname = clsx({\n    [classes.buttonSuccess]: success\n  });\n  React.useEffect(() => {\n    return () => {\n      clearTimeout(timer.current);\n    };\n  }, []);\n\n  const handleButtonClick = () => {\n    if (!loading) {\n      setSuccess(false);\n      setLoading(true);\n      timer.current = setTimeout(() => {\n        setSuccess(true);\n        setLoading(false);\n        setOpen(true);\n      }, 2000);\n    }\n  };\n\n  return React.createElement(Container, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, React.createElement(Box, {\n    m: 1,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    variant: \"overline\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, \"Installation \\u279C Gateway\"), React.createElement(Typography, {\n    variant: \"h4\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, \"Connecting network\"), React.createElement(Typography, {\n    display: \"block\",\n    variant: \"body1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, \"Connecting the gateway to the internet to read data\")), React.createElement(Box, {\n    m: 1,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, React.createElement(List, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, React.createElement(ListItem, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, React.createElement(ListItemAvatar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }, React.createElement(Avatar, {\n    className: classes.avatarColor,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, \"1\")), React.createElement(ListItemText, {\n    primary: \"Pick up the LAN cable from the provided box\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  })), React.createElement(ListItem, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }, React.createElement(ListItemAvatar, {\n    color: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }, React.createElement(Avatar, {\n    className: classes.avatarColor,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }, \"2\")), React.createElement(ListItemText, {\n    primary: \"Plug one end of the LAN cable in your local router\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  })), React.createElement(ListItem, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }, React.createElement(ListItemAvatar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  }, React.createElement(Avatar, {\n    className: classes.avatarColor,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  }, \"3\")), React.createElement(ListItemText, {\n    primary: \"Plug the other end in the provided gateway\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124\n    },\n    __self: this\n  })))), React.createElement(Box, {\n    className: classes.wrapper,\n    m: 1,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128\n    },\n    __self: this\n  }, React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    className: buttonClassname,\n    disabled: loading,\n    onClick: handleButtonClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129\n    },\n    __self: this\n  }, !success && 'Check gateway connection', success && 'Gateway is connected'), loading && React.createElement(CircularProgress, {\n    size: 24,\n    className: classes.buttonProgress,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139\n    },\n    __self: this\n  }), React.createElement(Snackbar, {\n    open: open,\n    autoHideDuration: 2000,\n    onClose: handleClose,\n    className: classes.snackbar,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140\n    },\n    __self: this\n  }, React.createElement(SnackbarContent, {\n    message: \"Gateway network connected\",\n    className: classes.snackColor,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146\n    },\n    __self: this\n  }))));\n}","map":{"version":3,"sources":["/Users/markheij/ipmedth_airsupport/frontend/src/steps/Step_5_Gateway_LAN.js"],"names":["React","clsx","Container","Typography","Box","Button","makeStyles","List","ListItem","CircularProgress","ListItemAvatar","Avatar","ListItemText","Zoom","Snackbar","SnackbarContent","Fade","green","useStyles","theme","section1","margin","spacing","avatarColor","backgroundColor","buttonSuccess","buttonProgress","color","zIndex","position","top","left","align","marginTop","marginLeft","snackbar","bottom","snackColor","Step5","classes","useState","loading","setLoading","success","setSuccess","timer","useRef","open","setOpen","handleClose","buttonClassname","useEffect","clearTimeout","current","handleButtonClick","setTimeout","wrapper"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport clsx from 'clsx';\nimport \"../containers/Home.css\";\nimport {\n  Container,\n  Typography,\n  Box,\n  Button,\n  makeStyles,\n  List,\n  ListItem,\n  CircularProgress,\n  ListItemAvatar,\n  Avatar,\n  ListItemText,\n  Zoom,\n  Snackbar,\n  SnackbarContent,\n  Fade\n} from '@material-ui/core';\nimport {green} from '@material-ui/core/colors';\n\nconst useStyles = makeStyles(theme => ({\n  section1: {\n    margin: theme.spacing(3, 2),\n  },\n  avatarColor:{\n    backgroundColor: \"#599AD5\"\n  },\n  buttonSuccess: {\n    backgroundColor: '#00A49B',\n    '&:hover': {\n      backgroundColor: '#00A49B',\n    },\n    //disabled: 'true'\n  },\n  buttonProgress: {\n    color: green[500],\n    zIndex: 1,\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    align: 'left',\n    marginTop: -12,\n    marginLeft: -12,\n  },\n  snackbar: {\n    bottom: 56,\n  },\n  snackColor: {\n    backgroundColor: \"#00A49B\"\n  }\n}));\n\nexport default function Step5(){\n  const classes = useStyles()\n  const [loading, setLoading] = React.useState(false);\n  const [success, setSuccess] = React.useState(false);\n  const timer = React.useRef();\n  const [open, setOpen] = React.useState(false);\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n\n  const buttonClassname = clsx({\n    [classes.buttonSuccess]: success,\n  });\n\n  React.useEffect(() => {\n    return () => {\n      clearTimeout(timer.current);\n    }\n  }, []);\n\n  const handleButtonClick = () => {\n    if(!loading){\n      setSuccess(false);\n      setLoading(true);\n      timer.current = setTimeout(() =>{\n        setSuccess(true);\n        setLoading(false);\n        setOpen(true);\n      }, 2000);\n    }\n  };\n\n  return(\n    <Container>\n          <Box m={1}>\n            <Typography variant=\"overline\">\n            Installation &#10140; Gateway\n            </Typography>\n            <Typography variant=\"h4\">Connecting network</Typography>\n            <Typography display=\"block\" variant=\"body1\">\n              Connecting the gateway to the internet to read data\n            </Typography>\n          </Box>\n        <Box m={1}>\n          <List>\n              <ListItem>\n                <ListItemAvatar>\n                  <Avatar className={classes.avatarColor}>\n                    1\n                  </Avatar>\n                </ListItemAvatar>\n                <ListItemText primary=\"Pick up the LAN cable from the provided box\" />\n              </ListItem>\n              <ListItem>\n                <ListItemAvatar color=\"primary\">\n                  <Avatar className={classes.avatarColor}>\n                    2\n                  </Avatar>\n                </ListItemAvatar>\n                <ListItemText primary=\"Plug one end of the LAN cable in your local router\" />\n              </ListItem>\n              <ListItem>\n                <ListItemAvatar>\n                  <Avatar className={classes.avatarColor}>\n                    3\n                  </Avatar>\n                </ListItemAvatar>\n                <ListItemText primary=\"Plug the other end in the provided gateway\" />\n              </ListItem>\n          </List>\n        </Box>\n        <Box className={classes.wrapper} m={1}>\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              className={buttonClassname}\n              disabled={loading}\n              onClick={handleButtonClick}\n              >\n              {!success && 'Check gateway connection' }\n              {success && 'Gateway is connected' }\n            </Button>\n            {loading && <CircularProgress size={24} className={classes.buttonProgress} />}\n            <Snackbar\n              open={open}\n              autoHideDuration={2000}\n              onClose={handleClose}\n              className={classes.snackbar}\n            >\n            <SnackbarContent\n              message=\"Gateway network connected\"\n              className={classes.snackColor}\n            />\n            </Snackbar>\n        </Box>\n    </Container>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}