{"ast":null,"code":"import _defineProperty from \"/Users/markheij/ipmedth_airsupport/frontend/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"/Users/markheij/ipmedth_airsupport/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/markheij/ipmedth_airsupport/frontend/src/steps/Step2.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component } from \"react\";\nimport \"../containers/Home.css\";\nimport { Button, Checkbox, FormLabel, FormHelperText, FormGroup, FormControlLabel, Typography, Grid, Box, LinearProgress } from '@material-ui/core';\nimport { LinkContainer } from \"react-router-bootstrap\";\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core';\nimport { red } from '@material-ui/core/colors';\nexport default function Step2() {\n  const _React$useState = React.useState({\n    gilad: true,\n    jason: false,\n    antoine: false\n  }),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        state = _React$useState2[0],\n        setState = _React$useState2[1];\n\n  const handleChange = name => event => {\n    setState(_objectSpread({}, state, {\n      [name]: event.target.checked\n    }));\n  };\n\n  const gilad = state.gilad,\n        jason = state.jason,\n        antoine = state.antoine;\n  const error = [gilad, jason, antoine].filter(v => v).length !== 2;\n  return React.createElement(\"div\", {\n    className: classes.root,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, React.createElement(FormControl, {\n    component: \"fieldset\",\n    className: classes.formControl,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, React.createElement(FormLabel, {\n    component: \"legend\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, \"Assign responsibility\"), React.createElement(FormGroup, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, React.createElement(FormControlLabel, {\n    control: React.createElement(Checkbox, {\n      checked: gilad,\n      onChange: handleChange('gilad'),\n      value: \"gilad\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }),\n    label: \"Gilad Gray\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }), React.createElement(FormControlLabel, {\n    control: React.createElement(Checkbox, {\n      checked: jason,\n      onChange: handleChange('jason'),\n      value: \"jason\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }),\n    label: \"Jason Killian\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }), React.createElement(FormControlLabel, {\n    control: React.createElement(Checkbox, {\n      checked: antoine,\n      onChange: handleChange('antoine'),\n      value: \"antoine\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }),\n    label: \"Antoine Llorca\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  })), React.createElement(FormHelperText, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, \"Be careful\")), React.createElement(FormControl, {\n    required: true,\n    error: error,\n    component: \"fieldset\",\n    className: classes.formControl,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, React.createElement(FormLabel, {\n    component: \"legend\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, \"Pick two\"), React.createElement(FormGroup, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, React.createElement(FormControlLabel, {\n    control: React.createElement(Checkbox, {\n      checked: gilad,\n      onChange: handleChange('gilad'),\n      value: \"gilad\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }),\n    label: \"Gilad Gray\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }), React.createElement(FormControlLabel, {\n    control: React.createElement(Checkbox, {\n      checked: jason,\n      onChange: handleChange('jason'),\n      value: \"jason\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }),\n    label: \"Jason Killian\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }), React.createElement(FormControlLabel, {\n    control: React.createElement(Checkbox, {\n      checked: antoine,\n      onChange: handleChange('antoine'),\n      value: \"antoine\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }),\n    label: \"Antoine Llorca\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  })), React.createElement(FormHelperText, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, \"You can display an error\")))\n  /*<Grid container direction=\"column\" alignItems=\"center\" justify= \"center\">\n    <Grid item xs={12}>\n      <Box width={300} align=\"center\">\n        <Typography variant=\"overline\">Progress</Typography>\n        <LinearProgress variant=\"determinate\" value={100}/>\n      </Box>\n    </Grid>\n      <Grid item xs={12}>\n      </Grid>\n    <Grid align=\"center\" item xs={12}>\n      <div>\n        <LinkContainer to=\"/step2\">\n          <Box pt={1}>\n            <Button size=\"large\" variant=\"containedSecondary\" color=\"primary\">Next</Button>\n            </Box>\n        </LinkContainer>\n      </div>\n      <div>\n        <LinkContainer to=\"/step1\">\n          <Box p={1}>\n            <Button size=\"small\" color=\"primary\">Previous step</Button>\n          </Box>\n        </LinkContainer>\n      </div>\n    </Grid>\n  </Grid>*/\n  ;\n}","map":{"version":3,"sources":["/Users/markheij/ipmedth_airsupport/frontend/src/steps/Step2.js"],"names":["React","Component","Button","Checkbox","FormLabel","FormHelperText","FormGroup","FormControlLabel","Typography","Grid","Box","LinearProgress","LinkContainer","MuiThemeProvider","createMuiTheme","red","Step2","useState","gilad","jason","antoine","state","setState","handleChange","name","event","target","checked","error","filter","v","length","classes","root","formControl"],"mappings":"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","sourcesContent":["import React, {Component} from \"react\";\nimport \"../containers/Home.css\";\nimport {Button, Checkbox, FormLabel, FormHelperText, FormGroup, FormControlLabel, Typography, Grid, Box, LinearProgress} from '@material-ui/core';\nimport { LinkContainer } from \"react-router-bootstrap\"\nimport {MuiThemeProvider, createMuiTheme} from '@material-ui/core'\nimport {red} from '@material-ui/core/colors'\n\n\n\nexport default function Step2(){\n  const [state, setState] = React.useState({\n    gilad: true,\n    jason: false,\n    antoine: false,\n  });\n\n  const handleChange = name => event => {\n    setState({ ...state, [name]: event.target.checked });\n  };\n\n  const { gilad, jason, antoine } = state;\n  const error = [gilad, jason, antoine].filter(v => v).length !== 2;\n\n  return (\n    <div className={classes.root}>\n      <FormControl component=\"fieldset\" className={classes.formControl}>\n        <FormLabel component=\"legend\">Assign responsibility</FormLabel>\n        <FormGroup>\n          <FormControlLabel\n            control={<Checkbox checked={gilad} onChange={handleChange('gilad')} value=\"gilad\" />}\n            label=\"Gilad Gray\"\n          />\n          <FormControlLabel\n            control={<Checkbox checked={jason} onChange={handleChange('jason')} value=\"jason\" />}\n            label=\"Jason Killian\"\n          />\n          <FormControlLabel\n            control={\n              <Checkbox checked={antoine} onChange={handleChange('antoine')} value=\"antoine\" />\n            }\n            label=\"Antoine Llorca\"\n          />\n        </FormGroup>\n        <FormHelperText>Be careful</FormHelperText>\n      </FormControl>\n      <FormControl required error={error} component=\"fieldset\" className={classes.formControl}>\n        <FormLabel component=\"legend\">Pick two</FormLabel>\n        <FormGroup>\n          <FormControlLabel\n            control={<Checkbox checked={gilad} onChange={handleChange('gilad')} value=\"gilad\" />}\n            label=\"Gilad Gray\"\n          />\n          <FormControlLabel\n            control={<Checkbox checked={jason} onChange={handleChange('jason')} value=\"jason\" />}\n            label=\"Jason Killian\"\n          />\n          <FormControlLabel\n            control={\n              <Checkbox checked={antoine} onChange={handleChange('antoine')} value=\"antoine\" />\n            }\n            label=\"Antoine Llorca\"\n          />\n        </FormGroup>\n        <FormHelperText>You can display an error</FormHelperText>\n      </FormControl>\n      </div>\n    /*<Grid container direction=\"column\" alignItems=\"center\" justify= \"center\">\n      <Grid item xs={12}>\n        <Box width={300} align=\"center\">\n          <Typography variant=\"overline\">Progress</Typography>\n          <LinearProgress variant=\"determinate\" value={100}/>\n        </Box>\n      </Grid>\n        <Grid item xs={12}>\n        </Grid>\n      <Grid align=\"center\" item xs={12}>\n        <div>\n          <LinkContainer to=\"/step2\">\n            <Box pt={1}>\n              <Button size=\"large\" variant=\"containedSecondary\" color=\"primary\">Next</Button>\n              </Box>\n          </LinkContainer>\n        </div>\n        <div>\n          <LinkContainer to=\"/step1\">\n            <Box p={1}>\n              <Button size=\"small\" color=\"primary\">Previous step</Button>\n            </Box>\n          </LinkContainer>\n        </div>\n      </Grid>\n    </Grid>*/\n  );\n}\n"]},"metadata":{},"sourceType":"module"}