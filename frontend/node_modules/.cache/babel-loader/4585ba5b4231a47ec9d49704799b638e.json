{"ast":null,"code":"import _defineProperty from\"/Users/markheij/ipmedth_airsupport/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _slicedToArray from\"/Users/markheij/ipmedth_airsupport/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React from\"react\";import clsx from'clsx';import\"../containers/Home.css\";import{Container,Typography,Box,Button,makeStyles,List,ListItem,CircularProgress,ListItemAvatar,Avatar,ListItemText,Snackbar,SnackbarContent}from'@material-ui/core';import{green}from'@material-ui/core/colors';var useStyles=makeStyles(function(theme){return{section1:{margin:theme.spacing(3,2)},avatarColor:{backgroundColor:\"#599AD5\"},buttonSuccess:{backgroundColor:'#00A49B','&:hover':{backgroundColor:'#00A49B'}//disabled: 'true'\n},buttonProgress:{color:green[500],zIndex:1,position:'absolute',top:'50%',left:'50%',align:'left',marginTop:-12,marginLeft:-12},snackbar:{bottom:56},snackColor:{backgroundColor:\"#00A49B\"}};});export default function Step4(){var classes=useStyles();var _React$useState=React.useState(false),_React$useState2=_slicedToArray(_React$useState,2),loading=_React$useState2[0],setLoading=_React$useState2[1];var _React$useState3=React.useState(false),_React$useState4=_slicedToArray(_React$useState3,2),success=_React$useState4[0],setSuccess=_React$useState4[1];var timer=React.useRef();var _React$useState5=React.useState(false),_React$useState6=_slicedToArray(_React$useState5,2),open=_React$useState6[0],setOpen=_React$useState6[1];var handleClose=function handleClose(){setOpen(false);};var buttonClassname=clsx(_defineProperty({},classes.buttonSuccess,success));React.useEffect(function(){return function(){clearTimeout(timer.current);};},[]);var handleButtonClick=function handleButtonClick(){if(!loading){setSuccess(false);setLoading(true);timer.current=setTimeout(function(){setSuccess(true);setLoading(false);setOpen(true);},2000);}};return React.createElement(Container,null,React.createElement(Box,{m:1},React.createElement(Typography,{variant:\"overline\"},\"Installation \\u279C Gateway\"),React.createElement(Typography,{variant:\"h4\"},\"Connecting power\"),React.createElement(Typography,{display:\"block\",variant:\"body1\"},\"Use the following steps to power on the gateway:\")),React.createElement(Box,{m:1},React.createElement(List,null,React.createElement(ListItem,null,React.createElement(ListItemAvatar,null,React.createElement(Avatar,{className:classes.avatarColor},\"1\")),React.createElement(ListItemText,{primary:\"Pick up the power supply in the provided box\"})),React.createElement(ListItem,null,React.createElement(ListItemAvatar,null,React.createElement(Avatar,{className:classes.avatarColor},\"2\")),React.createElement(ListItemText,{primary:\"Plug the power supply in your local power outlet\"})),React.createElement(ListItem,null,React.createElement(ListItemAvatar,null,React.createElement(Avatar,{className:classes.avatarColor},\"3\")),React.createElement(ListItemText,{primary:\"Plug the other end in the provided gateway\"})))),React.createElement(Box,{className:classes.wrapper,m:1},React.createElement(Button,{variant:\"contained\",color:\"primary\",className:buttonClassname,disabled:loading,onClick:handleButtonClick},!success&&'Check gateway power',success&&'Gateway is connected'),loading&&React.createElement(CircularProgress,{size:24,className:classes.buttonProgress}),React.createElement(Snackbar,{open:open,autoHideDuration:2000,onClose:handleClose,className:classes.snackbar},React.createElement(SnackbarContent,{message:\"Gateway power connected\",className:classes.snackColor}))));}","map":{"version":3,"sources":["/Users/markheij/ipmedth_airsupport/frontend/src/steps/Step_4_Gateway_PowerSupply.js"],"names":["React","clsx","Container","Typography","Box","Button","makeStyles","List","ListItem","CircularProgress","ListItemAvatar","Avatar","ListItemText","Snackbar","SnackbarContent","green","useStyles","theme","section1","margin","spacing","avatarColor","backgroundColor","buttonSuccess","buttonProgress","color","zIndex","position","top","left","align","marginTop","marginLeft","snackbar","bottom","snackColor","Step4","classes","useState","loading","setLoading","success","setSuccess","timer","useRef","open","setOpen","handleClose","buttonClassname","useEffect","clearTimeout","current","handleButtonClick","setTimeout","wrapper"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport clsx from 'clsx';\nimport \"../containers/Home.css\";\nimport {\n  Container,\n  Typography,\n  Box,\n  Button,\n  makeStyles,\n  List,\n  ListItem,\n  CircularProgress,\n  ListItemAvatar,\n  Avatar,\n  ListItemText,\n  Snackbar,\n  SnackbarContent,\n} from '@material-ui/core';\nimport {green} from '@material-ui/core/colors';\n\nconst useStyles = makeStyles(theme => ({\n  section1: {\n    margin: theme.spacing(3, 2),\n  },\n  avatarColor:{\n    backgroundColor: \"#599AD5\"\n  },\n  buttonSuccess: {\n    backgroundColor: '#00A49B',\n    '&:hover': {\n      backgroundColor: '#00A49B',\n    },\n    //disabled: 'true'\n  },\n  buttonProgress: {\n    color: green[500],\n    zIndex: 1,\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    align: 'left',\n    marginTop: -12,\n    marginLeft: -12,\n  },\n  snackbar: {\n    bottom: 56,\n  },\n  snackColor: {\n    backgroundColor: \"#00A49B\"\n  }\n}));\n\nexport default function Step4(){\n  const classes = useStyles()\n  const [loading, setLoading] = React.useState(false);\n  const [success, setSuccess] = React.useState(false);\n  const timer = React.useRef();\n  const [open, setOpen] = React.useState(false);\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n\n  const buttonClassname = clsx({\n    [classes.buttonSuccess]: success,\n  });\n\n  React.useEffect(() => {\n    return () => {\n      clearTimeout(timer.current);\n    }\n  }, []);\n\n  const handleButtonClick = () => {\n    if(!loading){\n      setSuccess(false);\n      setLoading(true);\n      timer.current = setTimeout(() =>{\n        setSuccess(true);\n        setLoading(false);\n        setOpen(true);\n      }, 2000);\n    }\n  };\n\n\n  return(\n    <Container>\n          <Box m={1}>\n            <Typography variant=\"overline\">\n              Installation &#10140; Gateway\n            </Typography>\n            <Typography variant=\"h4\">\n              Connecting power\n            </Typography>\n            <Typography display=\"block\" variant=\"body1\">\n                Use the following steps to power on the gateway:\n            </Typography>\n          </Box>\n        <Box m={1}>\n          <List>\n              <ListItem>\n                <ListItemAvatar>\n                  <Avatar className={classes.avatarColor}>\n                    1\n                  </Avatar>\n                </ListItemAvatar>\n                <ListItemText primary=\"Pick up the power supply in the provided box\" />\n              </ListItem>\n              <ListItem>\n                <ListItemAvatar>\n                  <Avatar className={classes.avatarColor}>\n                    2\n                  </Avatar>\n                </ListItemAvatar>\n                <ListItemText primary=\"Plug the power supply in your local power outlet\" />\n              </ListItem>\n              <ListItem>\n                <ListItemAvatar>\n                  <Avatar className={classes.avatarColor}>\n                    3\n                  </Avatar>\n                </ListItemAvatar>\n                <ListItemText primary=\"Plug the other end in the provided gateway\" />\n              </ListItem>\n          </List>\n          </Box>\n          <Box className={classes.wrapper} m={1}>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            className={buttonClassname}\n            disabled={loading}\n            onClick={handleButtonClick}\n            >\n            {!success && 'Check gateway power' }\n            {success && 'Gateway is connected' }\n          </Button>\n          {loading && <CircularProgress size={24} className={classes.buttonProgress} />}\n          <Snackbar\n            open={open}\n            autoHideDuration={2000}\n            onClose={handleClose}\n            className={classes.snackbar}\n          >\n          <SnackbarContent\n            message=\"Gateway power connected\"\n            className={classes.snackColor}\n          />\n          </Snackbar>\n      </Box>\n\n    </Container>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}