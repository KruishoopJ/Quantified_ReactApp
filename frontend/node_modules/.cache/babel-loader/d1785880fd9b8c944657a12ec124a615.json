{"ast":null,"code":"import _regeneratorRuntime from\"/Users/markheij/ipmedth_airsupport/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _classCallCheck from\"/Users/markheij/ipmedth_airsupport/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/markheij/ipmedth_airsupport/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import firebaseConfig from\"./config\";import app from'firebase/app';import'firebase/auth';import'firebase/firestore';var Firebase=/*#__PURE__*/function(){function Firebase(){_classCallCheck(this,Firebase);app.initializeApp(firebaseConfig);this.auth=app.auth();this.db=app.firestore();}//register function that also stores name\n_createClass(Firebase,[{key:\"register\",value:function register(name,email,password){var newUser;return _regeneratorRuntime.async(function register$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return _regeneratorRuntime.awrap(this.auth.createUserWithEmailAndPassword(email,password));case 2:newUser=_context.sent;_context.next=5;return _regeneratorRuntime.awrap(newUser.user.updateProfile({displayName:name}));case 5:return _context.abrupt(\"return\",_context.sent);case 6:case\"end\":return _context.stop();}}},null,this);}//login function that signs in with email and password\n},{key:\"login\",value:function login(email,password){return _regeneratorRuntime.async(function login$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:return _context2.abrupt(\"return\",this.auth.signInWithEmailAndPassword(email,password));case 1:case\"end\":return _context2.stop();}}},null,this);}},{key:\"resetPassword\",value:function resetPassword(email){return _regeneratorRuntime.async(function resetPassword$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:_context3.next=2;return _regeneratorRuntime.awrap(this.auth.sendPasswordResetEmail(email));case 2:case\"end\":return _context3.stop();}}},null,this);}}]);return Firebase;}();var firebase=new Firebase();//firebase object that gets returned (holds both auth functions)\nexport default firebase;","map":{"version":3,"sources":["/Users/markheij/ipmedth_airsupport/frontend/src/firebase/firebase.js"],"names":["firebaseConfig","app","Firebase","initializeApp","auth","db","firestore","name","email","password","createUserWithEmailAndPassword","newUser","user","updateProfile","displayName","signInWithEmailAndPassword","sendPasswordResetEmail","firebase"],"mappings":"2dAAA,MAAOA,CAAAA,cAAP,KAA2B,UAA3B,CACA,MAAOC,CAAAA,GAAP,KAAgB,cAAhB,CACA,MAAO,eAAP,CACA,MAAO,oBAAP,C,GAIMC,CAAAA,Q,yBACF,mBAAc,gCACVD,GAAG,CAACE,aAAJ,CAAkBH,cAAlB,EACA,KAAKI,IAAL,CAAYH,GAAG,CAACG,IAAJ,EAAZ,CACA,KAAKC,EAAL,CAAUJ,GAAG,CAACK,SAAJ,EAAV,CACH,CAED;+DACeC,I,CAAMC,K,CAAOC,Q,iLACF,KAAKL,IAAL,CAAUM,8BAAV,CAClBF,KADkB,CAElBC,QAFkB,C,SAAhBE,O,gEAKOA,OAAO,CAACC,IAAR,CAAaC,aAAb,CAA2B,CACpCC,WAAW,CAAEP,IADuB,CAA3B,C,gHAKjB;oCACYC,K,CAAOC,Q,qJACR,KAAKL,IAAL,CAAUW,0BAAV,CAAqCP,KAArC,CAA4CC,QAA5C,C,+GAGSD,K,8KACV,KAAKJ,IAAL,CAAUY,sBAAV,CAAiCR,KAAjC,C,mFAKd,GAAMS,CAAAA,QAAQ,CAAG,GAAIf,CAAAA,QAAJ,EAAjB,CAEA;AACA,cAAee,CAAAA,QAAf","sourcesContent":["import firebaseConfig from \"./config\";\nimport app from 'firebase/app';\nimport 'firebase/auth'\nimport 'firebase/firestore'\n\n\n\nclass Firebase {\n    constructor() {\n        app.initializeApp(firebaseConfig);\n        this.auth = app.auth()\n        this.db = app.firestore();\n    }\n\n    //register function that also stores name\n    async register(name, email, password){\n        const newUser = await this.auth.createUserWithEmailAndPassword(\n            email,\n            password\n        )\n        //add user info to user profile\n        return await newUser.user.updateProfile({\n            displayName: name\n        });\n    }\n\n    //login function that signs in with email and password\n    async login(email, password){\n        return this.auth.signInWithEmailAndPassword(email, password)\n    }\n\n    async resetPassword(email){\n        await this.auth.sendPasswordResetEmail(email)\n    }\n\n}\n\nconst firebase = new Firebase();\n\n//firebase object that gets returned (holds both auth functions)\nexport default firebase;"]},"metadata":{},"sourceType":"module"}